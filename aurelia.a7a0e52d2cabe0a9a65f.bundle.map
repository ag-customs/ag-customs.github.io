{"version":3,"sources":["webpack:///./~/aurelia-task-queue/dist/commonjs/aurelia-task-queue.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/repeat-utilities.js","webpack:///./~/aurelia-history/dist/commonjs/aurelia-history.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/aurelia-hide-style.js","webpack:///./~/aurelia-templating/dist/es2015/aurelia-templating.js","webpack:///./~/aurelia-binding/dist/es2015/aurelia-binding.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/abstract-repeater.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/analyze-view-factory.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/array-repeat-strategy.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/binding-signaler.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/html-sanitizer.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/if-core.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/map-repeat-strategy.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/null-repeat-strategy.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/number-repeat-strategy.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/repeat-strategy-locator.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/set-repeat-strategy.js","webpack:///./~/aurelia-templating-router/dist/commonjs/router-view.js","webpack:///./~/aurelia-logging/dist/commonjs/aurelia-logging.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/css-resource.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/dynamic-element.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/html-resource-plugin.js","webpack:///./~/aurelia-templating-router/dist/commonjs/route-href.js","webpack:///./~/aurelia-templating-router/dist/commonjs/route-loader.js","webpack:///./~/aurelia-dependency-injection/dist/commonjs/aurelia-dependency-injection.js","webpack:///./~/aurelia-event-aggregator/dist/commonjs/aurelia-event-aggregator.js","webpack:///./~/aurelia-framework/dist/commonjs/aurelia-framework.js","webpack:///./~/aurelia-history-browser/dist/commonjs/aurelia-history-browser.js","webpack:///./~/aurelia-logging-console/dist/commonjs/aurelia-logging-console.js","webpack:///./~/aurelia-route-recognizer/dist/es2015/aurelia-route-recognizer.js","webpack:///./~/aurelia-router/dist/commonjs/aurelia-router.js","webpack:///./~/aurelia-templating-binding/dist/es2015/aurelia-templating-binding.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/aurelia-templating-resources.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/attr-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/binding-mode-behaviors.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/compose.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/debounce-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/else.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/focus.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/hide.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/if.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/repeat.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/replaceable.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/sanitize-html.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/self-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/show.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/signal-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/throttle-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/update-trigger-binding-behavior.js","webpack:///./~/aurelia-templating-resources/dist/commonjs/with.js","webpack:///./~/aurelia-templating-router/dist/commonjs/aurelia-templating-router.js"],"names":[],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,kBAAkB;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;AClMA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,qBAAqB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;AClDD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA,uDAAuD,yBAAyB,EAAE;;AAElF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAAA;;AAEA;AACqC;AACJ;AACO;AACf;AACiK;AACpJ;AAClB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC,+FAAkD,8BAA8B;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gFAAgF,WAAW;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,oDAAoD,KAAK;AACzrD;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,OAAO;AACP;AACA;AACA,eAAe;AACf,SAAS;AACT;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,OAAO;AACP;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,KAAK,qDAAqD,KAAK;AAC9G;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sFAAgD,KAAK,mBAAmB,KAAK,mCAAmC,QAAQ;AACxH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA,iCAAiC;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,+DAA+D,EAAE,eAAe,YAAY;AAC5F;AACA;;AAEA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,kBAAkB;AAClB,eAAe;AACf,iBAAiB;AACjB,mBAAmB;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iDAAiD,QAAQ;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,KAAK;AACL;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,sBAAsB;;AAElE;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAA0D,sCAAsC;AAChG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0DAA0D,aAAa;AACvE;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,wCAAwC,kBAAkB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,kEAAkE;AAClG,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;AACL,yCAAyC,QAAQ;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,OAAO;AACP,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA,KAAK;AACL,gDAAgD,QAAQ;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA,gCAAgC;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA,CAAC,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpwJD;AAAA;;AAEA;AACwB;AACJ;AACD;;AAEnB;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,SAAS;AACxB,6BAA6B,EAAE;AAC/B,2CAA2C,EAAE;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,KAAK;AAChD;;AAEA;AACA,2CAA2C,KAAK;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA,kCAAkC,UAAU;AAC5C;AACA,mDAAmD,UAAU,iCAAiC,gBAAgB;AAC9G;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,YAAY;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,YAAY;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,YAAY;AACvD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,cAAc;;AAEnC,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,eAAe;;AAEpC,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,cAAc;AAClC;;AAEA;AACA;;AAEA;;AAEA,+CAA+C,YAAY;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,2CAA2C,YAAY;AACvD;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;;AAEA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,sCAAsC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B,EAAE;AAC7B,qDAAqD,IAAI;AACzD;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C,qCAAqC,QAAQ,aAAa,OAAO,kBAAkB,SAAS;AAC5F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,yCAAyC,iCAAiC;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8EAA8E,UAAU;;AAExF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC;AAChF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2FAA2F;;AAE3F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;;AAExF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,kBAAkB,iBAAiB,KAAK,IAAI,eAAe;AACtF;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8CAA8C,kBAAkB;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sMAAsM,YAAY;AAClN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,4CAA4C,sDAAsD;AAClG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,gBAAgB;AACrF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,QAAQ;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,IAAI;;AAElE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,oBAAoB;;AAE3E;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;AChhKA;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;AC/DD;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;ACtDA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;AChPD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;AC9BD;;AAEA;AACA;AACA,CAAC;;;;AAID;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;ACpBD;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;ACvFD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;ACpHD;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,G;;;;;;;;ACpBD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;AChED;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;AC7DD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;ACvGD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;;AAEtF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;AAIA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;ACpPD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;ACnMD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;;;AAI5e;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,C;;;;;;;;ACrHA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,C;;;;;;;;AC9BA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;;AAEA,wBAAwB;AACxB,OAAO;AACP;AACA,GAAG;AACH,C;;;;;;;;AC1CA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;;;AAI3Q;;AAEA,6IAA6I,uEAAuE,6CAA6C,iDAAiD,6CAA6C,0CAA0C;AACzY;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,CAAC,gD;;;;;;;;AC7ED;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;;;AAI5e;;AAEA,CAAC;AACD;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA,C;;;;;;;;ACnGA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,aAAa;AAClF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;;AAEA,yGAAyG,eAAe;AACxH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,eAAe;AACxH;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,eAAe;AACtH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;;;AAIA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oEAAoE,eAAe;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,C;;;;;;;;AC/uBA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;;;AAI3Q;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,C;;;;;;;;ACpJA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;;;AAI3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,kCAAkC;AACxG;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC,iHAAiH;AACrJ;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,kCAAkC;AACvG;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,gFAAgF;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAuE;AAC/F;;AAEA;AACA,wBAAwB,wCAAwC,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kFAAkF;AAClG;AACA;AACA,gBAAgB,+CAA+C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sEAAsE;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA,oD;;;;;;;;;ACvnBA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;;;AAI5e;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,GAAG,YAAY;;AAElD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D;AAC7D,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;ACvUA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0FAA0F,eAAe;AACzG;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0FAA0F,eAAe;AACzG;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0FAA0F,eAAe;AACzG;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,G;;;;;;;;;;;;;;;;ACzD4C;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sEAAsE,KAAK;;AAE3E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA,gBAAgB,4EAA4E;AAC5F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,kCAAkC;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iCAAiC;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;;AAEA;;AAEA,kDAAkD,QAAQ;AAC1D;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB;AACxC,OAAO;AACP;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA,qBAAqB,uCAAuC;;AAE5D,oCAAoC,qBAAqB;AACzD;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,aAAa,cAAc,YAAY;AAC7G;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,YAAY,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;;AAEA,iBAAiB,sEAAsE;AACvF;;AAEA;AACA;;AAEA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA,GAAG;;AAEH;AACA,C;;;;;;;;ACncA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;;;AAI5e;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C,QAAQ;AACrD,oCAAoC;AACpC;AACA;AACA;AACA,GAAG;AACH,sCAAsC;AACtC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,iCAAiC,0BAA0B,gCAAgC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,+DAA+D;AAC5F;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA,kCAAkC,+BAA+B;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;AAIA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,OAAO;AAC9C;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,iFAAiF;AAC7G;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAA4D;;AAElG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,oEAAoE;AACpE,iBAAiB,iBAAiB;AAClC,uDAAuD;AACvD,sBAAsB;;AAEtB;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,sEAAsE;AACtE,mBAAmB,iBAAiB;AACpC,yDAAyD;AACzD;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL,sCAAsC,cAAc;AACpD,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,mBAAmB,6EAA6E;;AAEhG;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gEAAgE,2BAA2B;AAC3F,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP,gBAAgB;AAChB,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,gCAAgC;AACtF,GAAG;AACH,2CAA2C,+BAA+B;AAC1E,GAAG;AACH;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;AC75DA;AAAA;;AAEA;AACkP;AACnM;;AAE/C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,QAAQ;AACnD,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA,0BAA0B,EAAE;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oJAA8G,SAAS,iBAAiB,SAAS;AACjJ;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,mKAA6H,SAAS,QAAQ,UAAU,QAAQ,SAAS,IAAI,EAAE,WAAW;AAC1L;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,C;;;;;;;;AC3yBA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E;;;;;;;;AChIA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,e;;;;;;;;ACzBD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,CAAC;AACD;;;AAGA;AACA,CAAC;AACD;;;AAGA;AACA,CAAC;AACD;;;AAGA;AACA,CAAC;AACD;;;AAGA;AACA,CAAC,0B;;;;;;;;AClDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;AC5NA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACjFD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,mD;;;;;;;;ACxDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;AChFD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACjDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0OAA0O,wBAAwB;AAClQ;;AAEA;AACA;;;;AAIA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,+C;;;;;;;;;AC5ID;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC,+C;;;;;;;;AC3TD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,qC;;;;;;;;ACtCD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,0B;;;;;;;;ACjCD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACxCD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACjDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACnED;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACvED;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,e;;;;;;;;ACpDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC,qC;;;;;;;;ACpDD;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8B","file":"aurelia.a7a0e52d2cabe0a9a65f.bundle.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskQueue = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _aureliaPal = require('aurelia-pal');\n\n\n\nvar stackSeparator = '\\nEnqueued in TaskQueue by:\\n';\nvar microStackSeparator = '\\nEnqueued in MicroTaskQueue by:\\n';\n\nfunction makeRequestFlushFromMutationObserver(flush) {\n  var observer = _aureliaPal.DOM.createMutationObserver(flush);\n  var val = 'a';\n  var node = _aureliaPal.DOM.createTextNode('a');\n  var values = Object.create(null);\n  values.a = 'b';\n  values.b = 'a';\n  observer.observe(node, { characterData: true });\n  return function requestFlush() {\n    node.data = val = values[val];\n  };\n}\n\nfunction makeRequestFlushFromTimer(flush) {\n  return function requestFlush() {\n    var timeoutHandle = setTimeout(handleFlushTimer, 0);\n\n    var intervalHandle = setInterval(handleFlushTimer, 50);\n    function handleFlushTimer() {\n      clearTimeout(timeoutHandle);\n      clearInterval(intervalHandle);\n      flush();\n    }\n  };\n}\n\nfunction onError(error, task, longStacks) {\n  if (longStacks && task.stack && (typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object' && error !== null) {\n    error.stack = filterFlushStack(error.stack) + task.stack;\n  }\n\n  if ('onError' in task) {\n    task.onError(error);\n  } else {\n    setTimeout(function () {\n      throw error;\n    }, 0);\n  }\n}\n\nvar TaskQueue = exports.TaskQueue = function () {\n  function TaskQueue() {\n    var _this = this;\n\n    \n\n    this.flushing = false;\n    this.longStacks = false;\n\n    this.microTaskQueue = [];\n    this.microTaskQueueCapacity = 1024;\n    this.taskQueue = [];\n\n    if (_aureliaPal.FEATURE.mutationObserver) {\n      this.requestFlushMicroTaskQueue = makeRequestFlushFromMutationObserver(function () {\n        return _this.flushMicroTaskQueue();\n      });\n    } else {\n      this.requestFlushMicroTaskQueue = makeRequestFlushFromTimer(function () {\n        return _this.flushMicroTaskQueue();\n      });\n    }\n\n    this.requestFlushTaskQueue = makeRequestFlushFromTimer(function () {\n      return _this.flushTaskQueue();\n    });\n  }\n\n  TaskQueue.prototype._flushQueue = function _flushQueue(queue, capacity) {\n    var index = 0;\n    var task = void 0;\n\n    try {\n      this.flushing = true;\n      while (index < queue.length) {\n        task = queue[index];\n        if (this.longStacks) {\n          this.stack = typeof task.stack === 'string' ? task.stack : undefined;\n        }\n        task.call();\n        index++;\n\n        if (index > capacity) {\n          for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n            queue[scan] = queue[scan + index];\n          }\n\n          queue.length -= index;\n          index = 0;\n        }\n      }\n    } catch (error) {\n      onError(error, task, this.longStacks);\n    } finally {\n      this.flushing = false;\n    }\n  };\n\n  TaskQueue.prototype.queueMicroTask = function queueMicroTask(task) {\n    if (this.microTaskQueue.length < 1) {\n      this.requestFlushMicroTaskQueue();\n    }\n\n    if (this.longStacks) {\n      task.stack = this.prepareQueueStack(microStackSeparator);\n    }\n\n    this.microTaskQueue.push(task);\n  };\n\n  TaskQueue.prototype.queueTask = function queueTask(task) {\n    if (this.taskQueue.length < 1) {\n      this.requestFlushTaskQueue();\n    }\n\n    if (this.longStacks) {\n      task.stack = this.prepareQueueStack(stackSeparator);\n    }\n\n    this.taskQueue.push(task);\n  };\n\n  TaskQueue.prototype.flushTaskQueue = function flushTaskQueue() {\n    var queue = this.taskQueue;\n    this.taskQueue = [];\n    this._flushQueue(queue, Number.MAX_VALUE);\n  };\n\n  TaskQueue.prototype.flushMicroTaskQueue = function flushMicroTaskQueue() {\n    var queue = this.microTaskQueue;\n    this._flushQueue(queue, this.microTaskQueueCapacity);\n    queue.length = 0;\n  };\n\n  TaskQueue.prototype.prepareQueueStack = function prepareQueueStack(separator) {\n    var stack = separator + filterQueueStack(captureStack());\n\n    if (typeof this.stack === 'string') {\n      stack = filterFlushStack(stack) + this.stack;\n    }\n\n    return stack;\n  };\n\n  return TaskQueue;\n}();\n\nfunction captureStack() {\n  var error = new Error();\n\n  if (error.stack) {\n    return error.stack;\n  }\n\n  try {\n    throw error;\n  } catch (e) {\n    return e.stack;\n  }\n}\n\nfunction filterQueueStack(stack) {\n  return stack.replace(/^[\\s\\S]*?\\bqueue(Micro)?Task\\b[^\\n]*\\n/, '');\n}\n\nfunction filterFlushStack(stack) {\n  var index = stack.lastIndexOf('flushMicroTaskQueue');\n\n  if (index < 0) {\n    index = stack.lastIndexOf('flushTaskQueue');\n    if (index < 0) {\n      return stack;\n    }\n  }\n\n  index = stack.lastIndexOf('\\n', index);\n\n  return index < 0 ? stack : stack.substr(0, index);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-task-queue/dist/commonjs/aurelia-task-queue.js\n// module id = 103\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateOverrideContexts = updateOverrideContexts;\nexports.createFullOverrideContext = createFullOverrideContext;\nexports.updateOverrideContext = updateOverrideContext;\nexports.getItemsSourceExpression = getItemsSourceExpression;\nexports.unwrapExpression = unwrapExpression;\nexports.isOneTime = isOneTime;\nexports.updateOneTimeBinding = updateOneTimeBinding;\nexports.indexOf = indexOf;\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar oneTime = _aureliaBinding.bindingMode.oneTime;\n\nfunction updateOverrideContexts(views, startIndex) {\n  var length = views.length;\n\n  if (startIndex > 0) {\n    startIndex = startIndex - 1;\n  }\n\n  for (; startIndex < length; ++startIndex) {\n    updateOverrideContext(views[startIndex].overrideContext, startIndex, length);\n  }\n}\n\nfunction createFullOverrideContext(repeat, data, index, length, key) {\n  var bindingContext = {};\n  var overrideContext = (0, _aureliaBinding.createOverrideContext)(bindingContext, repeat.scope.overrideContext);\n\n  if (typeof key !== 'undefined') {\n    bindingContext[repeat.key] = key;\n    bindingContext[repeat.value] = data;\n  } else {\n    bindingContext[repeat.local] = data;\n  }\n  updateOverrideContext(overrideContext, index, length);\n  return overrideContext;\n}\n\nfunction updateOverrideContext(overrideContext, index, length) {\n  var first = index === 0;\n  var last = index === length - 1;\n  var even = index % 2 === 0;\n\n  overrideContext.$index = index;\n  overrideContext.$first = first;\n  overrideContext.$last = last;\n  overrideContext.$middle = !(first || last);\n  overrideContext.$odd = !even;\n  overrideContext.$even = even;\n}\n\nfunction getItemsSourceExpression(instruction, attrName) {\n  return instruction.behaviorInstructions.filter(function (bi) {\n    return bi.originalAttrName === attrName;\n  })[0].attributes.items.sourceExpression;\n}\n\nfunction unwrapExpression(expression) {\n  var unwrapped = false;\n  while (expression instanceof _aureliaBinding.BindingBehavior) {\n    expression = expression.expression;\n  }\n  while (expression instanceof _aureliaBinding.ValueConverter) {\n    expression = expression.expression;\n    unwrapped = true;\n  }\n  return unwrapped ? expression : null;\n}\n\nfunction isOneTime(expression) {\n  while (expression instanceof _aureliaBinding.BindingBehavior) {\n    if (expression.name === 'oneTime') {\n      return true;\n    }\n    expression = expression.expression;\n  }\n  return false;\n}\n\nfunction updateOneTimeBinding(binding) {\n  if (binding.call && binding.mode === oneTime) {\n    binding.call(_aureliaBinding.sourceContext);\n  } else if (binding.updateOneTimeBindings) {\n    binding.updateOneTimeBindings();\n  }\n}\n\nfunction indexOf(array, item, matcher, startIndex) {\n  if (!matcher) {\n    return array.indexOf(item);\n  }\n  var length = array.length;\n  for (var index = startIndex || 0; index < length; index++) {\n    if (matcher(array[index], item)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/repeat-utilities.js\n// module id = 104\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n\nfunction mi(name) {\n  throw new Error('History must implement ' + name + '().');\n}\n\nvar History = exports.History = function () {\n  function History() {\n    \n  }\n\n  History.prototype.activate = function activate(options) {\n    mi('activate');\n  };\n\n  History.prototype.deactivate = function deactivate() {\n    mi('deactivate');\n  };\n\n  History.prototype.getAbsoluteRoot = function getAbsoluteRoot() {\n    mi('getAbsoluteRoot');\n  };\n\n  History.prototype.navigate = function navigate(fragment, options) {\n    mi('navigate');\n  };\n\n  History.prototype.navigateBack = function navigateBack() {\n    mi('navigateBack');\n  };\n\n  History.prototype.setTitle = function setTitle(title) {\n    mi('setTitle');\n  };\n\n  History.prototype.setState = function setState(key, value) {\n    mi('setState');\n  };\n\n  History.prototype.getState = function getState(key) {\n    mi('getState');\n  };\n\n  return History;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-history/dist/commonjs/aurelia-history.js\n// module id = 189\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.aureliaHideClassName = undefined;\nexports.injectAureliaHideStyleAtHead = injectAureliaHideStyleAtHead;\nexports.injectAureliaHideStyleAtBoundary = injectAureliaHideStyleAtBoundary;\n\nvar _aureliaPal = require('aurelia-pal');\n\nvar aureliaHideClassName = exports.aureliaHideClassName = 'aurelia-hide';\n\nvar aureliaHideClass = '.' + aureliaHideClassName + ' { display:none !important; }';\n\nfunction injectAureliaHideStyleAtHead() {\n  _aureliaPal.DOM.injectStyles(aureliaHideClass);\n}\n\nfunction injectAureliaHideStyleAtBoundary(domBoundary) {\n  if (_aureliaPal.FEATURE.shadowDOM && domBoundary && !domBoundary.hasAureliaHideStyle) {\n    domBoundary.hasAureliaHideStyle = true;\n    _aureliaPal.DOM.injectStyles(aureliaHideClass, domBoundary);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/aurelia-hide-style.js\n// module id = 194\n// module chunks = 1","var _class, _temp, _dec, _class2, _dec2, _class3, _dec3, _class4, _dec4, _class5, _dec5, _class6, _dec6, _class7, _class8, _temp2, _class9, _temp3, _class11, _dec7, _class13, _dec8, _class14, _class15, _temp4, _dec9, _class16, _dec10, _class17, _dec11, _class18;\n\nimport * as LogManager from 'aurelia-logging';\nimport { metadata, Origin, protocol } from 'aurelia-metadata';\nimport { DOM, PLATFORM, FEATURE } from 'aurelia-pal';\nimport { TemplateRegistryEntry, Loader } from 'aurelia-loader';\nimport { relativeToFile } from 'aurelia-path';\nimport { Scope, Expression, ValueConverterResource, BindingBehaviorResource, camelCase, Binding, createOverrideContext, subscriberCollection, bindingMode, ObserverLocator, EventManager } from 'aurelia-binding';\nimport { Container, resolver, inject } from 'aurelia-dependency-injection';\nimport { TaskQueue } from 'aurelia-task-queue';\n\nexport const animationEvent = {\n  enterBegin: 'animation:enter:begin',\n  enterActive: 'animation:enter:active',\n  enterDone: 'animation:enter:done',\n  enterTimeout: 'animation:enter:timeout',\n\n  leaveBegin: 'animation:leave:begin',\n  leaveActive: 'animation:leave:active',\n  leaveDone: 'animation:leave:done',\n  leaveTimeout: 'animation:leave:timeout',\n\n  staggerNext: 'animation:stagger:next',\n\n  removeClassBegin: 'animation:remove-class:begin',\n  removeClassActive: 'animation:remove-class:active',\n  removeClassDone: 'animation:remove-class:done',\n  removeClassTimeout: 'animation:remove-class:timeout',\n\n  addClassBegin: 'animation:add-class:begin',\n  addClassActive: 'animation:add-class:active',\n  addClassDone: 'animation:add-class:done',\n  addClassTimeout: 'animation:add-class:timeout',\n\n  animateBegin: 'animation:animate:begin',\n  animateActive: 'animation:animate:active',\n  animateDone: 'animation:animate:done',\n  animateTimeout: 'animation:animate:timeout',\n\n  sequenceBegin: 'animation:sequence:begin',\n  sequenceDone: 'animation:sequence:done'\n};\n\nexport let Animator = class Animator {\n  enter(element) {\n    return Promise.resolve(false);\n  }\n\n  leave(element) {\n    return Promise.resolve(false);\n  }\n\n  removeClass(element, className) {\n    element.classList.remove(className);\n    return Promise.resolve(false);\n  }\n\n  addClass(element, className) {\n    element.classList.add(className);\n    return Promise.resolve(false);\n  }\n\n  animate(element, className) {\n    return Promise.resolve(false);\n  }\n\n  runSequence(animations) {}\n\n  registerEffect(effectName, properties) {}\n\n  unregisterEffect(effectName) {}\n};\n\nexport let CompositionTransactionNotifier = class CompositionTransactionNotifier {\n  constructor(owner) {\n    this.owner = owner;\n    this.owner._compositionCount++;\n  }\n\n  done() {\n    this.owner._compositionCount--;\n    this.owner._tryCompleteTransaction();\n  }\n};\n\nexport let CompositionTransactionOwnershipToken = class CompositionTransactionOwnershipToken {\n  constructor(owner) {\n    this.owner = owner;\n    this.owner._ownershipToken = this;\n    this.thenable = this._createThenable();\n  }\n\n  waitForCompositionComplete() {\n    this.owner._tryCompleteTransaction();\n    return this.thenable;\n  }\n\n  resolve() {\n    this._resolveCallback();\n  }\n\n  _createThenable() {\n    return new Promise((resolve, reject) => {\n      this._resolveCallback = resolve;\n    });\n  }\n};\n\nexport let CompositionTransaction = class CompositionTransaction {\n  constructor() {\n    this._ownershipToken = null;\n    this._compositionCount = 0;\n  }\n\n  tryCapture() {\n    return this._ownershipToken === null ? new CompositionTransactionOwnershipToken(this) : null;\n  }\n\n  enlist() {\n    return new CompositionTransactionNotifier(this);\n  }\n\n  _tryCompleteTransaction() {\n    if (this._compositionCount <= 0) {\n      this._compositionCount = 0;\n\n      if (this._ownershipToken !== null) {\n        let token = this._ownershipToken;\n        this._ownershipToken = null;\n        token.resolve();\n      }\n    }\n  }\n};\n\nconst capitalMatcher = /([A-Z])/g;\n\nfunction addHyphenAndLower(char) {\n  return '-' + char.toLowerCase();\n}\n\nexport function _hyphenate(name) {\n  return (name.charAt(0).toLowerCase() + name.slice(1)).replace(capitalMatcher, addHyphenAndLower);\n}\n\nexport function _isAllWhitespace(node) {\n  return !(node.auInterpolationTarget || /[^\\t\\n\\r ]/.test(node.textContent));\n}\n\nexport let ViewEngineHooksResource = class ViewEngineHooksResource {\n  constructor() {}\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerViewEngineHooks(this.instance);\n  }\n\n  load(container, target) {}\n\n  static convention(name) {\n    if (name.endsWith('ViewEngineHooks')) {\n      return new ViewEngineHooksResource();\n    }\n  }\n};\n\nexport function viewEngineHooks(target) {\n  let deco = function (t) {\n    metadata.define(metadata.resource, new ViewEngineHooksResource(), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport let ElementEvents = class ElementEvents {\n  constructor(element) {\n    this.element = element;\n    this.subscriptions = {};\n  }\n\n  _enqueueHandler(handler) {\n    this.subscriptions[handler.eventName] = this.subscriptions[handler.eventName] || [];\n    this.subscriptions[handler.eventName].push(handler);\n  }\n\n  _dequeueHandler(handler) {\n    let index;\n    let subscriptions = this.subscriptions[handler.eventName];\n    if (subscriptions) {\n      index = subscriptions.indexOf(handler);\n      if (index > -1) {\n        subscriptions.splice(index, 1);\n      }\n    }\n    return handler;\n  }\n\n  publish(eventName, detail = {}, bubbles = true, cancelable = true) {\n    let event = DOM.createCustomEvent(eventName, { cancelable, bubbles, detail });\n    this.element.dispatchEvent(event);\n  }\n\n  subscribe(eventName, handler, captureOrOptions = true) {\n    if (typeof handler === 'function') {\n      const eventHandler = new EventHandlerImpl(this, eventName, handler, captureOrOptions, false);\n      return eventHandler;\n    }\n\n    return undefined;\n  }\n\n  subscribeOnce(eventName, handler, captureOrOptions = true) {\n    if (typeof handler === 'function') {\n      const eventHandler = new EventHandlerImpl(this, eventName, handler, captureOrOptions, true);\n      return eventHandler;\n    }\n\n    return undefined;\n  }\n\n  dispose(eventName) {\n    if (eventName && typeof eventName === 'string') {\n      let subscriptions = this.subscriptions[eventName];\n      if (subscriptions) {\n        while (subscriptions.length) {\n          let subscription = subscriptions.pop();\n          if (subscription) {\n            subscription.dispose();\n          }\n        }\n      }\n    } else {\n      this.disposeAll();\n    }\n  }\n\n  disposeAll() {\n    for (let key in this.subscriptions) {\n      this.dispose(key);\n    }\n  }\n};\n\nlet EventHandlerImpl = class EventHandlerImpl {\n  constructor(owner, eventName, handler, captureOrOptions, once) {\n    this.owner = owner;\n    this.eventName = eventName;\n    this.handler = handler;\n\n    this.capture = typeof captureOrOptions === 'boolean' ? captureOrOptions : captureOrOptions.capture;\n    this.bubbles = !this.capture;\n    this.captureOrOptions = captureOrOptions;\n    this.once = once;\n    owner.element.addEventListener(eventName, this, captureOrOptions);\n    owner._enqueueHandler(this);\n  }\n\n  handleEvent(e) {\n    const fn = this.handler;\n    fn(e);\n    if (this.once) {\n      this.dispose();\n    }\n  }\n\n  dispose() {\n    this.owner.element.removeEventListener(this.eventName, this, this.captureOrOptions);\n    this.owner._dequeueHandler(this);\n    this.owner = this.handler = null;\n  }\n};\n\nexport let ResourceLoadContext = class ResourceLoadContext {\n  constructor() {\n    this.dependencies = {};\n  }\n\n  addDependency(url) {\n    this.dependencies[url] = true;\n  }\n\n  hasDependency(url) {\n    return url in this.dependencies;\n  }\n};\n\nexport let ViewCompileInstruction = class ViewCompileInstruction {\n  constructor(targetShadowDOM = false, compileSurrogate = false) {\n    this.targetShadowDOM = targetShadowDOM;\n    this.compileSurrogate = compileSurrogate;\n    this.associatedModuleId = null;\n  }\n};\n\nViewCompileInstruction.normal = new ViewCompileInstruction();\n\nexport let BehaviorInstruction = class BehaviorInstruction {\n  static enhance() {\n    let instruction = new BehaviorInstruction();\n    instruction.enhance = true;\n    return instruction;\n  }\n\n  static unitTest(type, attributes) {\n    let instruction = new BehaviorInstruction();\n    instruction.type = type;\n    instruction.attributes = attributes || {};\n    return instruction;\n  }\n\n  static element(node, type) {\n    let instruction = new BehaviorInstruction();\n    instruction.type = type;\n    instruction.attributes = {};\n    instruction.anchorIsContainer = !(node.hasAttribute('containerless') || type.containerless);\n    instruction.initiatedByBehavior = true;\n    return instruction;\n  }\n\n  static attribute(attrName, type) {\n    let instruction = new BehaviorInstruction();\n    instruction.attrName = attrName;\n    instruction.type = type || null;\n    instruction.attributes = {};\n    return instruction;\n  }\n\n  static dynamic(host, viewModel, viewFactory) {\n    let instruction = new BehaviorInstruction();\n    instruction.host = host;\n    instruction.viewModel = viewModel;\n    instruction.viewFactory = viewFactory;\n    instruction.inheritBindingContext = true;\n    return instruction;\n  }\n};\n\nconst biProto = BehaviorInstruction.prototype;\nbiProto.initiatedByBehavior = false;\nbiProto.enhance = false;\nbiProto.partReplacements = null;\nbiProto.viewFactory = null;\nbiProto.originalAttrName = null;\nbiProto.skipContentProcessing = false;\nbiProto.contentFactory = null;\nbiProto.viewModel = null;\nbiProto.anchorIsContainer = false;\nbiProto.host = null;\nbiProto.attributes = null;\nbiProto.type = null;\nbiProto.attrName = null;\nbiProto.inheritBindingContext = false;\n\nBehaviorInstruction.normal = new BehaviorInstruction();\n\nexport let TargetInstruction = (_temp = _class = class TargetInstruction {\n  static shadowSlot(parentInjectorId) {\n    let instruction = new TargetInstruction();\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.shadowSlot = true;\n    return instruction;\n  }\n\n  static contentExpression(expression) {\n    let instruction = new TargetInstruction();\n    instruction.contentExpression = expression;\n    return instruction;\n  }\n\n  static letElement(expressions) {\n    let instruction = new TargetInstruction();\n    instruction.expressions = expressions;\n    instruction.letElement = true;\n    return instruction;\n  }\n\n  static lifting(parentInjectorId, liftingInstruction) {\n    let instruction = new TargetInstruction();\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.expressions = TargetInstruction.noExpressions;\n    instruction.behaviorInstructions = [liftingInstruction];\n    instruction.viewFactory = liftingInstruction.viewFactory;\n    instruction.providers = [liftingInstruction.type.target];\n    instruction.lifting = true;\n    return instruction;\n  }\n\n  static normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction) {\n    let instruction = new TargetInstruction();\n    instruction.injectorId = injectorId;\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.providers = providers;\n    instruction.behaviorInstructions = behaviorInstructions;\n    instruction.expressions = expressions;\n    instruction.anchorIsContainer = elementInstruction ? elementInstruction.anchorIsContainer : true;\n    instruction.elementInstruction = elementInstruction;\n    return instruction;\n  }\n\n  static surrogate(providers, behaviorInstructions, expressions, values) {\n    let instruction = new TargetInstruction();\n    instruction.expressions = expressions;\n    instruction.behaviorInstructions = behaviorInstructions;\n    instruction.providers = providers;\n    instruction.values = values;\n    return instruction;\n  }\n}, _class.noExpressions = Object.freeze([]), _temp);\n\nconst tiProto = TargetInstruction.prototype;\n\ntiProto.injectorId = null;\ntiProto.parentInjectorId = null;\n\ntiProto.shadowSlot = false;\ntiProto.slotName = null;\ntiProto.slotFallbackFactory = null;\n\ntiProto.contentExpression = null;\ntiProto.letElement = false;\n\ntiProto.expressions = null;\ntiProto.expressions = null;\ntiProto.providers = null;\n\ntiProto.viewFactory = null;\n\ntiProto.anchorIsContainer = false;\ntiProto.elementInstruction = null;\ntiProto.lifting = false;\n\ntiProto.values = null;\n\nexport const viewStrategy = protocol.create('aurelia:view-strategy', {\n  validate(target) {\n    if (!(typeof target.loadViewFactory === 'function')) {\n      return 'View strategies must implement: loadViewFactory(viewEngine: ViewEngine, compileInstruction: ViewCompileInstruction, loadContext?: ResourceLoadContext): Promise<ViewFactory>';\n    }\n\n    return true;\n  },\n  compose(target) {\n    if (!(typeof target.makeRelativeTo === 'function')) {\n      target.makeRelativeTo = PLATFORM.noop;\n    }\n  }\n});\n\nexport let RelativeViewStrategy = (_dec = viewStrategy(), _dec(_class2 = class RelativeViewStrategy {\n  constructor(path) {\n    this.path = path;\n    this.absolutePath = null;\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    if (this.absolutePath === null && this.moduleId) {\n      this.absolutePath = relativeToFile(this.path, this.moduleId);\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(this.absolutePath || this.path, compileInstruction, loadContext, target);\n  }\n\n  makeRelativeTo(file) {\n    if (this.absolutePath === null) {\n      this.absolutePath = relativeToFile(this.path, file);\n    }\n  }\n}) || _class2);\n\nexport let ConventionalViewStrategy = (_dec2 = viewStrategy(), _dec2(_class3 = class ConventionalViewStrategy {\n  constructor(viewLocator, origin) {\n    this.moduleId = origin.moduleId;\n    this.viewUrl = viewLocator.convertOriginToViewUrl(origin);\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(this.viewUrl, compileInstruction, loadContext, target);\n  }\n}) || _class3);\n\nexport let NoViewStrategy = (_dec3 = viewStrategy(), _dec3(_class4 = class NoViewStrategy {\n  constructor(dependencies, dependencyBaseUrl) {\n    this.dependencies = dependencies || null;\n    this.dependencyBaseUrl = dependencyBaseUrl || '';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n    let dependencies = this.dependencies;\n\n    if (entry && entry.factoryIsReady) {\n      return Promise.resolve(null);\n    }\n\n    this.entry = entry = new TemplateRegistryEntry(this.moduleId || this.dependencyBaseUrl);\n\n    entry.dependencies = [];\n    entry.templateIsLoaded = true;\n\n    if (dependencies !== null) {\n      for (let i = 0, ii = dependencies.length; i < ii; ++i) {\n        let current = dependencies[i];\n\n        if (typeof current === 'string' || typeof current === 'function') {\n          entry.addDependency(current);\n        } else {\n          entry.addDependency(current.from, current.as);\n        }\n      }\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class4);\n\nexport let TemplateRegistryViewStrategy = (_dec4 = viewStrategy(), _dec4(_class5 = class TemplateRegistryViewStrategy {\n  constructor(moduleId, entry) {\n    this.moduleId = moduleId;\n    this.entry = entry;\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n\n    if (entry.factoryIsReady) {\n      return Promise.resolve(entry.factory);\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class5);\n\nexport let InlineViewStrategy = (_dec5 = viewStrategy(), _dec5(_class6 = class InlineViewStrategy {\n  constructor(markup, dependencies, dependencyBaseUrl) {\n    this.markup = markup;\n    this.dependencies = dependencies || null;\n    this.dependencyBaseUrl = dependencyBaseUrl || '';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n    let dependencies = this.dependencies;\n\n    if (entry && entry.factoryIsReady) {\n      return Promise.resolve(entry.factory);\n    }\n\n    this.entry = entry = new TemplateRegistryEntry(this.moduleId || this.dependencyBaseUrl);\n    entry.template = DOM.createTemplateFromMarkup(this.markup);\n\n    if (dependencies !== null) {\n      for (let i = 0, ii = dependencies.length; i < ii; ++i) {\n        let current = dependencies[i];\n\n        if (typeof current === 'string' || typeof current === 'function') {\n          entry.addDependency(current);\n        } else {\n          entry.addDependency(current.from, current.as);\n        }\n      }\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class6);\n\nexport let StaticViewStrategy = (_dec6 = viewStrategy(), _dec6(_class7 = class StaticViewStrategy {\n\n  constructor(config) {\n    if (typeof config === 'string' || config instanceof DOM.Element && config.tagName === 'TEMPLATE') {\n      config = {\n        template: config\n      };\n    }\n    this.template = config.template;\n    this.dependencies = config.dependencies || [];\n    this.factoryIsReady = false;\n    this.onReady = null;\n    this.moduleId = 'undefined';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    if (this.factoryIsReady) {\n      return Promise.resolve(this.factory);\n    }\n    let deps = this.dependencies;\n    deps = typeof deps === 'function' ? deps() : deps;\n    deps = deps ? deps : [];\n    deps = Array.isArray(deps) ? deps : [deps];\n\n    return Promise.all(deps).then(dependencies => {\n      const container = viewEngine.container;\n      const appResources = viewEngine.appResources;\n      const viewCompiler = viewEngine.viewCompiler;\n      const viewResources = new ViewResources(appResources);\n\n      let resource;\n      let elDeps = [];\n\n      if (target) {\n        viewResources.autoRegister(container, target);\n      }\n\n      for (let dep of dependencies) {\n        if (typeof dep === 'function') {\n          resource = viewResources.autoRegister(container, dep);\n          if (resource.elementName !== null) {\n            elDeps.push(resource);\n          }\n        } else if (dep && typeof dep === 'object') {\n          for (let key in dep) {\n            let exported = dep[key];\n            if (typeof exported === 'function') {\n              resource = viewResources.autoRegister(container, exported);\n              if (resource.elementName !== null) {\n                elDeps.push(resource);\n              }\n            }\n          }\n        } else {\n          throw new Error(`dependency neither function nor object. Received: \"${typeof dep}\"`);\n        }\n      }\n\n      return Promise.all(elDeps.map(el => el.load(container, el.target))).then(() => {\n        const factory = this.template !== null ? viewCompiler.compile(this.template, viewResources, compileInstruction) : null;\n        this.factoryIsReady = true;\n        this.factory = factory;\n        return factory;\n      });\n    });\n  }\n}) || _class7);\n\nexport let ViewLocator = (_temp2 = _class8 = class ViewLocator {\n  getViewStrategy(value) {\n    if (!value) {\n      return null;\n    }\n\n    if (typeof value === 'object' && 'getViewStrategy' in value) {\n      let origin = Origin.get(value.constructor);\n\n      value = value.getViewStrategy();\n\n      if (typeof value === 'string') {\n        value = new RelativeViewStrategy(value);\n      }\n\n      viewStrategy.assert(value);\n\n      if (origin.moduleId) {\n        value.makeRelativeTo(origin.moduleId);\n      }\n\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      value = new RelativeViewStrategy(value);\n    }\n\n    if (viewStrategy.validate(value)) {\n      return value;\n    }\n\n    if (typeof value !== 'function') {\n      value = value.constructor;\n    }\n\n    if ('$view' in value) {\n      let c = value.$view;\n      let view;\n      c = typeof c === 'function' ? c.call(value) : c;\n      if (c === null) {\n        view = new NoViewStrategy();\n      } else {\n        view = c instanceof StaticViewStrategy ? c : new StaticViewStrategy(c);\n      }\n      metadata.define(ViewLocator.viewStrategyMetadataKey, view, value);\n      return view;\n    }\n\n    let origin = Origin.get(value);\n    let strategy = metadata.get(ViewLocator.viewStrategyMetadataKey, value);\n\n    if (!strategy) {\n      if (!origin.moduleId) {\n        throw new Error('Cannot determine default view strategy for object.', value);\n      }\n\n      strategy = this.createFallbackViewStrategy(origin);\n    } else if (origin.moduleId) {\n      strategy.moduleId = origin.moduleId;\n    }\n\n    return strategy;\n  }\n\n  createFallbackViewStrategy(origin) {\n    return new ConventionalViewStrategy(this, origin);\n  }\n\n  convertOriginToViewUrl(origin) {\n    let moduleId = origin.moduleId;\n    let id = moduleId.endsWith('.js') || moduleId.endsWith('.ts') ? moduleId.substring(0, moduleId.length - 3) : moduleId;\n    return id + '.html';\n  }\n}, _class8.viewStrategyMetadataKey = 'aurelia:view-strategy', _temp2);\n\nfunction mi(name) {\n  throw new Error(`BindingLanguage must implement ${name}().`);\n}\n\nexport let BindingLanguage = class BindingLanguage {\n  inspectAttribute(resources, elementName, attrName, attrValue) {\n    mi('inspectAttribute');\n  }\n\n  createAttributeInstruction(resources, element, info, existingInstruction) {\n    mi('createAttributeInstruction');\n  }\n\n  createLetExpressions(resources, element) {\n    mi('createLetExpressions');\n  }\n\n  inspectTextContent(resources, value) {\n    mi('inspectTextContent');\n  }\n};\n\nlet noNodes = Object.freeze([]);\n\nexport let SlotCustomAttribute = class SlotCustomAttribute {\n  static inject() {\n    return [DOM.Element];\n  }\n\n  constructor(element) {\n    this.element = element;\n    this.element.auSlotAttribute = this;\n  }\n\n  valueChanged(newValue, oldValue) {}\n};\n\nexport let PassThroughSlot = class PassThroughSlot {\n  constructor(anchor, name, destinationName, fallbackFactory) {\n    this.anchor = anchor;\n    this.anchor.viewSlot = this;\n    this.name = name;\n    this.destinationName = destinationName;\n    this.fallbackFactory = fallbackFactory;\n    this.destinationSlot = null;\n    this.projections = 0;\n    this.contentView = null;\n\n    let attr = new SlotCustomAttribute(this.anchor);\n    attr.value = this.destinationName;\n  }\n\n  get needsFallbackRendering() {\n    return this.fallbackFactory && this.projections === 0;\n  }\n\n  renderFallbackContent(view, nodes, projectionSource, index) {\n    if (this.contentView === null) {\n      this.contentView = this.fallbackFactory.create(this.ownerView.container);\n      this.contentView.bind(this.ownerView.bindingContext, this.ownerView.overrideContext);\n\n      let slots = Object.create(null);\n      slots[this.destinationSlot.name] = this.destinationSlot;\n\n      ShadowDOM.distributeView(this.contentView, slots, projectionSource, index, this.destinationSlot.name);\n    }\n  }\n\n  passThroughTo(destinationSlot) {\n    this.destinationSlot = destinationSlot;\n  }\n\n  addNode(view, node, projectionSource, index) {\n    if (this.contentView !== null) {\n      this.contentView.removeNodes();\n      this.contentView.detached();\n      this.contentView.unbind();\n      this.contentView = null;\n    }\n\n    if (node.viewSlot instanceof PassThroughSlot) {\n      node.viewSlot.passThroughTo(this);\n      return;\n    }\n\n    this.projections++;\n    this.destinationSlot.addNode(view, node, projectionSource, index);\n  }\n\n  removeView(view, projectionSource) {\n    this.projections--;\n    this.destinationSlot.removeView(view, projectionSource);\n\n    if (this.needsFallbackRendering) {\n      this.renderFallbackContent(null, noNodes, projectionSource);\n    }\n  }\n\n  removeAll(projectionSource) {\n    this.projections = 0;\n    this.destinationSlot.removeAll(projectionSource);\n\n    if (this.needsFallbackRendering) {\n      this.renderFallbackContent(null, noNodes, projectionSource);\n    }\n  }\n\n  projectFrom(view, projectionSource) {\n    this.destinationSlot.projectFrom(view, projectionSource);\n  }\n\n  created(ownerView) {\n    this.ownerView = ownerView;\n  }\n\n  bind(view) {\n    if (this.contentView) {\n      this.contentView.bind(view.bindingContext, view.overrideContext);\n    }\n  }\n\n  attached() {\n    if (this.contentView) {\n      this.contentView.attached();\n    }\n  }\n\n  detached() {\n    if (this.contentView) {\n      this.contentView.detached();\n    }\n  }\n\n  unbind() {\n    if (this.contentView) {\n      this.contentView.unbind();\n    }\n  }\n};\n\nexport let ShadowSlot = class ShadowSlot {\n  constructor(anchor, name, fallbackFactory) {\n    this.anchor = anchor;\n    this.anchor.isContentProjectionSource = true;\n    this.anchor.viewSlot = this;\n    this.name = name;\n    this.fallbackFactory = fallbackFactory;\n    this.contentView = null;\n    this.projections = 0;\n    this.children = [];\n    this.projectFromAnchors = null;\n    this.destinationSlots = null;\n  }\n\n  get needsFallbackRendering() {\n    return this.fallbackFactory && this.projections === 0;\n  }\n\n  addNode(view, node, projectionSource, index, destination) {\n    if (this.contentView !== null) {\n      this.contentView.removeNodes();\n      this.contentView.detached();\n      this.contentView.unbind();\n      this.contentView = null;\n    }\n\n    if (node.viewSlot instanceof PassThroughSlot) {\n      node.viewSlot.passThroughTo(this);\n      return;\n    }\n\n    if (this.destinationSlots !== null) {\n      ShadowDOM.distributeNodes(view, [node], this.destinationSlots, this, index);\n    } else {\n      node.auOwnerView = view;\n      node.auProjectionSource = projectionSource;\n      node.auAssignedSlot = this;\n\n      let anchor = this._findAnchor(view, node, projectionSource, index);\n      let parent = anchor.parentNode;\n\n      parent.insertBefore(node, anchor);\n      this.children.push(node);\n      this.projections++;\n    }\n  }\n\n  removeView(view, projectionSource) {\n    if (this.destinationSlots !== null) {\n      ShadowDOM.undistributeView(view, this.destinationSlots, this);\n    } else if (this.contentView && this.contentView.hasSlots) {\n      ShadowDOM.undistributeView(view, this.contentView.slots, projectionSource);\n    } else {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n      if (found) {\n        let children = found.auProjectionChildren;\n\n        for (let i = 0, ii = children.length; i < ii; ++i) {\n          let child = children[i];\n\n          if (child.auOwnerView === view) {\n            children.splice(i, 1);\n            view.fragment.appendChild(child);\n            i--;ii--;\n            this.projections--;\n          }\n        }\n\n        if (this.needsFallbackRendering) {\n          this.renderFallbackContent(view, noNodes, projectionSource);\n        }\n      }\n    }\n  }\n\n  removeAll(projectionSource) {\n    if (this.destinationSlots !== null) {\n      ShadowDOM.undistributeAll(this.destinationSlots, this);\n    } else if (this.contentView && this.contentView.hasSlots) {\n      ShadowDOM.undistributeAll(this.contentView.slots, projectionSource);\n    } else {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n\n      if (found) {\n        let children = found.auProjectionChildren;\n        for (let i = 0, ii = children.length; i < ii; ++i) {\n          let child = children[i];\n          child.auOwnerView.fragment.appendChild(child);\n          this.projections--;\n        }\n\n        found.auProjectionChildren = [];\n\n        if (this.needsFallbackRendering) {\n          this.renderFallbackContent(null, noNodes, projectionSource);\n        }\n      }\n    }\n  }\n\n  _findAnchor(view, node, projectionSource, index) {\n    if (projectionSource) {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n      if (found) {\n        if (index !== undefined) {\n          let children = found.auProjectionChildren;\n          let viewIndex = -1;\n          let lastView;\n\n          for (let i = 0, ii = children.length; i < ii; ++i) {\n            let current = children[i];\n\n            if (current.auOwnerView !== lastView) {\n              viewIndex++;\n              lastView = current.auOwnerView;\n\n              if (viewIndex >= index && lastView !== view) {\n                children.splice(i, 0, node);\n                return current;\n              }\n            }\n          }\n        }\n\n        found.auProjectionChildren.push(node);\n        return found;\n      }\n    }\n\n    return this.anchor;\n  }\n\n  projectTo(slots) {\n    this.destinationSlots = slots;\n  }\n\n  projectFrom(view, projectionSource) {\n    let anchor = DOM.createComment('anchor');\n    let parent = this.anchor.parentNode;\n    anchor.auSlotProjectFrom = projectionSource;\n    anchor.auOwnerView = view;\n    anchor.auProjectionChildren = [];\n    parent.insertBefore(anchor, this.anchor);\n    this.children.push(anchor);\n\n    if (this.projectFromAnchors === null) {\n      this.projectFromAnchors = [];\n    }\n\n    this.projectFromAnchors.push(anchor);\n  }\n\n  renderFallbackContent(view, nodes, projectionSource, index) {\n    if (this.contentView === null) {\n      this.contentView = this.fallbackFactory.create(this.ownerView.container);\n      this.contentView.bind(this.ownerView.bindingContext, this.ownerView.overrideContext);\n      this.contentView.insertNodesBefore(this.anchor);\n    }\n\n    if (this.contentView.hasSlots) {\n      let slots = this.contentView.slots;\n      let projectFromAnchors = this.projectFromAnchors;\n\n      if (projectFromAnchors !== null) {\n        for (let slotName in slots) {\n          let slot = slots[slotName];\n\n          for (let i = 0, ii = projectFromAnchors.length; i < ii; ++i) {\n            let anchor = projectFromAnchors[i];\n            slot.projectFrom(anchor.auOwnerView, anchor.auSlotProjectFrom);\n          }\n        }\n      }\n\n      this.fallbackSlots = slots;\n      ShadowDOM.distributeNodes(view, nodes, slots, projectionSource, index);\n    }\n  }\n\n  created(ownerView) {\n    this.ownerView = ownerView;\n  }\n\n  bind(view) {\n    if (this.contentView) {\n      this.contentView.bind(view.bindingContext, view.overrideContext);\n    }\n  }\n\n  attached() {\n    if (this.contentView) {\n      this.contentView.attached();\n    }\n  }\n\n  detached() {\n    if (this.contentView) {\n      this.contentView.detached();\n    }\n  }\n\n  unbind() {\n    if (this.contentView) {\n      this.contentView.unbind();\n    }\n  }\n};\n\nexport let ShadowDOM = (_temp3 = _class9 = class ShadowDOM {\n\n  static getSlotName(node) {\n    if (node.auSlotAttribute === undefined) {\n      return ShadowDOM.defaultSlotKey;\n    }\n\n    return node.auSlotAttribute.value;\n  }\n\n  static distributeView(view, slots, projectionSource, index, destinationOverride) {\n    let nodes;\n\n    if (view === null) {\n      nodes = noNodes;\n    } else {\n      let childNodes = view.fragment.childNodes;\n      let ii = childNodes.length;\n      nodes = new Array(ii);\n\n      for (let i = 0; i < ii; ++i) {\n        nodes[i] = childNodes[i];\n      }\n    }\n\n    ShadowDOM.distributeNodes(view, nodes, slots, projectionSource, index, destinationOverride);\n  }\n\n  static undistributeView(view, slots, projectionSource) {\n    for (let slotName in slots) {\n      slots[slotName].removeView(view, projectionSource);\n    }\n  }\n\n  static undistributeAll(slots, projectionSource) {\n    for (let slotName in slots) {\n      slots[slotName].removeAll(projectionSource);\n    }\n  }\n\n  static distributeNodes(view, nodes, slots, projectionSource, index, destinationOverride) {\n    for (let i = 0, ii = nodes.length; i < ii; ++i) {\n      let currentNode = nodes[i];\n      let nodeType = currentNode.nodeType;\n\n      if (currentNode.isContentProjectionSource) {\n        currentNode.viewSlot.projectTo(slots);\n\n        for (let slotName in slots) {\n          slots[slotName].projectFrom(view, currentNode.viewSlot);\n        }\n\n        nodes.splice(i, 1);\n        ii--;i--;\n      } else if (nodeType === 1 || nodeType === 3 || currentNode.viewSlot instanceof PassThroughSlot) {\n        if (nodeType === 3 && _isAllWhitespace(currentNode)) {\n          nodes.splice(i, 1);\n          ii--;i--;\n        } else {\n          let found = slots[destinationOverride || ShadowDOM.getSlotName(currentNode)];\n\n          if (found) {\n            found.addNode(view, currentNode, projectionSource, index);\n            nodes.splice(i, 1);\n            ii--;i--;\n          }\n        }\n      } else {\n        nodes.splice(i, 1);\n        ii--;i--;\n      }\n    }\n\n    for (let slotName in slots) {\n      let slot = slots[slotName];\n\n      if (slot.needsFallbackRendering) {\n        slot.renderFallbackContent(view, nodes, projectionSource, index);\n      }\n    }\n  }\n}, _class9.defaultSlotKey = '__au-default-slot-key__', _temp3);\n\nfunction register(lookup, name, resource, type) {\n  if (!name) {\n    return;\n  }\n\n  let existing = lookup[name];\n  if (existing) {\n    if (existing !== resource) {\n      throw new Error(`Attempted to register ${type} when one with the same name already exists. Name: ${name}.`);\n    }\n\n    return;\n  }\n\n  lookup[name] = resource;\n}\n\nexport function validateBehaviorName(name, type) {\n  if (/[A-Z]/.test(name)) {\n    let newName = _hyphenate(name);\n    LogManager.getLogger('templating').warn(`'${name}' is not a valid ${type} name and has been converted to '${newName}'. Upper-case letters are not allowed because the DOM is not case-sensitive.`);\n    return newName;\n  }\n  return name;\n}\n\nconst conventionMark = '__au_resource__';\n\nexport let ViewResources = class ViewResources {\n  static convention(target, existing) {\n    let resource;\n\n    if (existing && conventionMark in existing) {\n      return existing;\n    }\n    if ('$resource' in target) {\n      let config = target.$resource;\n\n      if (typeof config === 'string') {\n        resource = existing || new HtmlBehaviorResource();\n        resource[conventionMark] = true;\n        if (!resource.elementName) {\n          resource.elementName = validateBehaviorName(config, 'custom element');\n        }\n      } else {\n        if (typeof config === 'function') {\n          config = config.call(target);\n        }\n        if (typeof config === 'string') {\n          config = { name: config };\n        }\n\n        config = Object.assign({}, config);\n\n        let resourceType = config.type || 'element';\n\n        let name = config.name;\n        switch (resourceType) {\n          case 'element':case 'attribute':\n            resource = existing || new HtmlBehaviorResource();\n            resource[conventionMark] = true;\n            if (resourceType === 'element') {\n              if (!resource.elementName) {\n                resource.elementName = name ? validateBehaviorName(name, 'custom element') : _hyphenate(target.name);\n              }\n            } else {\n              if (!resource.attributeName) {\n                resource.attributeName = name ? validateBehaviorName(name, 'custom attribute') : _hyphenate(target.name);\n              }\n            }\n            if ('templateController' in config) {\n              config.liftsContent = config.templateController;\n              delete config.templateController;\n            }\n            if ('defaultBindingMode' in config && resource.attributeDefaultBindingMode !== undefined) {\n              config.attributeDefaultBindingMode = config.defaultBindingMode;\n              delete config.defaultBindingMode;\n            }\n\n            delete config.name;\n\n            Object.assign(resource, config);\n            break;\n          case 'valueConverter':\n            resource = new ValueConverterResource(camelCase(name || target.name));\n            break;\n          case 'bindingBehavior':\n            resource = new BindingBehaviorResource(camelCase(name || target.name));\n            break;\n          case 'viewEngineHooks':\n            resource = new ViewEngineHooksResource();\n            break;\n        }\n      }\n\n      if (resource instanceof HtmlBehaviorResource) {\n        let bindables = typeof config === 'string' ? undefined : config.bindables;\n        let currentProps = resource.properties;\n        if (Array.isArray(bindables)) {\n          for (let i = 0, ii = bindables.length; ii > i; ++i) {\n            let prop = bindables[i];\n            if (!prop || typeof prop !== 'string' && !prop.name) {\n              throw new Error(`Invalid bindable property at \"${i}\" for class \"${target.name}\". Expected either a string or an object with \"name\" property.`);\n            }\n            let newProp = new BindableProperty(prop);\n\n            let existed = false;\n            for (let j = 0, jj = currentProps.length; jj > j; ++j) {\n              if (currentProps[j].name === newProp.name) {\n                existed = true;\n                break;\n              }\n            }\n            if (existed) {\n              continue;\n            }\n            newProp.registerWith(target, resource);\n          }\n        }\n      }\n    }\n    return resource;\n  }\n\n  constructor(parent, viewUrl) {\n    this.bindingLanguage = null;\n\n    this.parent = parent || null;\n    this.hasParent = this.parent !== null;\n    this.viewUrl = viewUrl || '';\n    this.lookupFunctions = {\n      valueConverters: this.getValueConverter.bind(this),\n      bindingBehaviors: this.getBindingBehavior.bind(this)\n    };\n    this.attributes = Object.create(null);\n    this.elements = Object.create(null);\n    this.valueConverters = Object.create(null);\n    this.bindingBehaviors = Object.create(null);\n    this.attributeMap = Object.create(null);\n    this.values = Object.create(null);\n    this.beforeCompile = this.afterCompile = this.beforeCreate = this.afterCreate = this.beforeBind = this.beforeUnbind = false;\n  }\n\n  _tryAddHook(obj, name) {\n    if (typeof obj[name] === 'function') {\n      let func = obj[name].bind(obj);\n      let counter = 1;\n      let callbackName;\n\n      while (this[callbackName = name + counter.toString()] !== undefined) {\n        counter++;\n      }\n\n      this[name] = true;\n      this[callbackName] = func;\n    }\n  }\n\n  _invokeHook(name, one, two, three, four) {\n    if (this.hasParent) {\n      this.parent._invokeHook(name, one, two, three, four);\n    }\n\n    if (this[name]) {\n      this[name + '1'](one, two, three, four);\n\n      let callbackName = name + '2';\n      if (this[callbackName]) {\n        this[callbackName](one, two, three, four);\n\n        callbackName = name + '3';\n        if (this[callbackName]) {\n          this[callbackName](one, two, three, four);\n\n          let counter = 4;\n\n          while (this[callbackName = name + counter.toString()] !== undefined) {\n            this[callbackName](one, two, three, four);\n            counter++;\n          }\n        }\n      }\n    }\n  }\n\n  registerViewEngineHooks(hooks) {\n    this._tryAddHook(hooks, 'beforeCompile');\n    this._tryAddHook(hooks, 'afterCompile');\n    this._tryAddHook(hooks, 'beforeCreate');\n    this._tryAddHook(hooks, 'afterCreate');\n    this._tryAddHook(hooks, 'beforeBind');\n    this._tryAddHook(hooks, 'beforeUnbind');\n  }\n\n  getBindingLanguage(bindingLanguageFallback) {\n    return this.bindingLanguage || (this.bindingLanguage = bindingLanguageFallback);\n  }\n\n  patchInParent(newParent) {\n    let originalParent = this.parent;\n\n    this.parent = newParent || null;\n    this.hasParent = this.parent !== null;\n\n    if (newParent.parent === null) {\n      newParent.parent = originalParent;\n      newParent.hasParent = originalParent !== null;\n    }\n  }\n\n  relativeToView(path) {\n    return relativeToFile(path, this.viewUrl);\n  }\n\n  registerElement(tagName, behavior) {\n    register(this.elements, tagName, behavior, 'an Element');\n  }\n\n  getElement(tagName) {\n    return this.elements[tagName] || (this.hasParent ? this.parent.getElement(tagName) : null);\n  }\n\n  mapAttribute(attribute) {\n    return this.attributeMap[attribute] || (this.hasParent ? this.parent.mapAttribute(attribute) : null);\n  }\n\n  registerAttribute(attribute, behavior, knownAttribute) {\n    this.attributeMap[attribute] = knownAttribute;\n    register(this.attributes, attribute, behavior, 'an Attribute');\n  }\n\n  getAttribute(attribute) {\n    return this.attributes[attribute] || (this.hasParent ? this.parent.getAttribute(attribute) : null);\n  }\n\n  registerValueConverter(name, valueConverter) {\n    register(this.valueConverters, name, valueConverter, 'a ValueConverter');\n  }\n\n  getValueConverter(name) {\n    return this.valueConverters[name] || (this.hasParent ? this.parent.getValueConverter(name) : null);\n  }\n\n  registerBindingBehavior(name, bindingBehavior) {\n    register(this.bindingBehaviors, name, bindingBehavior, 'a BindingBehavior');\n  }\n\n  getBindingBehavior(name) {\n    return this.bindingBehaviors[name] || (this.hasParent ? this.parent.getBindingBehavior(name) : null);\n  }\n\n  registerValue(name, value) {\n    register(this.values, name, value, 'a value');\n  }\n\n  getValue(name) {\n    return this.values[name] || (this.hasParent ? this.parent.getValue(name) : null);\n  }\n\n  autoRegister(container, impl) {\n    let resourceTypeMeta = metadata.getOwn(metadata.resource, impl);\n    if (resourceTypeMeta) {\n      if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n        ViewResources.convention(impl, resourceTypeMeta);\n\n        if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n          HtmlBehaviorResource.convention(impl.name, resourceTypeMeta);\n        }\n        if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n          resourceTypeMeta.elementName = _hyphenate(impl.name);\n        }\n      }\n    } else {\n      resourceTypeMeta = ViewResources.convention(impl) || HtmlBehaviorResource.convention(impl.name) || ValueConverterResource.convention(impl.name) || BindingBehaviorResource.convention(impl.name) || ViewEngineHooksResource.convention(impl.name);\n      if (!resourceTypeMeta) {\n        resourceTypeMeta = new HtmlBehaviorResource();\n        resourceTypeMeta.elementName = _hyphenate(impl.name);\n      }\n      metadata.define(metadata.resource, resourceTypeMeta, impl);\n    }\n    resourceTypeMeta.initialize(container, impl);\n    resourceTypeMeta.register(this);\n    return resourceTypeMeta;\n  }\n};\n\nexport let View = class View {\n  constructor(container, viewFactory, fragment, controllers, bindings, children, slots) {\n    this.container = container;\n    this.viewFactory = viewFactory;\n    this.resources = viewFactory.resources;\n    this.fragment = fragment;\n    this.firstChild = fragment.firstChild;\n    this.lastChild = fragment.lastChild;\n    this.controllers = controllers;\n    this.bindings = bindings;\n    this.children = children;\n    this.slots = slots;\n    this.hasSlots = false;\n    this.fromCache = false;\n    this.isBound = false;\n    this.isAttached = false;\n    this.bindingContext = null;\n    this.overrideContext = null;\n    this.controller = null;\n    this.viewModelScope = null;\n    this.animatableElement = undefined;\n    this._isUserControlled = false;\n    this.contentView = null;\n\n    for (let key in slots) {\n      this.hasSlots = true;\n      break;\n    }\n  }\n\n  returnToCache() {\n    this.viewFactory.returnViewToCache(this);\n  }\n\n  created() {\n    let i;\n    let ii;\n    let controllers = this.controllers;\n\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].created(this);\n    }\n  }\n\n  bind(bindingContext, overrideContext, _systemUpdate) {\n    let controllers;\n    let bindings;\n    let children;\n    let i;\n    let ii;\n\n    if (_systemUpdate && this._isUserControlled) {\n      return;\n    }\n\n    if (this.isBound) {\n      if (this.bindingContext === bindingContext) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext || createOverrideContext(bindingContext);\n\n    this.resources._invokeHook('beforeBind', this);\n\n    bindings = this.bindings;\n    for (i = 0, ii = bindings.length; i < ii; ++i) {\n      bindings[i].bind(this);\n    }\n\n    if (this.viewModelScope !== null) {\n      bindingContext.bind(this.viewModelScope.bindingContext, this.viewModelScope.overrideContext);\n      this.viewModelScope = null;\n    }\n\n    controllers = this.controllers;\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].bind(this);\n    }\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].bind(bindingContext, overrideContext, true);\n    }\n\n    if (this.hasSlots) {\n      ShadowDOM.distributeView(this.contentView, this.slots);\n    }\n  }\n\n  addBinding(binding) {\n    this.bindings.push(binding);\n\n    if (this.isBound) {\n      binding.bind(this);\n    }\n  }\n\n  unbind() {\n    let controllers;\n    let bindings;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isBound) {\n      this.isBound = false;\n      this.resources._invokeHook('beforeUnbind', this);\n\n      if (this.controller !== null) {\n        this.controller.unbind();\n      }\n\n      bindings = this.bindings;\n      for (i = 0, ii = bindings.length; i < ii; ++i) {\n        bindings[i].unbind();\n      }\n\n      controllers = this.controllers;\n      for (i = 0, ii = controllers.length; i < ii; ++i) {\n        controllers[i].unbind();\n      }\n\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].unbind();\n      }\n\n      this.bindingContext = null;\n      this.overrideContext = null;\n    }\n  }\n\n  insertNodesBefore(refNode) {\n    refNode.parentNode.insertBefore(this.fragment, refNode);\n  }\n\n  appendNodesTo(parent) {\n    parent.appendChild(this.fragment);\n  }\n\n  removeNodes() {\n    let fragment = this.fragment;\n    let current = this.firstChild;\n    let end = this.lastChild;\n    let next;\n\n    while (current) {\n      next = current.nextSibling;\n      fragment.appendChild(current);\n\n      if (current === end) {\n        break;\n      }\n\n      current = next;\n    }\n  }\n\n  attached() {\n    let controllers;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.controller !== null) {\n      this.controller.attached();\n    }\n\n    controllers = this.controllers;\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].attached();\n    }\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].attached();\n    }\n  }\n\n  detached() {\n    let controllers;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isAttached) {\n      this.isAttached = false;\n\n      if (this.controller !== null) {\n        this.controller.detached();\n      }\n\n      controllers = this.controllers;\n      for (i = 0, ii = controllers.length; i < ii; ++i) {\n        controllers[i].detached();\n      }\n\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].detached();\n      }\n    }\n  }\n};\n\nfunction getAnimatableElement(view) {\n  if (view.animatableElement !== undefined) {\n    return view.animatableElement;\n  }\n\n  let current = view.firstChild;\n\n  while (current && current.nodeType !== 1) {\n    current = current.nextSibling;\n  }\n\n  if (current && current.nodeType === 1) {\n    return view.animatableElement = current.classList.contains('au-animate') ? current : null;\n  }\n\n  return view.animatableElement = null;\n}\n\nexport let ViewSlot = class ViewSlot {\n  constructor(anchor, anchorIsContainer, animator = Animator.instance) {\n    this.anchor = anchor;\n    this.anchorIsContainer = anchorIsContainer;\n    this.bindingContext = null;\n    this.overrideContext = null;\n    this.animator = animator;\n    this.children = [];\n    this.isBound = false;\n    this.isAttached = false;\n    this.contentSelectors = null;\n    anchor.viewSlot = this;\n    anchor.isContentProjectionSource = false;\n  }\n\n  animateView(view, direction = 'enter') {\n    let animatableElement = getAnimatableElement(view);\n\n    if (animatableElement !== null) {\n      switch (direction) {\n        case 'enter':\n          return this.animator.enter(animatableElement);\n        case 'leave':\n          return this.animator.leave(animatableElement);\n        default:\n          throw new Error('Invalid animation direction: ' + direction);\n      }\n    }\n  }\n\n  transformChildNodesIntoView() {\n    let parent = this.anchor;\n\n    this.children.push({\n      fragment: parent,\n      firstChild: parent.firstChild,\n      lastChild: parent.lastChild,\n      returnToCache() {},\n      removeNodes() {\n        let last;\n\n        while (last = parent.lastChild) {\n          parent.removeChild(last);\n        }\n      },\n      created() {},\n      bind() {},\n      unbind() {},\n      attached() {},\n      detached() {}\n    });\n  }\n\n  bind(bindingContext, overrideContext) {\n    let i;\n    let ii;\n    let children;\n\n    if (this.isBound) {\n      if (this.bindingContext === bindingContext) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.bindingContext = bindingContext = bindingContext || this.bindingContext;\n    this.overrideContext = overrideContext = overrideContext || this.overrideContext;\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].bind(bindingContext, overrideContext, true);\n    }\n  }\n\n  unbind() {\n    if (this.isBound) {\n      let i;\n      let ii;\n      let children = this.children;\n\n      this.isBound = false;\n      this.bindingContext = null;\n      this.overrideContext = null;\n\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].unbind();\n      }\n    }\n  }\n\n  add(view) {\n    if (this.anchorIsContainer) {\n      view.appendNodesTo(this.anchor);\n    } else {\n      view.insertNodesBefore(this.anchor);\n    }\n\n    this.children.push(view);\n\n    if (this.isAttached) {\n      view.attached();\n      return this.animateView(view, 'enter');\n    }\n  }\n\n  insert(index, view) {\n    let children = this.children;\n    let length = children.length;\n\n    if (index === 0 && length === 0 || index >= length) {\n      return this.add(view);\n    }\n\n    view.insertNodesBefore(children[index].firstChild);\n    children.splice(index, 0, view);\n\n    if (this.isAttached) {\n      view.attached();\n      return this.animateView(view, 'enter');\n    }\n  }\n\n  move(sourceIndex, targetIndex) {\n    if (sourceIndex === targetIndex) {\n      return;\n    }\n\n    const children = this.children;\n    const view = children[sourceIndex];\n\n    view.removeNodes();\n    view.insertNodesBefore(children[targetIndex].firstChild);\n    children.splice(sourceIndex, 1);\n    children.splice(targetIndex, 0, view);\n  }\n\n  remove(view, returnToCache, skipAnimation) {\n    return this.removeAt(this.children.indexOf(view), returnToCache, skipAnimation);\n  }\n\n  removeMany(viewsToRemove, returnToCache, skipAnimation) {\n    const children = this.children;\n    let ii = viewsToRemove.length;\n    let i;\n    let rmPromises = [];\n\n    viewsToRemove.forEach(child => {\n      if (skipAnimation) {\n        child.removeNodes();\n        return;\n      }\n\n      let animation = this.animateView(child, 'leave');\n      if (animation) {\n        rmPromises.push(animation.then(() => child.removeNodes()));\n      } else {\n        child.removeNodes();\n      }\n    });\n\n    let removeAction = () => {\n      if (this.isAttached) {\n        for (i = 0; i < ii; ++i) {\n          viewsToRemove[i].detached();\n        }\n      }\n\n      if (returnToCache) {\n        for (i = 0; i < ii; ++i) {\n          viewsToRemove[i].returnToCache();\n        }\n      }\n\n      for (i = 0; i < ii; ++i) {\n        const index = children.indexOf(viewsToRemove[i]);\n        if (index >= 0) {\n          children.splice(index, 1);\n        }\n      }\n    };\n\n    if (rmPromises.length > 0) {\n      return Promise.all(rmPromises).then(() => removeAction());\n    }\n\n    return removeAction();\n  }\n\n  removeAt(index, returnToCache, skipAnimation) {\n    let view = this.children[index];\n\n    let removeAction = () => {\n      index = this.children.indexOf(view);\n      view.removeNodes();\n      this.children.splice(index, 1);\n\n      if (this.isAttached) {\n        view.detached();\n      }\n\n      if (returnToCache) {\n        view.returnToCache();\n      }\n\n      return view;\n    };\n\n    if (!skipAnimation) {\n      let animation = this.animateView(view, 'leave');\n      if (animation) {\n        return animation.then(() => removeAction());\n      }\n    }\n\n    return removeAction();\n  }\n\n  removeAll(returnToCache, skipAnimation) {\n    let children = this.children;\n    let ii = children.length;\n    let i;\n    let rmPromises = [];\n\n    children.forEach(child => {\n      if (skipAnimation) {\n        child.removeNodes();\n        return;\n      }\n\n      let animation = this.animateView(child, 'leave');\n      if (animation) {\n        rmPromises.push(animation.then(() => child.removeNodes()));\n      } else {\n        child.removeNodes();\n      }\n    });\n\n    let removeAction = () => {\n      if (this.isAttached) {\n        for (i = 0; i < ii; ++i) {\n          children[i].detached();\n        }\n      }\n\n      if (returnToCache) {\n        for (i = 0; i < ii; ++i) {\n          const child = children[i];\n\n          if (child) {\n            child.returnToCache();\n          }\n        }\n      }\n\n      this.children = [];\n    };\n\n    if (rmPromises.length > 0) {\n      return Promise.all(rmPromises).then(() => removeAction());\n    }\n\n    return removeAction();\n  }\n\n  attached() {\n    let i;\n    let ii;\n    let children;\n    let child;\n\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      child = children[i];\n      child.attached();\n      this.animateView(child, 'enter');\n    }\n  }\n\n  detached() {\n    let i;\n    let ii;\n    let children;\n\n    if (this.isAttached) {\n      this.isAttached = false;\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].detached();\n      }\n    }\n  }\n\n  projectTo(slots) {\n    this.projectToSlots = slots;\n    this.add = this._projectionAdd;\n    this.insert = this._projectionInsert;\n    this.move = this._projectionMove;\n    this.remove = this._projectionRemove;\n    this.removeAt = this._projectionRemoveAt;\n    this.removeMany = this._projectionRemoveMany;\n    this.removeAll = this._projectionRemoveAll;\n    this.children.forEach(view => ShadowDOM.distributeView(view, slots, this));\n  }\n\n  _projectionAdd(view) {\n    ShadowDOM.distributeView(view, this.projectToSlots, this);\n\n    this.children.push(view);\n\n    if (this.isAttached) {\n      view.attached();\n    }\n  }\n\n  _projectionInsert(index, view) {\n    if (index === 0 && !this.children.length || index >= this.children.length) {\n      this.add(view);\n    } else {\n      ShadowDOM.distributeView(view, this.projectToSlots, this, index);\n\n      this.children.splice(index, 0, view);\n\n      if (this.isAttached) {\n        view.attached();\n      }\n    }\n  }\n\n  _projectionMove(sourceIndex, targetIndex) {\n    if (sourceIndex === targetIndex) {\n      return;\n    }\n\n    const children = this.children;\n    const view = children[sourceIndex];\n\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    ShadowDOM.distributeView(view, this.projectToSlots, this, targetIndex);\n\n    children.splice(sourceIndex, 1);\n    children.splice(targetIndex, 0, view);\n  }\n\n  _projectionRemove(view, returnToCache) {\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    this.children.splice(this.children.indexOf(view), 1);\n\n    if (this.isAttached) {\n      view.detached();\n    }\n    if (returnToCache) {\n      view.returnToCache();\n    }\n  }\n\n  _projectionRemoveAt(index, returnToCache) {\n    let view = this.children[index];\n\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    this.children.splice(index, 1);\n\n    if (this.isAttached) {\n      view.detached();\n    }\n    if (returnToCache) {\n      view.returnToCache();\n    }\n  }\n\n  _projectionRemoveMany(viewsToRemove, returnToCache) {\n    viewsToRemove.forEach(view => this.remove(view, returnToCache));\n  }\n\n  _projectionRemoveAll(returnToCache) {\n    ShadowDOM.undistributeAll(this.projectToSlots, this);\n\n    let children = this.children;\n    let ii = children.length;\n\n    for (let i = 0; i < ii; ++i) {\n      if (returnToCache) {\n        children[i].returnToCache();\n      } else if (this.isAttached) {\n        children[i].detached();\n      }\n    }\n\n    this.children = [];\n  }\n};\n\nlet ProviderResolver = resolver(_class11 = class ProviderResolver {\n  get(container, key) {\n    let id = key.__providerId__;\n    return id in container ? container[id] : container[id] = container.invoke(key);\n  }\n}) || _class11;\n\nlet providerResolverInstance = new ProviderResolver();\n\nfunction elementContainerGet(key) {\n  if (key === DOM.Element) {\n    return this.element;\n  }\n\n  if (key === BoundViewFactory) {\n    if (this.boundViewFactory) {\n      return this.boundViewFactory;\n    }\n\n    let factory = this.instruction.viewFactory;\n    let partReplacements = this.partReplacements;\n\n    if (partReplacements) {\n      factory = partReplacements[factory.part] || factory;\n    }\n\n    this.boundViewFactory = new BoundViewFactory(this, factory, partReplacements);\n    return this.boundViewFactory;\n  }\n\n  if (key === ViewSlot) {\n    if (this.viewSlot === undefined) {\n      this.viewSlot = new ViewSlot(this.element, this.instruction.anchorIsContainer);\n      this.element.isContentProjectionSource = this.instruction.lifting;\n      this.children.push(this.viewSlot);\n    }\n\n    return this.viewSlot;\n  }\n\n  if (key === ElementEvents) {\n    return this.elementEvents || (this.elementEvents = new ElementEvents(this.element));\n  }\n\n  if (key === CompositionTransaction) {\n    return this.compositionTransaction || (this.compositionTransaction = this.parent.get(key));\n  }\n\n  if (key === ViewResources) {\n    return this.viewResources;\n  }\n\n  if (key === TargetInstruction) {\n    return this.instruction;\n  }\n\n  return this.superGet(key);\n}\n\nfunction createElementContainer(parent, element, instruction, children, partReplacements, resources) {\n  let container = parent.createChild();\n  let providers;\n  let i;\n\n  container.element = element;\n  container.instruction = instruction;\n  container.children = children;\n  container.viewResources = resources;\n  container.partReplacements = partReplacements;\n\n  providers = instruction.providers;\n  i = providers.length;\n\n  while (i--) {\n    container._resolvers.set(providers[i], providerResolverInstance);\n  }\n\n  container.superGet = container.get;\n  container.get = elementContainerGet;\n\n  return container;\n}\n\nfunction hasAttribute(name) {\n  return this._element.hasAttribute(name);\n}\n\nfunction getAttribute(name) {\n  return this._element.getAttribute(name);\n}\n\nfunction setAttribute(name, value) {\n  this._element.setAttribute(name, value);\n}\n\nfunction makeElementIntoAnchor(element, elementInstruction) {\n  let anchor = DOM.createComment('anchor');\n\n  if (elementInstruction) {\n    let firstChild = element.firstChild;\n\n    if (firstChild && firstChild.tagName === 'AU-CONTENT') {\n      anchor.contentElement = firstChild;\n    }\n\n    anchor._element = element;\n\n    anchor.hasAttribute = hasAttribute;\n    anchor.getAttribute = getAttribute;\n    anchor.setAttribute = setAttribute;\n  }\n\n  DOM.replaceNode(anchor, element);\n\n  return anchor;\n}\n\nfunction applyInstructions(containers, element, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources) {\n  let behaviorInstructions = instruction.behaviorInstructions;\n  let expressions = instruction.expressions;\n  let elementContainer;\n  let i;\n  let ii;\n  let current;\n  let instance;\n\n  if (instruction.contentExpression) {\n    bindings.push(instruction.contentExpression.createBinding(element.nextSibling));\n    element.nextSibling.auInterpolationTarget = true;\n    element.parentNode.removeChild(element);\n    return;\n  }\n\n  if (instruction.shadowSlot) {\n    let commentAnchor = DOM.createComment('slot');\n    let slot;\n\n    if (instruction.slotDestination) {\n      slot = new PassThroughSlot(commentAnchor, instruction.slotName, instruction.slotDestination, instruction.slotFallbackFactory);\n    } else {\n      slot = new ShadowSlot(commentAnchor, instruction.slotName, instruction.slotFallbackFactory);\n    }\n\n    DOM.replaceNode(commentAnchor, element);\n    shadowSlots[instruction.slotName] = slot;\n    controllers.push(slot);\n    return;\n  }\n\n  if (instruction.letElement) {\n    for (i = 0, ii = expressions.length; i < ii; ++i) {\n      bindings.push(expressions[i].createBinding());\n    }\n    element.parentNode.removeChild(element);\n    return;\n  }\n\n  if (behaviorInstructions.length) {\n    if (!instruction.anchorIsContainer) {\n      element = makeElementIntoAnchor(element, instruction.elementInstruction);\n    }\n\n    containers[instruction.injectorId] = elementContainer = createElementContainer(containers[instruction.parentInjectorId], element, instruction, children, partReplacements, resources);\n\n    for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n      current = behaviorInstructions[i];\n      instance = current.type.create(elementContainer, current, element, bindings);\n      controllers.push(instance);\n    }\n  }\n\n  for (i = 0, ii = expressions.length; i < ii; ++i) {\n    bindings.push(expressions[i].createBinding(element));\n  }\n}\n\nfunction styleStringToObject(style, target) {\n  let attributes = style.split(';');\n  let firstIndexOfColon;\n  let i;\n  let current;\n  let key;\n  let value;\n\n  target = target || {};\n\n  for (i = 0; i < attributes.length; i++) {\n    current = attributes[i];\n    firstIndexOfColon = current.indexOf(':');\n    key = current.substring(0, firstIndexOfColon).trim();\n    value = current.substring(firstIndexOfColon + 1).trim();\n    target[key] = value;\n  }\n\n  return target;\n}\n\nfunction styleObjectToString(obj) {\n  let result = '';\n\n  for (let key in obj) {\n    result += key + ':' + obj[key] + ';';\n  }\n\n  return result;\n}\n\nfunction applySurrogateInstruction(container, element, instruction, controllers, bindings, children) {\n  let behaviorInstructions = instruction.behaviorInstructions;\n  let expressions = instruction.expressions;\n  let providers = instruction.providers;\n  let values = instruction.values;\n  let i;\n  let ii;\n  let current;\n  let instance;\n  let currentAttributeValue;\n\n  i = providers.length;\n  while (i--) {\n    container._resolvers.set(providers[i], providerResolverInstance);\n  }\n\n  for (let key in values) {\n    currentAttributeValue = element.getAttribute(key);\n\n    if (currentAttributeValue) {\n      if (key === 'class') {\n        element.setAttribute('class', currentAttributeValue + ' ' + values[key]);\n      } else if (key === 'style') {\n        let styleObject = styleStringToObject(values[key]);\n        styleStringToObject(currentAttributeValue, styleObject);\n        element.setAttribute('style', styleObjectToString(styleObject));\n      }\n    } else {\n      element.setAttribute(key, values[key]);\n    }\n  }\n\n  if (behaviorInstructions.length) {\n    for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n      current = behaviorInstructions[i];\n      instance = current.type.create(container, current, element, bindings);\n\n      if (instance.contentView) {\n        children.push(instance.contentView);\n      }\n\n      controllers.push(instance);\n    }\n  }\n\n  for (i = 0, ii = expressions.length; i < ii; ++i) {\n    bindings.push(expressions[i].createBinding(element));\n  }\n}\n\nexport let BoundViewFactory = class BoundViewFactory {\n  constructor(parentContainer, viewFactory, partReplacements) {\n    this.parentContainer = parentContainer;\n    this.viewFactory = viewFactory;\n    this.factoryCreateInstruction = { partReplacements: partReplacements };\n  }\n\n  create() {\n    let view = this.viewFactory.create(this.parentContainer.createChild(), this.factoryCreateInstruction);\n    view._isUserControlled = true;\n    return view;\n  }\n\n  get isCaching() {\n    return this.viewFactory.isCaching;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);\n  }\n\n  getCachedView() {\n    return this.viewFactory.getCachedView();\n  }\n\n  returnViewToCache(view) {\n    this.viewFactory.returnViewToCache(view);\n  }\n};\n\nexport let ViewFactory = class ViewFactory {\n  constructor(template, instructions, resources) {\n    this.isCaching = false;\n\n    this.template = template;\n    this.instructions = instructions;\n    this.resources = resources;\n    this.cacheSize = -1;\n    this.cache = null;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    if (size) {\n      if (size === '*') {\n        size = Number.MAX_VALUE;\n      } else if (typeof size === 'string') {\n        size = parseInt(size, 10);\n      }\n    }\n\n    if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {\n      this.cacheSize = size;\n    }\n\n    if (this.cacheSize > 0) {\n      this.cache = [];\n    } else {\n      this.cache = null;\n    }\n\n    this.isCaching = this.cacheSize > 0;\n  }\n\n  getCachedView() {\n    return this.cache !== null ? this.cache.pop() || null : null;\n  }\n\n  returnViewToCache(view) {\n    if (view.isAttached) {\n      view.detached();\n    }\n\n    if (view.isBound) {\n      view.unbind();\n    }\n\n    if (this.cache !== null && this.cache.length < this.cacheSize) {\n      view.fromCache = true;\n      this.cache.push(view);\n    }\n  }\n\n  create(container, createInstruction, element) {\n    createInstruction = createInstruction || BehaviorInstruction.normal;\n\n    let cachedView = this.getCachedView();\n    if (cachedView !== null) {\n      return cachedView;\n    }\n\n    let fragment = createInstruction.enhance ? this.template : this.template.cloneNode(true);\n    let instructables = fragment.querySelectorAll('.au-target');\n    let instructions = this.instructions;\n    let resources = this.resources;\n    let controllers = [];\n    let bindings = [];\n    let children = [];\n    let shadowSlots = Object.create(null);\n    let containers = { root: container };\n    let partReplacements = createInstruction.partReplacements;\n    let i;\n    let ii;\n    let view;\n    let instructable;\n    let instruction;\n\n    this.resources._invokeHook('beforeCreate', this, container, fragment, createInstruction);\n\n    if (element && this.surrogateInstruction !== null) {\n      applySurrogateInstruction(container, element, this.surrogateInstruction, controllers, bindings, children);\n    }\n\n    if (createInstruction.enhance && fragment.hasAttribute('au-target-id')) {\n      instructable = fragment;\n      instruction = instructions[instructable.getAttribute('au-target-id')];\n      applyInstructions(containers, instructable, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources);\n    }\n\n    for (i = 0, ii = instructables.length; i < ii; ++i) {\n      instructable = instructables[i];\n      instruction = instructions[instructable.getAttribute('au-target-id')];\n      applyInstructions(containers, instructable, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources);\n    }\n\n    view = new View(container, this, fragment, controllers, bindings, children, shadowSlots);\n\n    if (!createInstruction.initiatedByBehavior) {\n      view.created();\n    }\n\n    this.resources._invokeHook('afterCreate', view);\n\n    return view;\n  }\n};\n\nlet nextInjectorId = 0;\nfunction getNextInjectorId() {\n  return ++nextInjectorId;\n}\n\nlet lastAUTargetID = 0;\nfunction getNextAUTargetID() {\n  return (++lastAUTargetID).toString();\n}\n\nfunction makeIntoInstructionTarget(element) {\n  let value = element.getAttribute('class');\n  let auTargetID = getNextAUTargetID();\n\n  element.setAttribute('class', value ? value + ' au-target' : 'au-target');\n  element.setAttribute('au-target-id', auTargetID);\n\n  return auTargetID;\n}\n\nfunction makeShadowSlot(compiler, resources, node, instructions, parentInjectorId) {\n  let auShadowSlot = DOM.createElement('au-shadow-slot');\n  DOM.replaceNode(auShadowSlot, node);\n\n  let auTargetID = makeIntoInstructionTarget(auShadowSlot);\n  let instruction = TargetInstruction.shadowSlot(parentInjectorId);\n\n  instruction.slotName = node.getAttribute('name') || ShadowDOM.defaultSlotKey;\n  instruction.slotDestination = node.getAttribute('slot');\n\n  if (node.innerHTML.trim()) {\n    let fragment = DOM.createDocumentFragment();\n    let child;\n\n    while (child = node.firstChild) {\n      fragment.appendChild(child);\n    }\n\n    instruction.slotFallbackFactory = compiler.compile(fragment, resources);\n  }\n\n  instructions[auTargetID] = instruction;\n\n  return auShadowSlot;\n}\n\nconst defaultLetHandler = BindingLanguage.prototype.createLetExpressions;\n\nexport let ViewCompiler = (_dec7 = inject(BindingLanguage, ViewResources), _dec7(_class13 = class ViewCompiler {\n  constructor(bindingLanguage, resources) {\n    this.bindingLanguage = bindingLanguage;\n    this.resources = resources;\n  }\n\n  compile(source, resources, compileInstruction) {\n    resources = resources || this.resources;\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n    source = typeof source === 'string' ? DOM.createTemplateFromMarkup(source) : source;\n\n    let content;\n    let part;\n    let cacheSize;\n\n    if (source.content) {\n      part = source.getAttribute('part');\n      cacheSize = source.getAttribute('view-cache');\n      content = DOM.adoptNode(source.content);\n    } else {\n      content = source;\n    }\n\n    compileInstruction.targetShadowDOM = compileInstruction.targetShadowDOM && FEATURE.shadowDOM;\n    resources._invokeHook('beforeCompile', content, resources, compileInstruction);\n\n    let instructions = {};\n    this._compileNode(content, resources, instructions, source, 'root', !compileInstruction.targetShadowDOM);\n\n    let firstChild = content.firstChild;\n    if (firstChild && firstChild.nodeType === 1) {\n      let targetId = firstChild.getAttribute('au-target-id');\n      if (targetId) {\n        let ins = instructions[targetId];\n\n        if (ins.shadowSlot || ins.lifting || ins.elementInstruction && !ins.elementInstruction.anchorIsContainer) {\n          content.insertBefore(DOM.createComment('view'), firstChild);\n        }\n      }\n    }\n\n    let factory = new ViewFactory(content, instructions, resources);\n\n    factory.surrogateInstruction = compileInstruction.compileSurrogate ? this._compileSurrogate(source, resources) : null;\n    factory.part = part;\n\n    if (cacheSize) {\n      factory.setCacheSize(cacheSize);\n    }\n\n    resources._invokeHook('afterCompile', factory);\n\n    return factory;\n  }\n\n  _compileNode(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {\n    switch (node.nodeType) {\n      case 1:\n        return this._compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM);\n      case 3:\n        let expression = resources.getBindingLanguage(this.bindingLanguage).inspectTextContent(resources, node.wholeText);\n        if (expression) {\n          let marker = DOM.createElement('au-marker');\n          let auTargetID = makeIntoInstructionTarget(marker);\n          (node.parentNode || parentNode).insertBefore(marker, node);\n          node.textContent = ' ';\n          instructions[auTargetID] = TargetInstruction.contentExpression(expression);\n\n          while (node.nextSibling && node.nextSibling.nodeType === 3) {\n            (node.parentNode || parentNode).removeChild(node.nextSibling);\n          }\n        } else {\n          while (node.nextSibling && node.nextSibling.nodeType === 3) {\n            node = node.nextSibling;\n          }\n        }\n        return node.nextSibling;\n      case 11:\n        let currentChild = node.firstChild;\n        while (currentChild) {\n          currentChild = this._compileNode(currentChild, resources, instructions, node, parentInjectorId, targetLightDOM);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return node.nextSibling;\n  }\n\n  _compileSurrogate(node, resources) {\n    let tagName = node.tagName.toLowerCase();\n    let attributes = node.attributes;\n    let bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);\n    let knownAttribute;\n    let property;\n    let instruction;\n    let i;\n    let ii;\n    let attr;\n    let attrName;\n    let attrValue;\n    let info;\n    let type;\n    let expressions = [];\n    let expression;\n    let behaviorInstructions = [];\n    let values = {};\n    let hasValues = false;\n    let providers = [];\n\n    for (i = 0, ii = attributes.length; i < ii; ++i) {\n      attr = attributes[i];\n      attrName = attr.name;\n      attrValue = attr.value;\n\n      info = bindingLanguage.inspectAttribute(resources, tagName, attrName, attrValue);\n      type = resources.getAttribute(info.attrName);\n\n      if (type) {\n        knownAttribute = resources.mapAttribute(info.attrName);\n        if (knownAttribute) {\n          property = type.attributes[knownAttribute];\n\n          if (property) {\n            info.defaultBindingMode = property.defaultBindingMode;\n\n            if (!info.command && !info.expression) {\n              info.command = property.hasOptions ? 'options' : null;\n            }\n\n            if (info.command && info.command !== 'options' && type.primaryProperty) {\n              const primaryProperty = type.primaryProperty;\n              attrName = info.attrName = primaryProperty.attribute;\n\n              info.defaultBindingMode = primaryProperty.defaultBindingMode;\n            }\n          }\n        }\n      }\n\n      instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);\n\n      if (instruction) {\n        if (instruction.alteredAttr) {\n          type = resources.getAttribute(instruction.attrName);\n        }\n\n        if (instruction.discrete) {\n          expressions.push(instruction);\n        } else {\n          if (type) {\n            instruction.type = type;\n            this._configureProperties(instruction, resources);\n\n            if (type.liftsContent) {\n              throw new Error('You cannot place a template controller on a surrogate element.');\n            } else {\n              behaviorInstructions.push(instruction);\n            }\n          } else {\n            expressions.push(instruction.attributes[instruction.attrName]);\n          }\n        }\n      } else {\n        if (type) {\n          instruction = BehaviorInstruction.attribute(attrName, type);\n          instruction.attributes[resources.mapAttribute(attrName)] = attrValue;\n\n          if (type.liftsContent) {\n            throw new Error('You cannot place a template controller on a surrogate element.');\n          } else {\n            behaviorInstructions.push(instruction);\n          }\n        } else if (attrName !== 'id' && attrName !== 'part' && attrName !== 'replace-part') {\n          hasValues = true;\n          values[attrName] = attrValue;\n        }\n      }\n    }\n\n    if (expressions.length || behaviorInstructions.length || hasValues) {\n      for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n        instruction = behaviorInstructions[i];\n        instruction.type.compile(this, resources, node, instruction);\n        providers.push(instruction.type.target);\n      }\n\n      for (i = 0, ii = expressions.length; i < ii; ++i) {\n        expression = expressions[i];\n        if (expression.attrToRemove !== undefined) {\n          node.removeAttribute(expression.attrToRemove);\n        }\n      }\n\n      return TargetInstruction.surrogate(providers, behaviorInstructions, expressions, values);\n    }\n\n    return null;\n  }\n\n  _compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {\n    let tagName = node.tagName.toLowerCase();\n    let attributes = node.attributes;\n    let expressions = [];\n    let expression;\n    let behaviorInstructions = [];\n    let providers = [];\n    let bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);\n    let liftingInstruction;\n    let viewFactory;\n    let type;\n    let elementInstruction;\n    let elementProperty;\n    let i;\n    let ii;\n    let attr;\n    let attrName;\n    let attrValue;\n    let originalAttrName;\n    let instruction;\n    let info;\n    let property;\n    let knownAttribute;\n    let auTargetID;\n    let injectorId;\n\n    if (tagName === 'slot') {\n      if (targetLightDOM) {\n        node = makeShadowSlot(this, resources, node, instructions, parentInjectorId);\n      }\n      return node.nextSibling;\n    } else if (tagName === 'template') {\n      if (!('content' in node)) {\n        throw new Error('You cannot place a template element within ' + node.namespaceURI + ' namespace');\n      }\n      viewFactory = this.compile(node, resources);\n      viewFactory.part = node.getAttribute('part');\n    } else {\n      type = resources.getElement(node.getAttribute('as-element') || tagName);\n\n      if (tagName === 'let' && !type && bindingLanguage.createLetExpressions !== defaultLetHandler) {\n        expressions = bindingLanguage.createLetExpressions(resources, node);\n        auTargetID = makeIntoInstructionTarget(node);\n        instructions[auTargetID] = TargetInstruction.letElement(expressions);\n        return node.nextSibling;\n      }\n      if (type) {\n        elementInstruction = BehaviorInstruction.element(node, type);\n        type.processAttributes(this, resources, node, attributes, elementInstruction);\n        behaviorInstructions.push(elementInstruction);\n      }\n    }\n\n    for (i = 0, ii = attributes.length; i < ii; ++i) {\n      attr = attributes[i];\n      originalAttrName = attrName = attr.name;\n      attrValue = attr.value;\n      info = bindingLanguage.inspectAttribute(resources, tagName, attrName, attrValue);\n\n      if (targetLightDOM && info.attrName === 'slot') {\n        info.attrName = attrName = 'au-slot';\n      }\n\n      type = resources.getAttribute(info.attrName);\n      elementProperty = null;\n\n      if (type) {\n        knownAttribute = resources.mapAttribute(info.attrName);\n        if (knownAttribute) {\n          property = type.attributes[knownAttribute];\n\n          if (property) {\n            info.defaultBindingMode = property.defaultBindingMode;\n\n            if (!info.command && !info.expression) {\n              info.command = property.hasOptions ? 'options' : null;\n            }\n\n            if (info.command && info.command !== 'options' && type.primaryProperty) {\n              const primaryProperty = type.primaryProperty;\n              attrName = info.attrName = primaryProperty.attribute;\n\n              info.defaultBindingMode = primaryProperty.defaultBindingMode;\n            }\n          }\n        }\n      } else if (elementInstruction) {\n        elementProperty = elementInstruction.type.attributes[info.attrName];\n        if (elementProperty) {\n          info.defaultBindingMode = elementProperty.defaultBindingMode;\n        }\n      }\n\n      if (elementProperty) {\n        instruction = bindingLanguage.createAttributeInstruction(resources, node, info, elementInstruction);\n      } else {\n        instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);\n      }\n\n      if (instruction) {\n        if (instruction.alteredAttr) {\n          type = resources.getAttribute(instruction.attrName);\n        }\n\n        if (instruction.discrete) {\n          expressions.push(instruction);\n        } else {\n          if (type) {\n            instruction.type = type;\n            this._configureProperties(instruction, resources);\n\n            if (type.liftsContent) {\n              instruction.originalAttrName = originalAttrName;\n              liftingInstruction = instruction;\n              break;\n            } else {\n              behaviorInstructions.push(instruction);\n            }\n          } else if (elementProperty) {\n            elementInstruction.attributes[info.attrName].targetProperty = elementProperty.name;\n          } else {\n            expressions.push(instruction.attributes[instruction.attrName]);\n          }\n        }\n      } else {\n        if (type) {\n          instruction = BehaviorInstruction.attribute(attrName, type);\n          instruction.attributes[resources.mapAttribute(attrName)] = attrValue;\n\n          if (type.liftsContent) {\n            instruction.originalAttrName = originalAttrName;\n            liftingInstruction = instruction;\n            break;\n          } else {\n            behaviorInstructions.push(instruction);\n          }\n        } else if (elementProperty) {\n          elementInstruction.attributes[attrName] = attrValue;\n        }\n      }\n    }\n\n    if (liftingInstruction) {\n      liftingInstruction.viewFactory = viewFactory;\n      node = liftingInstruction.type.compile(this, resources, node, liftingInstruction, parentNode);\n      auTargetID = makeIntoInstructionTarget(node);\n      instructions[auTargetID] = TargetInstruction.lifting(parentInjectorId, liftingInstruction);\n    } else {\n      let skipContentProcessing = false;\n\n      if (expressions.length || behaviorInstructions.length) {\n        injectorId = behaviorInstructions.length ? getNextInjectorId() : false;\n\n        for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n          instruction = behaviorInstructions[i];\n          instruction.type.compile(this, resources, node, instruction, parentNode);\n          providers.push(instruction.type.target);\n          skipContentProcessing = skipContentProcessing || instruction.skipContentProcessing;\n        }\n\n        for (i = 0, ii = expressions.length; i < ii; ++i) {\n          expression = expressions[i];\n          if (expression.attrToRemove !== undefined) {\n            node.removeAttribute(expression.attrToRemove);\n          }\n        }\n\n        auTargetID = makeIntoInstructionTarget(node);\n        instructions[auTargetID] = TargetInstruction.normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction);\n      }\n\n      if (skipContentProcessing) {\n        return node.nextSibling;\n      }\n\n      let currentChild = node.firstChild;\n      while (currentChild) {\n        currentChild = this._compileNode(currentChild, resources, instructions, node, injectorId || parentInjectorId, targetLightDOM);\n      }\n    }\n\n    return node.nextSibling;\n  }\n\n  _configureProperties(instruction, resources) {\n    let type = instruction.type;\n    let attrName = instruction.attrName;\n    let attributes = instruction.attributes;\n    let property;\n    let key;\n    let value;\n\n    let knownAttribute = resources.mapAttribute(attrName);\n    if (knownAttribute && attrName in attributes && knownAttribute !== attrName) {\n      attributes[knownAttribute] = attributes[attrName];\n      delete attributes[attrName];\n    }\n\n    for (key in attributes) {\n      value = attributes[key];\n\n      if (value !== null && typeof value === 'object') {\n        property = type.attributes[key];\n\n        if (property !== undefined) {\n          value.targetProperty = property.name;\n        } else {\n          value.targetProperty = key;\n        }\n      }\n    }\n  }\n}) || _class13);\n\nexport let ResourceModule = class ResourceModule {\n  constructor(moduleId) {\n    this.id = moduleId;\n    this.moduleInstance = null;\n    this.mainResource = null;\n    this.resources = null;\n    this.viewStrategy = null;\n    this.isInitialized = false;\n    this.onLoaded = null;\n    this.loadContext = null;\n  }\n\n  initialize(container) {\n    let current = this.mainResource;\n    let resources = this.resources;\n    let vs = this.viewStrategy;\n\n    if (this.isInitialized) {\n      return;\n    }\n\n    this.isInitialized = true;\n\n    if (current !== undefined) {\n      current.metadata.viewStrategy = vs;\n      current.initialize(container);\n    }\n\n    for (let i = 0, ii = resources.length; i < ii; ++i) {\n      current = resources[i];\n      current.metadata.viewStrategy = vs;\n      current.initialize(container);\n    }\n  }\n\n  register(registry, name) {\n    let main = this.mainResource;\n    let resources = this.resources;\n\n    if (main !== undefined) {\n      main.register(registry, name);\n      name = null;\n    }\n\n    for (let i = 0, ii = resources.length; i < ii; ++i) {\n      resources[i].register(registry, name);\n      name = null;\n    }\n  }\n\n  load(container, loadContext) {\n    if (this.onLoaded !== null) {\n      return this.loadContext === loadContext ? Promise.resolve() : this.onLoaded;\n    }\n\n    let main = this.mainResource;\n    let resources = this.resources;\n    let loads;\n\n    if (main !== undefined) {\n      loads = new Array(resources.length + 1);\n      loads[0] = main.load(container, loadContext);\n      for (let i = 0, ii = resources.length; i < ii; ++i) {\n        loads[i + 1] = resources[i].load(container, loadContext);\n      }\n    } else {\n      loads = new Array(resources.length);\n      for (let i = 0, ii = resources.length; i < ii; ++i) {\n        loads[i] = resources[i].load(container, loadContext);\n      }\n    }\n\n    this.loadContext = loadContext;\n    this.onLoaded = Promise.all(loads);\n    return this.onLoaded;\n  }\n};\n\nexport let ResourceDescription = class ResourceDescription {\n  constructor(key, exportedValue, resourceTypeMeta) {\n    if (!resourceTypeMeta) {\n      resourceTypeMeta = metadata.get(metadata.resource, exportedValue);\n\n      if (!resourceTypeMeta) {\n        resourceTypeMeta = new HtmlBehaviorResource();\n        resourceTypeMeta.elementName = _hyphenate(key);\n        metadata.define(metadata.resource, resourceTypeMeta, exportedValue);\n      }\n    }\n\n    if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n      if (resourceTypeMeta.elementName === undefined) {\n        resourceTypeMeta.elementName = _hyphenate(key);\n      } else if (resourceTypeMeta.attributeName === undefined) {\n        resourceTypeMeta.attributeName = _hyphenate(key);\n      } else if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n        HtmlBehaviorResource.convention(key, resourceTypeMeta);\n      }\n    } else if (!resourceTypeMeta.name) {\n      resourceTypeMeta.name = _hyphenate(key);\n    }\n\n    this.metadata = resourceTypeMeta;\n    this.value = exportedValue;\n  }\n\n  initialize(container) {\n    this.metadata.initialize(container, this.value);\n  }\n\n  register(registry, name) {\n    this.metadata.register(registry, name);\n  }\n\n  load(container, loadContext) {\n    return this.metadata.load(container, this.value, loadContext);\n  }\n};\n\nexport let ModuleAnalyzer = class ModuleAnalyzer {\n  constructor() {\n    this.cache = Object.create(null);\n  }\n\n  getAnalysis(moduleId) {\n    return this.cache[moduleId];\n  }\n\n  analyze(moduleId, moduleInstance, mainResourceKey) {\n    let mainResource;\n    let fallbackValue;\n    let fallbackKey;\n    let resourceTypeMeta;\n    let key;\n    let exportedValue;\n    let resources = [];\n    let conventional;\n    let vs;\n    let resourceModule;\n\n    resourceModule = this.cache[moduleId];\n    if (resourceModule) {\n      return resourceModule;\n    }\n\n    resourceModule = new ResourceModule(moduleId);\n    this.cache[moduleId] = resourceModule;\n\n    if (typeof moduleInstance === 'function') {\n      moduleInstance = { 'default': moduleInstance };\n    }\n\n    if (mainResourceKey) {\n      mainResource = new ResourceDescription(mainResourceKey, moduleInstance[mainResourceKey]);\n    }\n\n    for (key in moduleInstance) {\n      exportedValue = moduleInstance[key];\n\n      if (key === mainResourceKey || typeof exportedValue !== 'function') {\n        continue;\n      }\n\n      resourceTypeMeta = metadata.get(metadata.resource, exportedValue);\n\n      if (resourceTypeMeta) {\n        if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n          ViewResources.convention(exportedValue, resourceTypeMeta);\n\n          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n            HtmlBehaviorResource.convention(key, resourceTypeMeta);\n          }\n\n          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n            resourceTypeMeta.elementName = _hyphenate(key);\n          }\n        }\n\n        if (!mainResource && resourceTypeMeta instanceof HtmlBehaviorResource && resourceTypeMeta.elementName !== null) {\n          mainResource = new ResourceDescription(key, exportedValue, resourceTypeMeta);\n        } else {\n          resources.push(new ResourceDescription(key, exportedValue, resourceTypeMeta));\n        }\n      } else if (viewStrategy.decorates(exportedValue)) {\n        vs = exportedValue;\n      } else if (exportedValue instanceof TemplateRegistryEntry) {\n        vs = new TemplateRegistryViewStrategy(moduleId, exportedValue);\n      } else {\n        if (conventional = ViewResources.convention(exportedValue)) {\n          if (conventional.elementName !== null && !mainResource) {\n            mainResource = new ResourceDescription(key, exportedValue, conventional);\n          } else {\n            resources.push(new ResourceDescription(key, exportedValue, conventional));\n          }\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (conventional = HtmlBehaviorResource.convention(key)) {\n          if (conventional.elementName !== null && !mainResource) {\n            mainResource = new ResourceDescription(key, exportedValue, conventional);\n          } else {\n            resources.push(new ResourceDescription(key, exportedValue, conventional));\n          }\n\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (conventional = ValueConverterResource.convention(key) || BindingBehaviorResource.convention(key) || ViewEngineHooksResource.convention(key)) {\n          resources.push(new ResourceDescription(key, exportedValue, conventional));\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (!fallbackValue) {\n          fallbackValue = exportedValue;\n          fallbackKey = key;\n        }\n      }\n    }\n\n    if (!mainResource && fallbackValue) {\n      mainResource = new ResourceDescription(fallbackKey, fallbackValue);\n    }\n\n    resourceModule.moduleInstance = moduleInstance;\n    resourceModule.mainResource = mainResource;\n    resourceModule.resources = resources;\n    resourceModule.viewStrategy = vs;\n\n    return resourceModule;\n  }\n};\n\nlet logger = LogManager.getLogger('templating');\n\nfunction ensureRegistryEntry(loader, urlOrRegistryEntry) {\n  if (urlOrRegistryEntry instanceof TemplateRegistryEntry) {\n    return Promise.resolve(urlOrRegistryEntry);\n  }\n\n  return loader.loadTemplate(urlOrRegistryEntry);\n}\n\nlet ProxyViewFactory = class ProxyViewFactory {\n  constructor(promise) {\n    promise.then(x => this.viewFactory = x);\n  }\n\n  create(container, bindingContext, createInstruction, element) {\n    return this.viewFactory.create(container, bindingContext, createInstruction, element);\n  }\n\n  get isCaching() {\n    return this.viewFactory.isCaching;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);\n  }\n\n  getCachedView() {\n    return this.viewFactory.getCachedView();\n  }\n\n  returnViewToCache(view) {\n    this.viewFactory.returnViewToCache(view);\n  }\n};\n\n\nlet auSlotBehavior = null;\n\nexport let ViewEngine = (_dec8 = inject(Loader, Container, ViewCompiler, ModuleAnalyzer, ViewResources), _dec8(_class14 = (_temp4 = _class15 = class ViewEngine {\n  constructor(loader, container, viewCompiler, moduleAnalyzer, appResources) {\n    this.loader = loader;\n    this.container = container;\n    this.viewCompiler = viewCompiler;\n    this.moduleAnalyzer = moduleAnalyzer;\n    this.appResources = appResources;\n    this._pluginMap = {};\n\n    if (auSlotBehavior === null) {\n      auSlotBehavior = new HtmlBehaviorResource();\n      auSlotBehavior.attributeName = 'au-slot';\n      metadata.define(metadata.resource, auSlotBehavior, SlotCustomAttribute);\n    }\n\n    auSlotBehavior.initialize(container, SlotCustomAttribute);\n    auSlotBehavior.register(appResources);\n  }\n\n  addResourcePlugin(extension, implementation) {\n    let name = extension.replace('.', '') + '-resource-plugin';\n    this._pluginMap[extension] = name;\n    this.loader.addPlugin(name, implementation);\n  }\n\n  loadViewFactory(urlOrRegistryEntry, compileInstruction, loadContext, target) {\n    loadContext = loadContext || new ResourceLoadContext();\n\n    return ensureRegistryEntry(this.loader, urlOrRegistryEntry).then(registryEntry => {\n      const url = registryEntry.address;\n\n      if (registryEntry.onReady) {\n        if (!loadContext.hasDependency(url)) {\n          loadContext.addDependency(url);\n          return registryEntry.onReady;\n        }\n\n        if (registryEntry.template === null) {\n          return registryEntry.onReady;\n        }\n\n        return Promise.resolve(new ProxyViewFactory(registryEntry.onReady));\n      }\n\n      loadContext.addDependency(url);\n\n      registryEntry.onReady = this.loadTemplateResources(registryEntry, compileInstruction, loadContext, target).then(resources => {\n        registryEntry.resources = resources;\n\n        if (registryEntry.template === null) {\n          return registryEntry.factory = null;\n        }\n\n        let viewFactory = this.viewCompiler.compile(registryEntry.template, resources, compileInstruction);\n        return registryEntry.factory = viewFactory;\n      });\n\n      return registryEntry.onReady;\n    });\n  }\n\n  loadTemplateResources(registryEntry, compileInstruction, loadContext, target) {\n    let resources = new ViewResources(this.appResources, registryEntry.address);\n    let dependencies = registryEntry.dependencies;\n    let importIds;\n    let names;\n\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n\n    if (dependencies.length === 0 && !compileInstruction.associatedModuleId) {\n      return Promise.resolve(resources);\n    }\n\n    importIds = dependencies.map(x => x.src);\n    names = dependencies.map(x => x.name);\n    logger.debug(`importing resources for ${registryEntry.address}`, importIds);\n\n    if (target) {\n      let viewModelRequires = metadata.get(ViewEngine.viewModelRequireMetadataKey, target);\n      if (viewModelRequires) {\n        let templateImportCount = importIds.length;\n        for (let i = 0, ii = viewModelRequires.length; i < ii; ++i) {\n          let req = viewModelRequires[i];\n          let importId = typeof req === 'function' ? Origin.get(req).moduleId : relativeToFile(req.src || req, registryEntry.address);\n\n          if (importIds.indexOf(importId) === -1) {\n            importIds.push(importId);\n            names.push(req.as);\n          }\n        }\n        logger.debug(`importing ViewModel resources for ${compileInstruction.associatedModuleId}`, importIds.slice(templateImportCount));\n      }\n    }\n\n    return this.importViewResources(importIds, names, resources, compileInstruction, loadContext);\n  }\n\n  importViewModelResource(moduleImport, moduleMember) {\n    return this.loader.loadModule(moduleImport).then(viewModelModule => {\n      let normalizedId = Origin.get(viewModelModule).moduleId;\n      let resourceModule = this.moduleAnalyzer.analyze(normalizedId, viewModelModule, moduleMember);\n\n      if (!resourceModule.mainResource) {\n        throw new Error(`No view model found in module \"${moduleImport}\".`);\n      }\n\n      resourceModule.initialize(this.container);\n\n      return resourceModule.mainResource;\n    });\n  }\n\n  importViewResources(moduleIds, names, resources, compileInstruction, loadContext) {\n    loadContext = loadContext || new ResourceLoadContext();\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n\n    moduleIds = moduleIds.map(x => this._applyLoaderPlugin(x));\n\n    return this.loader.loadAllModules(moduleIds).then(imports => {\n      let i;\n      let ii;\n      let analysis;\n      let normalizedId;\n      let current;\n      let associatedModule;\n      let container = this.container;\n      let moduleAnalyzer = this.moduleAnalyzer;\n      let allAnalysis = new Array(imports.length);\n\n      for (i = 0, ii = imports.length; i < ii; ++i) {\n        current = imports[i];\n        normalizedId = Origin.get(current).moduleId;\n\n        analysis = moduleAnalyzer.analyze(normalizedId, current);\n        analysis.initialize(container);\n        analysis.register(resources, names[i]);\n\n        allAnalysis[i] = analysis;\n      }\n\n      if (compileInstruction.associatedModuleId) {\n        associatedModule = moduleAnalyzer.getAnalysis(compileInstruction.associatedModuleId);\n\n        if (associatedModule) {\n          associatedModule.register(resources);\n        }\n      }\n\n      for (i = 0, ii = allAnalysis.length; i < ii; ++i) {\n        allAnalysis[i] = allAnalysis[i].load(container, loadContext);\n      }\n\n      return Promise.all(allAnalysis).then(() => resources);\n    });\n  }\n\n  _applyLoaderPlugin(id) {\n    let index = id.lastIndexOf('.');\n    if (index !== -1) {\n      let ext = id.substring(index);\n      let pluginName = this._pluginMap[ext];\n\n      if (pluginName === undefined) {\n        return id;\n      }\n\n      return this.loader.applyPluginToUrl(id, pluginName);\n    }\n\n    return id;\n  }\n}, _class15.viewModelRequireMetadataKey = 'aurelia:view-model-require', _temp4)) || _class14);\n\nexport let Controller = class Controller {\n  constructor(behavior, instruction, viewModel, container) {\n    this.behavior = behavior;\n    this.instruction = instruction;\n    this.viewModel = viewModel;\n    this.isAttached = false;\n    this.view = null;\n    this.isBound = false;\n    this.scope = null;\n    this.container = container;\n    this.elementEvents = container.elementEvents || null;\n\n    let observerLookup = behavior.observerLocator.getOrCreateObserversLookup(viewModel);\n    let handlesBind = behavior.handlesBind;\n    let attributes = instruction.attributes;\n    let boundProperties = this.boundProperties = [];\n    let properties = behavior.properties;\n    let i;\n    let ii;\n\n    behavior._ensurePropertiesDefined(viewModel, observerLookup);\n\n    for (i = 0, ii = properties.length; i < ii; ++i) {\n      properties[i]._initialize(viewModel, observerLookup, attributes, handlesBind, boundProperties);\n    }\n  }\n\n  created(owningView) {\n    if (this.behavior.handlesCreated) {\n      this.viewModel.created(owningView, this.view);\n    }\n  }\n\n  automate(overrideContext, owningView) {\n    this.view.bindingContext = this.viewModel;\n    this.view.overrideContext = overrideContext || createOverrideContext(this.viewModel);\n    this.view._isUserControlled = true;\n\n    if (this.behavior.handlesCreated) {\n      this.viewModel.created(owningView || null, this.view);\n    }\n\n    this.bind(this.view);\n  }\n\n  bind(scope) {\n    let skipSelfSubscriber = this.behavior.handlesBind;\n    let boundProperties = this.boundProperties;\n    let i;\n    let ii;\n    let x;\n    let observer;\n    let selfSubscriber;\n\n    if (this.isBound) {\n      if (this.scope === scope) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.scope = scope;\n\n    for (i = 0, ii = boundProperties.length; i < ii; ++i) {\n      x = boundProperties[i];\n      observer = x.observer;\n      selfSubscriber = observer.selfSubscriber;\n      observer.publishing = false;\n\n      if (skipSelfSubscriber) {\n        observer.selfSubscriber = null;\n      }\n\n      x.binding.bind(scope);\n      observer.call();\n\n      observer.publishing = true;\n      observer.selfSubscriber = selfSubscriber;\n    }\n\n    let overrideContext;\n    if (this.view !== null) {\n      if (skipSelfSubscriber) {\n        this.view.viewModelScope = scope;\n      }\n\n      if (this.viewModel === scope.overrideContext.bindingContext) {\n        overrideContext = scope.overrideContext;\n      } else if (this.instruction.inheritBindingContext) {\n        overrideContext = createOverrideContext(this.viewModel, scope.overrideContext);\n      } else {\n        overrideContext = createOverrideContext(this.viewModel);\n        overrideContext.__parentOverrideContext = scope.overrideContext;\n      }\n\n      this.view.bind(this.viewModel, overrideContext);\n    } else if (skipSelfSubscriber) {\n      overrideContext = scope.overrideContext;\n\n      if (scope.overrideContext.__parentOverrideContext !== undefined && this.viewModel.viewFactory && this.viewModel.viewFactory.factoryCreateInstruction.partReplacements) {\n        overrideContext = Object.assign({}, scope.overrideContext);\n        overrideContext.parentOverrideContext = scope.overrideContext.__parentOverrideContext;\n      }\n      this.viewModel.bind(scope.bindingContext, overrideContext);\n    }\n  }\n\n  unbind() {\n    if (this.isBound) {\n      let boundProperties = this.boundProperties;\n      let i;\n      let ii;\n\n      this.isBound = false;\n      this.scope = null;\n\n      if (this.view !== null) {\n        this.view.unbind();\n      }\n\n      if (this.behavior.handlesUnbind) {\n        this.viewModel.unbind();\n      }\n\n      if (this.elementEvents !== null) {\n        this.elementEvents.disposeAll();\n      }\n\n      for (i = 0, ii = boundProperties.length; i < ii; ++i) {\n        boundProperties[i].binding.unbind();\n      }\n    }\n  }\n\n  attached() {\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.behavior.handlesAttached) {\n      this.viewModel.attached();\n    }\n\n    if (this.view !== null) {\n      this.view.attached();\n    }\n  }\n\n  detached() {\n    if (this.isAttached) {\n      this.isAttached = false;\n\n      if (this.view !== null) {\n        this.view.detached();\n      }\n\n      if (this.behavior.handlesDetached) {\n        this.viewModel.detached();\n      }\n    }\n  }\n};\n\nexport let BehaviorPropertyObserver = (_dec9 = subscriberCollection(), _dec9(_class16 = class BehaviorPropertyObserver {\n  constructor(taskQueue, obj, propertyName, selfSubscriber, initialValue) {\n    this.taskQueue = taskQueue;\n    this.obj = obj;\n    this.propertyName = propertyName;\n    this.notqueued = true;\n    this.publishing = false;\n    this.selfSubscriber = selfSubscriber;\n    this.currentValue = this.oldValue = initialValue;\n  }\n\n  getValue() {\n    return this.currentValue;\n  }\n\n  setValue(newValue) {\n    let oldValue = this.currentValue;\n\n    if (!Object.is(newValue, oldValue)) {\n      this.oldValue = oldValue;\n      this.currentValue = newValue;\n\n      if (this.publishing && this.notqueued) {\n        if (this.taskQueue.flushing) {\n          this.call();\n        } else {\n          this.notqueued = false;\n          this.taskQueue.queueMicroTask(this);\n        }\n      }\n    }\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.currentValue;\n\n    this.notqueued = true;\n\n    if (Object.is(newValue, oldValue)) {\n      return;\n    }\n\n    if (this.selfSubscriber) {\n      this.selfSubscriber(newValue, oldValue);\n    }\n\n    this.callSubscribers(newValue, oldValue);\n    this.oldValue = newValue;\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n}) || _class16);\n\nfunction getObserver(instance, name) {\n  let lookup = instance.__observers__;\n\n  if (lookup === undefined) {\n    let ctor = Object.getPrototypeOf(instance).constructor;\n    let behavior = metadata.get(metadata.resource, ctor);\n    if (!behavior.isInitialized) {\n      behavior.initialize(Container.instance || new Container(), instance.constructor);\n    }\n\n    lookup = behavior.observerLocator.getOrCreateObserversLookup(instance);\n    behavior._ensurePropertiesDefined(instance, lookup);\n  }\n\n  return lookup[name];\n}\n\nexport let BindableProperty = class BindableProperty {\n  constructor(nameOrConfig) {\n    if (typeof nameOrConfig === 'string') {\n      this.name = nameOrConfig;\n    } else {\n      Object.assign(this, nameOrConfig);\n    }\n\n    this.attribute = this.attribute || _hyphenate(this.name);\n    let defaultBindingMode = this.defaultBindingMode;\n    if (defaultBindingMode === null || defaultBindingMode === undefined) {\n      this.defaultBindingMode = bindingMode.oneWay;\n    } else if (typeof defaultBindingMode === 'string') {\n      this.defaultBindingMode = bindingMode[defaultBindingMode] || bindingMode.oneWay;\n    }\n    this.changeHandler = this.changeHandler || null;\n    this.owner = null;\n    this.descriptor = null;\n  }\n\n  registerWith(target, behavior, descriptor) {\n    behavior.properties.push(this);\n    behavior.attributes[this.attribute] = this;\n    this.owner = behavior;\n\n    if (descriptor) {\n      this.descriptor = descriptor;\n      return this._configureDescriptor(descriptor);\n    }\n\n    return undefined;\n  }\n\n  _configureDescriptor(descriptor) {\n    let name = this.name;\n\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n\n    if ('initializer' in descriptor) {\n      this.defaultValue = descriptor.initializer;\n      delete descriptor.initializer;\n      delete descriptor.writable;\n    }\n\n    if ('value' in descriptor) {\n      this.defaultValue = descriptor.value;\n      delete descriptor.value;\n      delete descriptor.writable;\n    }\n\n    descriptor.get = function () {\n      return getObserver(this, name).getValue();\n    };\n\n    descriptor.set = function (value) {\n      getObserver(this, name).setValue(value);\n    };\n\n    descriptor.get.getObserver = function (obj) {\n      return getObserver(obj, name);\n    };\n\n    return descriptor;\n  }\n\n  defineOn(target, behavior) {\n    let name = this.name;\n    let handlerName;\n\n    if (this.changeHandler === null) {\n      handlerName = name + 'Changed';\n      if (handlerName in target.prototype) {\n        this.changeHandler = handlerName;\n      }\n    }\n\n    if (this.descriptor === null) {\n      Object.defineProperty(target.prototype, name, this._configureDescriptor(behavior, {}));\n    }\n  }\n\n  createObserver(viewModel) {\n    let selfSubscriber = null;\n    let defaultValue = this.defaultValue;\n    let changeHandlerName = this.changeHandler;\n    let name = this.name;\n    let initialValue;\n\n    if (this.hasOptions) {\n      return undefined;\n    }\n\n    if (changeHandlerName in viewModel) {\n      if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => {\n          viewModel[changeHandlerName](newValue, oldValue);\n          viewModel.propertyChanged(name, newValue, oldValue);\n        };\n      } else {\n        selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n      }\n    } else if ('propertyChanged' in viewModel) {\n      selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    } else if (changeHandlerName !== null) {\n      throw new Error(`Change handler ${changeHandlerName} was specified but not declared on the class.`);\n    }\n\n    if (defaultValue !== undefined) {\n      initialValue = typeof defaultValue === 'function' ? defaultValue.call(viewModel) : defaultValue;\n    }\n\n    return new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, this.name, selfSubscriber, initialValue);\n  }\n\n  _initialize(viewModel, observerLookup, attributes, behaviorHandlesBind, boundProperties) {\n    let selfSubscriber;\n    let observer;\n    let attribute;\n    let defaultValue = this.defaultValue;\n\n    if (this.isDynamic) {\n      for (let key in attributes) {\n        this._createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, key, attributes[key], boundProperties);\n      }\n    } else if (!this.hasOptions) {\n      observer = observerLookup[this.name];\n\n      if (attributes !== null) {\n        selfSubscriber = observer.selfSubscriber;\n        attribute = attributes[this.attribute];\n\n        if (behaviorHandlesBind) {\n          observer.selfSubscriber = null;\n        }\n\n        if (typeof attribute === 'string') {\n          viewModel[this.name] = attribute;\n          observer.call();\n        } else if (attribute) {\n          boundProperties.push({ observer: observer, binding: attribute.createBinding(viewModel) });\n        } else if (defaultValue !== undefined) {\n          observer.call();\n        }\n\n        observer.selfSubscriber = selfSubscriber;\n      }\n\n      observer.publishing = true;\n    }\n  }\n\n  _createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, name, attribute, boundProperties) {\n    let changeHandlerName = name + 'Changed';\n    let selfSubscriber = null;\n    let observer;\n    let info;\n\n    if (changeHandlerName in viewModel) {\n      if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => {\n          viewModel[changeHandlerName](newValue, oldValue);\n          viewModel.propertyChanged(name, newValue, oldValue);\n        };\n      } else {\n        selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n      }\n    } else if ('propertyChanged' in viewModel) {\n      selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    }\n\n    observer = observerLookup[name] = new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, name, selfSubscriber);\n\n    Object.defineProperty(viewModel, name, {\n      configurable: true,\n      enumerable: true,\n      get: observer.getValue.bind(observer),\n      set: observer.setValue.bind(observer)\n    });\n\n    if (behaviorHandlesBind) {\n      observer.selfSubscriber = null;\n    }\n\n    if (typeof attribute === 'string') {\n      viewModel[name] = attribute;\n      observer.call();\n    } else if (attribute) {\n      info = { observer: observer, binding: attribute.createBinding(viewModel) };\n      boundProperties.push(info);\n    }\n\n    observer.publishing = true;\n    observer.selfSubscriber = selfSubscriber;\n  }\n};\n\nlet lastProviderId = 0;\n\nfunction nextProviderId() {\n  return ++lastProviderId;\n}\n\nfunction doProcessContent() {\n  return true;\n}\nfunction doProcessAttributes() {}\n\nexport let HtmlBehaviorResource = class HtmlBehaviorResource {\n  constructor() {\n    this.elementName = null;\n    this.attributeName = null;\n    this.attributeDefaultBindingMode = undefined;\n    this.liftsContent = false;\n    this.targetShadowDOM = false;\n    this.shadowDOMOptions = null;\n    this.processAttributes = doProcessAttributes;\n    this.processContent = doProcessContent;\n    this.usesShadowDOM = false;\n    this.childBindings = null;\n    this.hasDynamicOptions = false;\n    this.containerless = false;\n    this.properties = [];\n    this.attributes = {};\n    this.isInitialized = false;\n    this.primaryProperty = null;\n  }\n\n  static convention(name, existing) {\n    let behavior;\n\n    if (name.endsWith('CustomAttribute')) {\n      behavior = existing || new HtmlBehaviorResource();\n      behavior.attributeName = _hyphenate(name.substring(0, name.length - 15));\n    }\n\n    if (name.endsWith('CustomElement')) {\n      behavior = existing || new HtmlBehaviorResource();\n      behavior.elementName = _hyphenate(name.substring(0, name.length - 13));\n    }\n\n    return behavior;\n  }\n\n  addChildBinding(behavior) {\n    if (this.childBindings === null) {\n      this.childBindings = [];\n    }\n\n    this.childBindings.push(behavior);\n  }\n\n  initialize(container, target) {\n    let proto = target.prototype;\n    let properties = this.properties;\n    let attributeName = this.attributeName;\n    let attributeDefaultBindingMode = this.attributeDefaultBindingMode;\n    let i;\n    let ii;\n    let current;\n\n    if (this.isInitialized) {\n      return;\n    }\n\n    this.isInitialized = true;\n    target.__providerId__ = nextProviderId();\n\n    this.observerLocator = container.get(ObserverLocator);\n    this.taskQueue = container.get(TaskQueue);\n\n    this.target = target;\n    this.usesShadowDOM = this.targetShadowDOM && FEATURE.shadowDOM;\n    this.handlesCreated = 'created' in proto;\n    this.handlesBind = 'bind' in proto;\n    this.handlesUnbind = 'unbind' in proto;\n    this.handlesAttached = 'attached' in proto;\n    this.handlesDetached = 'detached' in proto;\n    this.htmlName = this.elementName || this.attributeName;\n\n    if (attributeName !== null) {\n      if (properties.length === 0) {\n        new BindableProperty({\n          name: 'value',\n          changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,\n          attribute: attributeName,\n          defaultBindingMode: attributeDefaultBindingMode\n        }).registerWith(target, this);\n      }\n\n      current = properties[0];\n\n      if (properties.length === 1 && current.name === 'value') {\n        current.isDynamic = current.hasOptions = this.hasDynamicOptions;\n        current.defineOn(target, this);\n      } else {\n        for (i = 0, ii = properties.length; i < ii; ++i) {\n          properties[i].defineOn(target, this);\n          if (properties[i].primaryProperty) {\n            if (this.primaryProperty) {\n              throw new Error('Only one bindable property on a custom element can be defined as the default');\n            }\n            this.primaryProperty = properties[i];\n          }\n        }\n\n        current = new BindableProperty({\n          name: 'value',\n          changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,\n          attribute: attributeName,\n          defaultBindingMode: attributeDefaultBindingMode\n        });\n\n        current.hasOptions = true;\n        current.registerWith(target, this);\n      }\n    } else {\n      for (i = 0, ii = properties.length; i < ii; ++i) {\n        properties[i].defineOn(target, this);\n      }\n\n      this._copyInheritedProperties(container, target);\n    }\n  }\n\n  register(registry, name) {\n    if (this.attributeName !== null) {\n      registry.registerAttribute(name || this.attributeName, this, this.attributeName);\n\n      if (Array.isArray(this.aliases)) {\n        this.aliases.forEach(alias => {\n          registry.registerAttribute(alias, this, this.attributeName);\n        });\n      }\n    }\n\n    if (this.elementName !== null) {\n      registry.registerElement(name || this.elementName, this);\n    }\n  }\n\n  load(container, target, loadContext, viewStrategy, transientView) {\n    let options;\n\n    if (this.elementName !== null) {\n      viewStrategy = container.get(ViewLocator).getViewStrategy(viewStrategy || this.viewStrategy || target);\n      options = new ViewCompileInstruction(this.targetShadowDOM, true);\n\n      if (!viewStrategy.moduleId) {\n        viewStrategy.moduleId = Origin.get(target).moduleId;\n      }\n\n      return viewStrategy.loadViewFactory(container.get(ViewEngine), options, loadContext, target).then(viewFactory => {\n        if (!transientView || !this.viewFactory) {\n          this.viewFactory = viewFactory;\n        }\n\n        return viewFactory;\n      });\n    }\n\n    return Promise.resolve(this);\n  }\n\n  compile(compiler, resources, node, instruction, parentNode) {\n    if (this.liftsContent) {\n      if (!instruction.viewFactory) {\n        let template = DOM.createElement('template');\n        let fragment = DOM.createDocumentFragment();\n        let cacheSize = node.getAttribute('view-cache');\n        let part = node.getAttribute('part');\n\n        node.removeAttribute(instruction.originalAttrName);\n        DOM.replaceNode(template, node, parentNode);\n        fragment.appendChild(node);\n        instruction.viewFactory = compiler.compile(fragment, resources);\n\n        if (part) {\n          instruction.viewFactory.part = part;\n          node.removeAttribute('part');\n        }\n\n        if (cacheSize) {\n          instruction.viewFactory.setCacheSize(cacheSize);\n          node.removeAttribute('view-cache');\n        }\n\n        node = template;\n      }\n    } else if (this.elementName !== null) {\n      let partReplacements = {};\n\n      if (this.processContent(compiler, resources, node, instruction) && node.hasChildNodes()) {\n        let currentChild = node.firstChild;\n        let contentElement = this.usesShadowDOM ? null : DOM.createElement('au-content');\n        let nextSibling;\n        let toReplace;\n\n        while (currentChild) {\n          nextSibling = currentChild.nextSibling;\n\n          if (currentChild.tagName === 'TEMPLATE' && (toReplace = currentChild.getAttribute('replace-part'))) {\n            partReplacements[toReplace] = compiler.compile(currentChild, resources);\n            DOM.removeNode(currentChild, parentNode);\n            instruction.partReplacements = partReplacements;\n          } else if (contentElement !== null) {\n            if (currentChild.nodeType === 3 && _isAllWhitespace(currentChild)) {\n              DOM.removeNode(currentChild, parentNode);\n            } else {\n              contentElement.appendChild(currentChild);\n            }\n          }\n\n          currentChild = nextSibling;\n        }\n\n        if (contentElement !== null && contentElement.hasChildNodes()) {\n          node.appendChild(contentElement);\n        }\n\n        instruction.skipContentProcessing = false;\n      } else {\n        instruction.skipContentProcessing = true;\n      }\n    } else if (!this.processContent(compiler, resources, node, instruction)) {\n      instruction.skipContentProcessing = true;\n    }\n\n    return node;\n  }\n\n  create(container, instruction, element, bindings) {\n    let viewHost;\n    let au = null;\n\n    instruction = instruction || BehaviorInstruction.normal;\n    element = element || null;\n    bindings = bindings || null;\n\n    if (this.elementName !== null && element) {\n      if (this.usesShadowDOM) {\n        viewHost = element.attachShadow(this.shadowDOMOptions);\n        container.registerInstance(DOM.boundary, viewHost);\n      } else {\n        viewHost = element;\n        if (this.targetShadowDOM) {\n          container.registerInstance(DOM.boundary, viewHost);\n        }\n      }\n    }\n\n    if (element !== null) {\n      element.au = au = element.au || {};\n    }\n\n    let viewModel = instruction.viewModel || container.get(this.target);\n    let controller = new Controller(this, instruction, viewModel, container);\n    let childBindings = this.childBindings;\n    let viewFactory;\n\n    if (this.liftsContent) {\n      au.controller = controller;\n    } else if (this.elementName !== null) {\n      viewFactory = instruction.viewFactory || this.viewFactory;\n      container.viewModel = viewModel;\n\n      if (viewFactory) {\n        controller.view = viewFactory.create(container, instruction, element);\n      }\n\n      if (element !== null) {\n        au.controller = controller;\n\n        if (controller.view) {\n          if (!this.usesShadowDOM && (element.childNodes.length === 1 || element.contentElement)) {\n            let contentElement = element.childNodes[0] || element.contentElement;\n            controller.view.contentView = { fragment: contentElement };\n            contentElement.parentNode && DOM.removeNode(contentElement);\n          }\n\n          if (instruction.anchorIsContainer) {\n            if (childBindings !== null) {\n              for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n                controller.view.addBinding(childBindings[i].create(element, viewModel, controller));\n              }\n            }\n\n            controller.view.appendNodesTo(viewHost);\n          } else {\n            controller.view.insertNodesBefore(viewHost);\n          }\n        } else if (childBindings !== null) {\n          for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n            bindings.push(childBindings[i].create(element, viewModel, controller));\n          }\n        }\n      } else if (controller.view) {\n        controller.view.controller = controller;\n\n        if (childBindings !== null) {\n          for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n            controller.view.addBinding(childBindings[i].create(instruction.host, viewModel, controller));\n          }\n        }\n      } else if (childBindings !== null) {\n        for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n          bindings.push(childBindings[i].create(instruction.host, viewModel, controller));\n        }\n      }\n    } else if (childBindings !== null) {\n      for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n        bindings.push(childBindings[i].create(element, viewModel, controller));\n      }\n    }\n\n    if (au !== null) {\n      au[this.htmlName] = controller;\n    }\n\n    if (instruction.initiatedByBehavior && viewFactory) {\n      controller.view.created();\n    }\n\n    return controller;\n  }\n\n  _ensurePropertiesDefined(instance, lookup) {\n    let properties;\n    let i;\n    let ii;\n    let observer;\n\n    if ('__propertiesDefined__' in lookup) {\n      return;\n    }\n\n    lookup.__propertiesDefined__ = true;\n    properties = this.properties;\n\n    for (i = 0, ii = properties.length; i < ii; ++i) {\n      observer = properties[i].createObserver(instance);\n\n      if (observer !== undefined) {\n        lookup[observer.propertyName] = observer;\n      }\n    }\n  }\n\n  _copyInheritedProperties(container, target) {\n    let behavior;\n    let derived = target;\n\n    while (true) {\n      let proto = Object.getPrototypeOf(target.prototype);\n      target = proto && proto.constructor;\n      if (!target) {\n        return;\n      }\n      behavior = metadata.getOwn(metadata.resource, target);\n      if (behavior) {\n        break;\n      }\n    }\n    behavior.initialize(container, target);\n    for (let i = 0, ii = behavior.properties.length; i < ii; ++i) {\n      let prop = behavior.properties[i];\n\n      if (this.properties.some(p => p.name === prop.name)) {\n        continue;\n      }\n\n      new BindableProperty(prop).registerWith(derived, this);\n    }\n  }\n};\n\nfunction createChildObserverDecorator(selectorOrConfig, all) {\n  return function (target, key, descriptor) {\n    let actualTarget = typeof key === 'string' ? target.constructor : target;\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, actualTarget);\n\n    if (typeof selectorOrConfig === 'string') {\n      selectorOrConfig = {\n        selector: selectorOrConfig,\n        name: key\n      };\n    }\n\n    if (descriptor) {\n      descriptor.writable = true;\n      descriptor.configurable = true;\n    }\n\n    selectorOrConfig.all = all;\n    r.addChildBinding(new ChildObserver(selectorOrConfig));\n  };\n}\n\nexport function children(selectorOrConfig) {\n  return createChildObserverDecorator(selectorOrConfig, true);\n}\n\nexport function child(selectorOrConfig) {\n  return createChildObserverDecorator(selectorOrConfig, false);\n}\n\nlet ChildObserver = class ChildObserver {\n  constructor(config) {\n    this.name = config.name;\n    this.changeHandler = config.changeHandler || this.name + 'Changed';\n    this.selector = config.selector;\n    this.all = config.all;\n  }\n\n  create(viewHost, viewModel, controller) {\n    return new ChildObserverBinder(this.selector, viewHost, this.name, viewModel, controller, this.changeHandler, this.all);\n  }\n};\n\n\nconst noMutations = [];\n\nfunction trackMutation(groupedMutations, binder, record) {\n  let mutations = groupedMutations.get(binder);\n\n  if (!mutations) {\n    mutations = [];\n    groupedMutations.set(binder, mutations);\n  }\n\n  mutations.push(record);\n}\n\nfunction onChildChange(mutations, observer) {\n  let binders = observer.binders;\n  let bindersLength = binders.length;\n  let groupedMutations = new Map();\n\n  for (let i = 0, ii = mutations.length; i < ii; ++i) {\n    let record = mutations[i];\n    let added = record.addedNodes;\n    let removed = record.removedNodes;\n\n    for (let j = 0, jj = removed.length; j < jj; ++j) {\n      let node = removed[j];\n      if (node.nodeType === 1) {\n        for (let k = 0; k < bindersLength; ++k) {\n          let binder = binders[k];\n          if (binder.onRemove(node)) {\n            trackMutation(groupedMutations, binder, record);\n          }\n        }\n      }\n    }\n\n    for (let j = 0, jj = added.length; j < jj; ++j) {\n      let node = added[j];\n      if (node.nodeType === 1) {\n        for (let k = 0; k < bindersLength; ++k) {\n          let binder = binders[k];\n          if (binder.onAdd(node)) {\n            trackMutation(groupedMutations, binder, record);\n          }\n        }\n      }\n    }\n  }\n\n  groupedMutations.forEach((value, key) => {\n    if (key.changeHandler !== null) {\n      key.viewModel[key.changeHandler](value);\n    }\n  });\n}\n\nlet ChildObserverBinder = class ChildObserverBinder {\n  constructor(selector, viewHost, property, viewModel, controller, changeHandler, all) {\n    this.selector = selector;\n    this.viewHost = viewHost;\n    this.property = property;\n    this.viewModel = viewModel;\n    this.controller = controller;\n    this.changeHandler = changeHandler in viewModel ? changeHandler : null;\n    this.usesShadowDOM = controller.behavior.usesShadowDOM;\n    this.all = all;\n\n    if (!this.usesShadowDOM && controller.view && controller.view.contentView) {\n      this.contentView = controller.view.contentView;\n    } else {\n      this.contentView = null;\n    }\n  }\n\n  matches(element) {\n    if (element.matches(this.selector)) {\n      if (this.contentView === null) {\n        return true;\n      }\n\n      let contentView = this.contentView;\n      let assignedSlot = element.auAssignedSlot;\n\n      if (assignedSlot && assignedSlot.projectFromAnchors) {\n        let anchors = assignedSlot.projectFromAnchors;\n\n        for (let i = 0, ii = anchors.length; i < ii; ++i) {\n          if (anchors[i].auOwnerView === contentView) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return element.auOwnerView === contentView;\n    }\n\n    return false;\n  }\n\n  bind(source) {\n    let viewHost = this.viewHost;\n    let viewModel = this.viewModel;\n    let observer = viewHost.__childObserver__;\n\n    if (!observer) {\n      observer = viewHost.__childObserver__ = DOM.createMutationObserver(onChildChange);\n\n      let options = {\n        childList: true,\n        subtree: !this.usesShadowDOM\n      };\n\n      observer.observe(viewHost, options);\n      observer.binders = [];\n    }\n\n    observer.binders.push(this);\n\n    if (this.usesShadowDOM) {\n      let current = viewHost.firstElementChild;\n\n      if (this.all) {\n        let items = viewModel[this.property];\n        if (!items) {\n          items = viewModel[this.property] = [];\n        } else {\n          items.splice(0);\n        }\n\n        while (current) {\n          if (this.matches(current)) {\n            items.push(current.au && current.au.controller ? current.au.controller.viewModel : current);\n          }\n\n          current = current.nextElementSibling;\n        }\n\n        if (this.changeHandler !== null) {\n          this.viewModel[this.changeHandler](noMutations);\n        }\n      } else {\n        while (current) {\n          if (this.matches(current)) {\n            let value = current.au && current.au.controller ? current.au.controller.viewModel : current;\n            this.viewModel[this.property] = value;\n\n            if (this.changeHandler !== null) {\n              this.viewModel[this.changeHandler](value);\n            }\n\n            break;\n          }\n\n          current = current.nextElementSibling;\n        }\n      }\n    }\n  }\n\n  onRemove(element) {\n    if (this.matches(element)) {\n      let value = element.au && element.au.controller ? element.au.controller.viewModel : element;\n\n      if (this.all) {\n        let items = this.viewModel[this.property] || (this.viewModel[this.property] = []);\n        let index = items.indexOf(value);\n\n        if (index !== -1) {\n          items.splice(index, 1);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  onAdd(element) {\n    if (this.matches(element)) {\n      let value = element.au && element.au.controller ? element.au.controller.viewModel : element;\n\n      if (this.all) {\n        let items = this.viewModel[this.property] || (this.viewModel[this.property] = []);\n\n        if (this.selector === '*') {\n          items.push(value);\n          return true;\n        }\n\n        let index = 0;\n        let prev = element.previousElementSibling;\n\n        while (prev) {\n          if (this.matches(prev)) {\n            index++;\n          }\n\n          prev = prev.previousElementSibling;\n        }\n\n        items.splice(index, 0, value);\n        return true;\n      }\n\n      this.viewModel[this.property] = value;\n\n      if (this.changeHandler !== null) {\n        this.viewModel[this.changeHandler](value);\n      }\n    }\n\n    return false;\n  }\n\n  unbind() {\n    if (this.viewHost.__childObserver__) {\n      this.viewHost.__childObserver__.disconnect();\n      this.viewHost.__childObserver__ = null;\n      this.viewModel[this.property] = null;\n    }\n  }\n};\n\n\nfunction remove(viewSlot, previous) {\n  return Array.isArray(previous) ? viewSlot.removeMany(previous, true) : viewSlot.remove(previous, true);\n}\n\nexport const SwapStrategies = {\n  before(viewSlot, previous, callback) {\n    return previous === undefined ? callback() : callback().then(() => remove(viewSlot, previous));\n  },\n\n  with(viewSlot, previous, callback) {\n    return previous === undefined ? callback() : Promise.all([remove(viewSlot, previous), callback()]);\n  },\n\n  after(viewSlot, previous, callback) {\n    return Promise.resolve(viewSlot.removeAll(true)).then(callback);\n  }\n};\n\nfunction tryActivateViewModel(context) {\n  if (context.skipActivation || typeof context.viewModel.activate !== 'function') {\n    return Promise.resolve();\n  }\n\n  return context.viewModel.activate(context.model) || Promise.resolve();\n}\n\nexport let CompositionEngine = (_dec10 = inject(ViewEngine, ViewLocator), _dec10(_class17 = class CompositionEngine {\n  constructor(viewEngine, viewLocator) {\n    this.viewEngine = viewEngine;\n    this.viewLocator = viewLocator;\n  }\n\n  _swap(context, view) {\n    let swapStrategy = SwapStrategies[context.swapOrder] || SwapStrategies.after;\n    let previousViews = context.viewSlot.children.slice();\n\n    return swapStrategy(context.viewSlot, previousViews, () => {\n      return Promise.resolve(context.viewSlot.add(view)).then(() => {\n        if (context.currentController) {\n          context.currentController.unbind();\n        }\n      });\n    }).then(() => {\n      if (context.compositionTransactionNotifier) {\n        context.compositionTransactionNotifier.done();\n      }\n    });\n  }\n\n  _createControllerAndSwap(context) {\n    return this.createController(context).then(controller => {\n      if (context.compositionTransactionOwnershipToken) {\n        return context.compositionTransactionOwnershipToken.waitForCompositionComplete().then(() => {\n          controller.automate(context.overrideContext, context.owningView);\n\n          return this._swap(context, controller.view);\n        }).then(() => controller);\n      }\n\n      controller.automate(context.overrideContext, context.owningView);\n\n      return this._swap(context, controller.view).then(() => controller);\n    });\n  }\n\n  createController(context) {\n    let childContainer;\n    let viewModel;\n    let viewModelResource;\n\n    let m;\n\n    return this.ensureViewModel(context).then(tryActivateViewModel).then(() => {\n      childContainer = context.childContainer;\n      viewModel = context.viewModel;\n      viewModelResource = context.viewModelResource;\n      m = viewModelResource.metadata;\n\n      let viewStrategy = this.viewLocator.getViewStrategy(context.view || viewModel);\n\n      if (context.viewResources) {\n        viewStrategy.makeRelativeTo(context.viewResources.viewUrl);\n      }\n\n      return m.load(childContainer, viewModelResource.value, null, viewStrategy, true);\n    }).then(viewFactory => m.create(childContainer, BehaviorInstruction.dynamic(context.host, viewModel, viewFactory)));\n  }\n\n  ensureViewModel(context) {\n    let childContainer = context.childContainer = context.childContainer || context.container.createChild();\n\n    if (typeof context.viewModel === 'string') {\n      context.viewModel = context.viewResources ? context.viewResources.relativeToView(context.viewModel) : context.viewModel;\n\n      return this.viewEngine.importViewModelResource(context.viewModel).then(viewModelResource => {\n        childContainer.autoRegister(viewModelResource.value);\n\n        if (context.host) {\n          childContainer.registerInstance(DOM.Element, context.host);\n        }\n\n        context.viewModel = childContainer.viewModel = childContainer.get(viewModelResource.value);\n        context.viewModelResource = viewModelResource;\n        return context;\n      });\n    }\n\n    let ctor = context.viewModel.constructor;\n    let isClass = typeof context.viewModel === 'function';\n    if (isClass) {\n      ctor = context.viewModel;\n      childContainer.autoRegister(ctor);\n    }\n    let m = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, ctor);\n\n    m.elementName = m.elementName || 'dynamic-element';\n\n    m.initialize(isClass ? childContainer : context.container || childContainer, ctor);\n\n    context.viewModelResource = { metadata: m, value: ctor };\n\n    if (context.host) {\n      childContainer.registerInstance(DOM.Element, context.host);\n    }\n    childContainer.viewModel = context.viewModel = isClass ? childContainer.get(ctor) : context.viewModel;\n    return Promise.resolve(context);\n  }\n\n  compose(context) {\n    context.childContainer = context.childContainer || context.container.createChild();\n    context.view = this.viewLocator.getViewStrategy(context.view);\n\n    let transaction = context.childContainer.get(CompositionTransaction);\n    let compositionTransactionOwnershipToken = transaction.tryCapture();\n\n    if (compositionTransactionOwnershipToken) {\n      context.compositionTransactionOwnershipToken = compositionTransactionOwnershipToken;\n    } else {\n      context.compositionTransactionNotifier = transaction.enlist();\n    }\n\n    if (context.viewModel) {\n      return this._createControllerAndSwap(context);\n    } else if (context.view) {\n      if (context.viewResources) {\n        context.view.makeRelativeTo(context.viewResources.viewUrl);\n      }\n\n      return context.view.loadViewFactory(this.viewEngine, new ViewCompileInstruction()).then(viewFactory => {\n        let result = viewFactory.create(context.childContainer);\n        result.bind(context.bindingContext, context.overrideContext);\n\n        if (context.compositionTransactionOwnershipToken) {\n          return context.compositionTransactionOwnershipToken.waitForCompositionComplete().then(() => this._swap(context, result)).then(() => result);\n        }\n\n        return this._swap(context, result).then(() => result);\n      });\n    } else if (context.viewSlot) {\n      context.viewSlot.removeAll();\n\n      if (context.compositionTransactionNotifier) {\n        context.compositionTransactionNotifier.done();\n      }\n\n      return Promise.resolve(null);\n    }\n\n    return Promise.resolve(null);\n  }\n}) || _class17);\n\nexport let ElementConfigResource = class ElementConfigResource {\n  initialize(container, target) {}\n\n  register(registry, name) {}\n\n  load(container, target) {\n    let config = new target();\n    let eventManager = container.get(EventManager);\n    eventManager.registerElementConfig(config);\n  }\n};\n\nexport function resource(instanceOrConfig) {\n  return function (target) {\n    let isConfig = typeof instanceOrConfig === 'string' || Object.getPrototypeOf(instanceOrConfig) === Object.prototype;\n    if (isConfig) {\n      target.$resource = instanceOrConfig;\n    } else {\n      metadata.define(metadata.resource, instanceOrConfig, target);\n    }\n  };\n}\n\nexport function behavior(override) {\n  return function (target) {\n    if (override instanceof HtmlBehaviorResource) {\n      metadata.define(metadata.resource, override, target);\n    } else {\n      let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n      Object.assign(r, override);\n    }\n  };\n}\n\nexport function customElement(name) {\n  return function (target) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n    r.elementName = validateBehaviorName(name, 'custom element');\n  };\n}\n\nexport function customAttribute(name, defaultBindingMode, aliases) {\n  return function (target) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n    r.attributeName = validateBehaviorName(name, 'custom attribute');\n    r.attributeDefaultBindingMode = defaultBindingMode;\n    r.aliases = aliases;\n  };\n}\n\nexport function templateController(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.liftsContent = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function bindable(nameOrConfigOrTarget, key, descriptor) {\n  let deco = function (target, key2, descriptor2) {\n    let actualTarget = key2 ? target.constructor : target;\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, actualTarget);\n    let prop;\n\n    if (key2) {\n      nameOrConfigOrTarget = nameOrConfigOrTarget || {};\n      nameOrConfigOrTarget.name = key2;\n    }\n\n    prop = new BindableProperty(nameOrConfigOrTarget);\n    return prop.registerWith(actualTarget, r, descriptor2);\n  };\n\n  if (!nameOrConfigOrTarget) {\n    return deco;\n  }\n\n  if (key) {\n    let target = nameOrConfigOrTarget;\n    nameOrConfigOrTarget = null;\n    return deco(target, key, descriptor);\n  }\n\n  return deco;\n}\n\nexport function dynamicOptions(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.hasDynamicOptions = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nconst defaultShadowDOMOptions = { mode: 'open' };\n\nexport function useShadowDOM(targetOrOptions) {\n  let options = typeof targetOrOptions === 'function' || !targetOrOptions ? defaultShadowDOMOptions : targetOrOptions;\n\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.targetShadowDOM = true;\n    r.shadowDOMOptions = options;\n  };\n\n  return typeof targetOrOptions === 'function' ? deco(targetOrOptions) : deco;\n}\n\nexport function processAttributes(processor) {\n  return function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.processAttributes = function (compiler, resources, node, attributes, elementInstruction) {\n      try {\n        processor(compiler, resources, node, attributes, elementInstruction);\n      } catch (error) {\n        LogManager.getLogger('templating').error(error);\n      }\n    };\n  };\n}\n\nfunction doNotProcessContent() {\n  return false;\n}\n\nexport function processContent(processor) {\n  return function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.processContent = processor ? function (compiler, resources, node, instruction) {\n      try {\n        return processor(compiler, resources, node, instruction);\n      } catch (error) {\n        LogManager.getLogger('templating').error(error);\n        return false;\n      }\n    } : doNotProcessContent;\n  };\n}\n\nexport function containerless(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.containerless = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function useViewStrategy(strategy) {\n  return function (target) {\n    metadata.define(ViewLocator.viewStrategyMetadataKey, strategy, target);\n  };\n}\n\nexport function useView(path) {\n  return useViewStrategy(new RelativeViewStrategy(path));\n}\n\nexport function inlineView(markup, dependencies, dependencyBaseUrl) {\n  return useViewStrategy(new InlineViewStrategy(markup, dependencies, dependencyBaseUrl));\n}\n\nexport function noView(targetOrDependencies, dependencyBaseUrl) {\n  let target;\n  let dependencies;\n  if (typeof targetOrDependencies === 'function') {\n    target = targetOrDependencies;\n  } else {\n    dependencies = targetOrDependencies;\n    target = undefined;\n  }\n\n  let deco = function (t) {\n    metadata.define(ViewLocator.viewStrategyMetadataKey, new NoViewStrategy(dependencies, dependencyBaseUrl), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function view(templateOrConfig) {\n  return function (target) {\n    target.$view = templateOrConfig;\n  };\n}\n\nexport function elementConfig(target) {\n  let deco = function (t) {\n    metadata.define(metadata.resource, new ElementConfigResource(), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function viewResources(...resources) {\n  return function (target) {\n    metadata.define(ViewEngine.viewModelRequireMetadataKey, resources, target);\n  };\n}\n\nexport let TemplatingEngine = (_dec11 = inject(Container, ModuleAnalyzer, ViewCompiler, CompositionEngine), _dec11(_class18 = class TemplatingEngine {\n  constructor(container, moduleAnalyzer, viewCompiler, compositionEngine) {\n    this._container = container;\n    this._moduleAnalyzer = moduleAnalyzer;\n    this._viewCompiler = viewCompiler;\n    this._compositionEngine = compositionEngine;\n    container.registerInstance(Animator, Animator.instance = new Animator());\n  }\n\n  configureAnimator(animator) {\n    this._container.unregister(Animator);\n    this._container.registerInstance(Animator, Animator.instance = animator);\n  }\n\n  compose(context) {\n    return this._compositionEngine.compose(context);\n  }\n\n  enhance(instruction) {\n    if (instruction instanceof DOM.Element) {\n      instruction = { element: instruction };\n    }\n\n    let compilerInstructions = { letExpressions: [] };\n    let resources = instruction.resources || this._container.get(ViewResources);\n\n    this._viewCompiler._compileNode(instruction.element, resources, compilerInstructions, instruction.element.parentNode, 'root', true);\n\n    let factory = new ViewFactory(instruction.element, compilerInstructions, resources);\n    let container = instruction.container || this._container.createChild();\n    let view = factory.create(container, BehaviorInstruction.enhance());\n\n    view.bind(instruction.bindingContext || {}, instruction.overrideContext);\n\n    view.firstChild = view.lastChild = view.fragment;\n    view.fragment = DOM.createDocumentFragment();\n    view.attached();\n\n    return view;\n  }\n}) || _class18);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating/dist/es2015/aurelia-templating.js\n// module id = 20\n// module chunks = 1","var _dec, _dec2, _class, _dec3, _class2, _dec4, _class3, _dec5, _class5, _dec6, _class7, _dec7, _class8, _dec8, _class9, _dec9, _class10, _class11, _temp, _dec10, _class12, _class13, _temp2;\n\nimport * as LogManager from 'aurelia-logging';\nimport { PLATFORM, DOM } from 'aurelia-pal';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport { metadata } from 'aurelia-metadata';\n\nexport const targetContext = 'Binding:target';\nexport const sourceContext = 'Binding:source';\n\nconst map = Object.create(null);\n\nexport function camelCase(name) {\n  if (name in map) {\n    return map[name];\n  }\n  const result = name.charAt(0).toLowerCase() + name.slice(1).replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n  map[name] = result;\n  return result;\n}\n\nexport function createOverrideContext(bindingContext, parentOverrideContext) {\n  return {\n    bindingContext: bindingContext,\n    parentOverrideContext: parentOverrideContext || null\n  };\n}\n\nexport function getContextFor(name, scope, ancestor) {\n  let oc = scope.overrideContext;\n\n  if (ancestor) {\n    while (ancestor && oc) {\n      ancestor--;\n      oc = oc.parentOverrideContext;\n    }\n    if (ancestor || !oc) {\n      return undefined;\n    }\n    return name in oc ? oc : oc.bindingContext;\n  }\n\n  while (oc && !(name in oc) && !(oc.bindingContext && name in oc.bindingContext)) {\n    oc = oc.parentOverrideContext;\n  }\n  if (oc) {\n    return name in oc ? oc : oc.bindingContext;\n  }\n\n  return scope.bindingContext || scope.overrideContext;\n}\n\nexport function createScopeForTest(bindingContext, parentBindingContext) {\n  if (parentBindingContext) {\n    return {\n      bindingContext,\n      overrideContext: createOverrideContext(bindingContext, createOverrideContext(parentBindingContext))\n    };\n  }\n  return {\n    bindingContext,\n    overrideContext: createOverrideContext(bindingContext)\n  };\n}\n\nconst slotNames = [];\nconst versionSlotNames = [];\n\nfor (let i = 0; i < 100; i++) {\n  slotNames.push(`_observer${i}`);\n  versionSlotNames.push(`_observerVersion${i}`);\n}\n\nfunction addObserver(observer) {\n  let observerSlots = this._observerSlots === undefined ? 0 : this._observerSlots;\n  let i = observerSlots;\n  while (i-- && this[slotNames[i]] !== observer) {}\n\n  if (i === -1) {\n    i = 0;\n    while (this[slotNames[i]]) {\n      i++;\n    }\n    this[slotNames[i]] = observer;\n    observer.subscribe(sourceContext, this);\n\n    if (i === observerSlots) {\n      this._observerSlots = i + 1;\n    }\n  }\n\n  if (this._version === undefined) {\n    this._version = 0;\n  }\n  this[versionSlotNames[i]] = this._version;\n}\n\nfunction observeProperty(obj, propertyName) {\n  let observer = this.observerLocator.getObserver(obj, propertyName);\n  addObserver.call(this, observer);\n}\n\nfunction observeArray(array) {\n  let observer = this.observerLocator.getArrayObserver(array);\n  addObserver.call(this, observer);\n}\n\nfunction unobserve(all) {\n  let i = this._observerSlots;\n  while (i--) {\n    if (all || this[versionSlotNames[i]] !== this._version) {\n      let observer = this[slotNames[i]];\n      this[slotNames[i]] = null;\n      if (observer) {\n        observer.unsubscribe(sourceContext, this);\n      }\n    }\n  }\n}\n\nexport function connectable() {\n  return function (target) {\n    target.prototype.observeProperty = observeProperty;\n    target.prototype.observeArray = observeArray;\n    target.prototype.unobserve = unobserve;\n    target.prototype.addObserver = addObserver;\n  };\n}\n\nconst queue = [];\nconst queued = {};\nlet nextId = 0;\nconst minimumImmediate = 100;\nconst frameBudget = 15;\n\nlet isFlushRequested = false;\nlet immediate = 0;\n\nfunction flush(animationFrameStart) {\n  const length = queue.length;\n  let i = 0;\n  while (i < length) {\n    const binding = queue[i];\n    queued[binding.__connectQueueId] = false;\n    binding.connect(true);\n    i++;\n\n    if (i % 100 === 0 && PLATFORM.performance.now() - animationFrameStart > frameBudget) {\n      break;\n    }\n  }\n  queue.splice(0, i);\n\n  if (queue.length) {\n    PLATFORM.requestAnimationFrame(flush);\n  } else {\n    isFlushRequested = false;\n    immediate = 0;\n  }\n}\n\nexport function enqueueBindingConnect(binding) {\n  if (immediate < minimumImmediate) {\n    immediate++;\n    binding.connect(false);\n  } else {\n    let id = binding.__connectQueueId;\n    if (id === undefined) {\n      id = nextId;\n      nextId++;\n      binding.__connectQueueId = id;\n    }\n\n    if (!queued[id]) {\n      queue.push(binding);\n      queued[id] = true;\n    }\n  }\n  if (!isFlushRequested) {\n    isFlushRequested = true;\n    PLATFORM.requestAnimationFrame(flush);\n  }\n}\n\nfunction addSubscriber(context, callable) {\n  if (this.hasSubscriber(context, callable)) {\n    return false;\n  }\n  if (!this._context0) {\n    this._context0 = context;\n    this._callable0 = callable;\n    return true;\n  }\n  if (!this._context1) {\n    this._context1 = context;\n    this._callable1 = callable;\n    return true;\n  }\n  if (!this._context2) {\n    this._context2 = context;\n    this._callable2 = callable;\n    return true;\n  }\n  if (!this._contextsRest) {\n    this._contextsRest = [context];\n    this._callablesRest = [callable];\n    return true;\n  }\n  this._contextsRest.push(context);\n  this._callablesRest.push(callable);\n  return true;\n}\n\nfunction removeSubscriber(context, callable) {\n  if (this._context0 === context && this._callable0 === callable) {\n    this._context0 = null;\n    this._callable0 = null;\n    return true;\n  }\n  if (this._context1 === context && this._callable1 === callable) {\n    this._context1 = null;\n    this._callable1 = null;\n    return true;\n  }\n  if (this._context2 === context && this._callable2 === callable) {\n    this._context2 = null;\n    this._callable2 = null;\n    return true;\n  }\n  const callables = this._callablesRest;\n  if (callables === undefined || callables.length === 0) {\n    return false;\n  }\n  const contexts = this._contextsRest;\n  let i = 0;\n  while (!(callables[i] === callable && contexts[i] === context) && callables.length > i) {\n    i++;\n  }\n  if (i >= callables.length) {\n    return false;\n  }\n  contexts.splice(i, 1);\n  callables.splice(i, 1);\n  return true;\n}\n\nlet arrayPool1 = [];\nlet arrayPool2 = [];\nlet poolUtilization = [];\n\nfunction callSubscribers(newValue, oldValue) {\n  let context0 = this._context0;\n  let callable0 = this._callable0;\n  let context1 = this._context1;\n  let callable1 = this._callable1;\n  let context2 = this._context2;\n  let callable2 = this._callable2;\n  let length = this._contextsRest ? this._contextsRest.length : 0;\n  let contextsRest;\n  let callablesRest;\n  let poolIndex;\n  let i;\n  if (length) {\n    poolIndex = poolUtilization.length;\n    while (poolIndex-- && poolUtilization[poolIndex]) {}\n    if (poolIndex < 0) {\n      poolIndex = poolUtilization.length;\n      contextsRest = [];\n      callablesRest = [];\n      poolUtilization.push(true);\n      arrayPool1.push(contextsRest);\n      arrayPool2.push(callablesRest);\n    } else {\n      poolUtilization[poolIndex] = true;\n      contextsRest = arrayPool1[poolIndex];\n      callablesRest = arrayPool2[poolIndex];\n    }\n\n    i = length;\n    while (i--) {\n      contextsRest[i] = this._contextsRest[i];\n      callablesRest[i] = this._callablesRest[i];\n    }\n  }\n\n  if (context0) {\n    if (callable0) {\n      callable0.call(context0, newValue, oldValue);\n    } else {\n      context0(newValue, oldValue);\n    }\n  }\n  if (context1) {\n    if (callable1) {\n      callable1.call(context1, newValue, oldValue);\n    } else {\n      context1(newValue, oldValue);\n    }\n  }\n  if (context2) {\n    if (callable2) {\n      callable2.call(context2, newValue, oldValue);\n    } else {\n      context2(newValue, oldValue);\n    }\n  }\n  if (length) {\n    for (i = 0; i < length; i++) {\n      let callable = callablesRest[i];\n      let context = contextsRest[i];\n      if (callable) {\n        callable.call(context, newValue, oldValue);\n      } else {\n        context(newValue, oldValue);\n      }\n      contextsRest[i] = null;\n      callablesRest[i] = null;\n    }\n    poolUtilization[poolIndex] = false;\n  }\n}\n\nfunction hasSubscribers() {\n  return !!(this._context0 || this._context1 || this._context2 || this._contextsRest && this._contextsRest.length);\n}\n\nfunction hasSubscriber(context, callable) {\n  let has = this._context0 === context && this._callable0 === callable || this._context1 === context && this._callable1 === callable || this._context2 === context && this._callable2 === callable;\n  if (has) {\n    return true;\n  }\n  let index;\n  let contexts = this._contextsRest;\n  if (!contexts || (index = contexts.length) === 0) {\n    return false;\n  }\n  let callables = this._callablesRest;\n  while (index--) {\n    if (contexts[index] === context && callables[index] === callable) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function subscriberCollection() {\n  return function (target) {\n    target.prototype.addSubscriber = addSubscriber;\n    target.prototype.removeSubscriber = removeSubscriber;\n    target.prototype.callSubscribers = callSubscribers;\n    target.prototype.hasSubscribers = hasSubscribers;\n    target.prototype.hasSubscriber = hasSubscriber;\n  };\n}\n\nexport let ExpressionObserver = (_dec = connectable(), _dec2 = subscriberCollection(), _dec(_class = _dec2(_class = class ExpressionObserver {\n  constructor(scope, expression, observerLocator, lookupFunctions) {\n    this.scope = scope;\n    this.expression = expression;\n    this.observerLocator = observerLocator;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  getValue() {\n    return this.expression.evaluate(this.scope, this.lookupFunctions);\n  }\n\n  setValue(newValue) {\n    this.expression.assign(this.scope, newValue);\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.expression.evaluate(this.scope, this.lookupFunctions);\n      this.expression.connect(this, this.scope);\n    }\n    this.addSubscriber(context, callable);\n    if (arguments.length === 1 && context instanceof Function) {\n      return {\n        dispose: () => {\n          this.unsubscribe(context, callable);\n        }\n      };\n    }\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.unobserve(true);\n      this.oldValue = undefined;\n    }\n  }\n\n  call() {\n    let newValue = this.expression.evaluate(this.scope, this.lookupFunctions);\n    let oldValue = this.oldValue;\n    if (newValue !== oldValue) {\n      this.oldValue = newValue;\n      this.callSubscribers(newValue, oldValue);\n    }\n    this._version++;\n    this.expression.connect(this, this.scope);\n    this.unobserve(false);\n  }\n}) || _class) || _class);\n\nfunction isIndex(s) {\n  return +s === s >>> 0;\n}\n\nfunction toNumber(s) {\n  return +s;\n}\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nfunction ArraySplice() {}\n\nArraySplice.prototype = {\n  calcEditDistances: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n    let north;\n    let west;\n\n    for (let i = 0; i < rowCount; ++i) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    for (let j = 0; j < columnCount; ++j) {\n      distances[0][j] = j;\n    }\n\n    for (let i = 1; i < rowCount; ++i) {\n      for (let j = 1; j < columnCount; ++j) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1])) {\n          distances[i][j] = distances[i - 1][j - 1];\n        } else {\n          north = distances[i - 1][j] + 1;\n          west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  spliceOperationsFromEditDistances: function (distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i === 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j === 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north) {\n        min = west < northWest ? west : northWest;\n      } else {\n        min = north < northWest ? north : northWest;\n      }\n\n      if (min === northWest) {\n        if (northWest === current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min === west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  calcSplices: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n      prefixCount = this.sharedPrefix(current, old, minLength);\n    }\n\n    if (currentEnd === current.length && oldEnd === old.length) {\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n    }\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n      return [];\n    }\n\n    if (currentStart === currentEnd) {\n      let splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd) {\n        splice.removed.push(old[oldStart++]);\n      }\n\n      return [splice];\n    } else if (oldStart === oldEnd) {\n      return [newSplice(currentStart, [], currentEnd - currentStart)];\n    }\n\n    let ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n\n    let splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n      switch (ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix: function (current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n      if (!this.equals(current[i], old[i])) {\n        return i;\n      }\n    }\n\n    return searchLength;\n  },\n\n  sharedSuffix: function (current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2])) {\n      count++;\n    }\n\n    return count;\n  },\n\n  calculateSplices: function (current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0, previous.length);\n  },\n\n  equals: function (currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n};\n\nlet arraySplice = new ArraySplice();\n\nexport function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n  return arraySplice.calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd);\n}\n\nfunction intersect(start1, end1, start2, end2) {\n  if (end1 < start2 || end2 < start1) {\n    return -1;\n  }\n\n  if (end1 === start2 || end2 === start1) {\n    return 0;\n  }\n\n  if (start1 < start2) {\n    if (end1 < end2) {\n      return end1 - start2;\n    }\n\n    return end2 - start2;\n  }\n\n  if (end2 < end1) {\n    return end2 - start1;\n  }\n\n  return end1 - start1;\n}\n\nexport function mergeSplice(splices, index, removed, addedCount) {\n  let splice = newSplice(index, removed, addedCount);\n\n  let inserted = false;\n  let insertionOffset = 0;\n\n  for (let i = 0; i < splices.length; i++) {\n    let current = splices[i];\n    current.index += insertionOffset;\n\n    if (inserted) {\n      continue;\n    }\n\n    let intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n\n    if (intersectCount >= 0) {\n\n      splices.splice(i, 1);\n      i--;\n\n      insertionOffset -= current.addedCount - current.removed.length;\n\n      splice.addedCount += current.addedCount - intersectCount;\n      let deleteCount = splice.removed.length + current.removed.length - intersectCount;\n\n      if (!splice.addedCount && !deleteCount) {\n        inserted = true;\n      } else {\n        let currentRemoved = current.removed;\n\n        if (splice.index < current.index) {\n          let prepend = splice.removed.slice(0, current.index - splice.index);\n          Array.prototype.push.apply(prepend, currentRemoved);\n          currentRemoved = prepend;\n        }\n\n        if (splice.index + splice.removed.length > current.index + current.addedCount) {\n          let append = splice.removed.slice(current.index + current.addedCount - splice.index);\n          Array.prototype.push.apply(currentRemoved, append);\n        }\n\n        splice.removed = currentRemoved;\n        if (current.index < splice.index) {\n          splice.index = current.index;\n        }\n      }\n    } else if (splice.index < current.index) {\n\n      inserted = true;\n\n      splices.splice(i, 0, splice);\n      i++;\n\n      let offset = splice.addedCount - splice.removed.length;\n      current.index += offset;\n      insertionOffset += offset;\n    }\n  }\n\n  if (!inserted) {\n    splices.push(splice);\n  }\n}\n\nfunction createInitialSplices(array, changeRecords) {\n  let splices = [];\n\n  for (let i = 0; i < changeRecords.length; i++) {\n    let record = changeRecords[i];\n    switch (record.type) {\n      case 'splice':\n        mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);\n        break;\n      case 'add':\n      case 'update':\n      case 'delete':\n        if (!isIndex(record.name)) {\n          continue;\n        }\n\n        let index = toNumber(record.name);\n        if (index < 0) {\n          continue;\n        }\n\n        mergeSplice(splices, index, [record.oldValue], record.type === 'delete' ? 0 : 1);\n        break;\n      default:\n        console.error('Unexpected record type: ' + JSON.stringify(record));\n        break;\n    }\n  }\n\n  return splices;\n}\n\nexport function projectArraySplices(array, changeRecords) {\n  let splices = [];\n\n  createInitialSplices(array, changeRecords).forEach(function (splice) {\n    if (splice.addedCount === 1 && splice.removed.length === 1) {\n      if (splice.removed[0] !== array[splice.index]) {\n        splices.push(splice);\n      }\n\n      return;\n    }\n\n    splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n  });\n\n  return splices;\n}\n\nfunction newRecord(type, object, key, oldValue) {\n  return {\n    type: type,\n    object: object,\n    key: key,\n    oldValue: oldValue\n  };\n}\n\nexport function getChangeRecords(map) {\n  let entries = new Array(map.size);\n  let keys = map.keys();\n  let i = 0;\n  let item;\n\n  while (item = keys.next()) {\n    if (item.done) {\n      break;\n    }\n\n    entries[i] = newRecord('added', map, item.value);\n    i++;\n  }\n\n  return entries;\n}\n\nexport let ModifyCollectionObserver = (_dec3 = subscriberCollection(), _dec3(_class2 = class ModifyCollectionObserver {\n  constructor(taskQueue, collection) {\n    this.taskQueue = taskQueue;\n    this.queued = false;\n    this.changeRecords = null;\n    this.oldCollection = null;\n    this.collection = collection;\n    this.lengthPropertyName = collection instanceof Map || collection instanceof Set ? 'size' : 'length';\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  addChangeRecord(changeRecord) {\n    if (!this.hasSubscribers() && !this.lengthObserver) {\n      return;\n    }\n\n    if (changeRecord.type === 'splice') {\n      let index = changeRecord.index;\n      let arrayLength = changeRecord.object.length;\n      if (index > arrayLength) {\n        index = arrayLength - changeRecord.addedCount;\n      } else if (index < 0) {\n        index = arrayLength + changeRecord.removed.length + index - changeRecord.addedCount;\n      }\n      if (index < 0) {\n        index = 0;\n      }\n      changeRecord.index = index;\n    }\n\n    if (this.changeRecords === null) {\n      this.changeRecords = [changeRecord];\n    } else {\n      this.changeRecords.push(changeRecord);\n    }\n\n    if (!this.queued) {\n      this.queued = true;\n      this.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  flushChangeRecords() {\n    if (this.changeRecords && this.changeRecords.length || this.oldCollection) {\n      this.call();\n    }\n  }\n\n  reset(oldCollection) {\n    this.oldCollection = oldCollection;\n\n    if (this.hasSubscribers() && !this.queued) {\n      this.queued = true;\n      this.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  getLengthObserver() {\n    return this.lengthObserver || (this.lengthObserver = new CollectionLengthObserver(this.collection));\n  }\n\n  call() {\n    let changeRecords = this.changeRecords;\n    let oldCollection = this.oldCollection;\n    let records;\n\n    this.queued = false;\n    this.changeRecords = [];\n    this.oldCollection = null;\n\n    if (this.hasSubscribers()) {\n      if (oldCollection) {\n        if (this.collection instanceof Map || this.collection instanceof Set) {\n          records = getChangeRecords(oldCollection);\n        } else {\n          records = calcSplices(this.collection, 0, this.collection.length, oldCollection, 0, oldCollection.length);\n        }\n      } else {\n        if (this.collection instanceof Map || this.collection instanceof Set) {\n          records = changeRecords;\n        } else {\n          records = projectArraySplices(this.collection, changeRecords);\n        }\n      }\n\n      this.callSubscribers(records);\n    }\n\n    if (this.lengthObserver) {\n      this.lengthObserver.call(this.collection[this.lengthPropertyName]);\n    }\n  }\n}) || _class2);\n\nexport let CollectionLengthObserver = (_dec4 = subscriberCollection(), _dec4(_class3 = class CollectionLengthObserver {\n  constructor(collection) {\n    this.collection = collection;\n    this.lengthPropertyName = collection instanceof Map || collection instanceof Set ? 'size' : 'length';\n    this.currentValue = collection[this.lengthPropertyName];\n  }\n\n  getValue() {\n    return this.collection[this.lengthPropertyName];\n  }\n\n  setValue(newValue) {\n    this.collection[this.lengthPropertyName] = newValue;\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  call(newValue) {\n    let oldValue = this.currentValue;\n    this.callSubscribers(newValue, oldValue);\n    this.currentValue = newValue;\n  }\n}) || _class3);\n\nconst arrayProto = Array.prototype;\nconst pop = arrayProto.pop;\nconst push = arrayProto.push;\nconst reverse = arrayProto.reverse;\nconst shift = arrayProto.shift;\nconst sort = arrayProto.sort;\nconst splice = arrayProto.splice;\nconst unshift = arrayProto.unshift;\n\nif (arrayProto.__au_patched__) {\n  LogManager.getLogger('array-observation').warn('Detected 2nd attempt of patching array from Aurelia binding.' + ' This is probably caused by dependency mismatch between core modules and a 3rd party plugin.' + ' Please see https://github.com/aurelia/cli/pull/906 if you are using webpack.');\n} else {\n  Reflect.defineProperty(arrayProto, '__au_patched__', { value: 1 });\n  arrayProto.pop = function () {\n    let notEmpty = this.length > 0;\n    let methodCallResult = pop.apply(this, arguments);\n    if (notEmpty && this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'delete',\n        object: this,\n        name: this.length,\n        oldValue: methodCallResult\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.push = function () {\n    let methodCallResult = push.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: this.length - arguments.length,\n        removed: [],\n        addedCount: arguments.length\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.reverse = function () {\n    let oldArray;\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.flushChangeRecords();\n      oldArray = this.slice();\n    }\n    let methodCallResult = reverse.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.reset(oldArray);\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.shift = function () {\n    let notEmpty = this.length > 0;\n    let methodCallResult = shift.apply(this, arguments);\n    if (notEmpty && this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'delete',\n        object: this,\n        name: 0,\n        oldValue: methodCallResult\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.sort = function () {\n    let oldArray;\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.flushChangeRecords();\n      oldArray = this.slice();\n    }\n    let methodCallResult = sort.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.reset(oldArray);\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.splice = function () {\n    let methodCallResult = splice.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: +arguments[0],\n        removed: methodCallResult,\n        addedCount: arguments.length > 2 ? arguments.length - 2 : 0\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.unshift = function () {\n    let methodCallResult = unshift.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: 0,\n        removed: [],\n        addedCount: arguments.length\n      });\n    }\n    return methodCallResult;\n  };\n}\n\nexport function getArrayObserver(taskQueue, array) {\n  return ModifyArrayObserver.for(taskQueue, array);\n}\n\nlet ModifyArrayObserver = class ModifyArrayObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, array) {\n    super(taskQueue, array);\n  }\n\n  static for(taskQueue, array) {\n    if (!('__array_observer__' in array)) {\n      Reflect.defineProperty(array, '__array_observer__', {\n        value: ModifyArrayObserver.create(taskQueue, array),\n        enumerable: false, configurable: false\n      });\n    }\n    return array.__array_observer__;\n  }\n\n  static create(taskQueue, array) {\n    return new ModifyArrayObserver(taskQueue, array);\n  }\n};\n\n\nexport let Expression = class Expression {\n  constructor() {\n    this.isAssignable = false;\n  }\n\n  evaluate(scope, lookupFunctions, args) {\n    throw new Error(`Binding expression \"${this}\" cannot be evaluated.`);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    throw new Error(`Binding expression \"${this}\" cannot be assigned to.`);\n  }\n\n  toString() {\n    return typeof FEATURE_NO_UNPARSER === 'undefined' ? Unparser.unparse(this) : super.toString();\n  }\n};\n\nexport let BindingBehavior = class BindingBehavior extends Expression {\n  constructor(expression, name, args) {\n    super();\n\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.expression.evaluate(scope, lookupFunctions);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    return this.expression.assign(scope, value, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitBindingBehavior(this);\n  }\n\n  connect(binding, scope) {\n    this.expression.connect(binding, scope);\n  }\n\n  bind(binding, scope, lookupFunctions) {\n    if (this.expression.expression && this.expression.bind) {\n      this.expression.bind(binding, scope, lookupFunctions);\n    }\n    let behavior = lookupFunctions.bindingBehaviors(this.name);\n    if (!behavior) {\n      throw new Error(`No BindingBehavior named \"${this.name}\" was found!`);\n    }\n    let behaviorKey = `behavior-${this.name}`;\n    if (binding[behaviorKey]) {\n      throw new Error(`A binding behavior named \"${this.name}\" has already been applied to \"${this.expression}\"`);\n    }\n    binding[behaviorKey] = behavior;\n    behavior.bind.apply(behavior, [binding, scope].concat(evalList(scope, this.args, binding.lookupFunctions)));\n  }\n\n  unbind(binding, scope) {\n    let behaviorKey = `behavior-${this.name}`;\n    binding[behaviorKey].unbind(binding, scope);\n    binding[behaviorKey] = null;\n    if (this.expression.expression && this.expression.unbind) {\n      this.expression.unbind(binding, scope);\n    }\n  }\n};\n\nexport let ValueConverter = class ValueConverter extends Expression {\n  constructor(expression, name, args) {\n    super();\n\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n    this.allArgs = [expression].concat(args);\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let converter = lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n\n    if ('toView' in converter) {\n      return converter.toView.apply(converter, evalList(scope, this.allArgs, lookupFunctions));\n    }\n\n    return this.allArgs[0].evaluate(scope, lookupFunctions);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    let converter = lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n\n    if ('fromView' in converter) {\n      value = converter.fromView.apply(converter, [value].concat(evalList(scope, this.args, lookupFunctions)));\n    }\n\n    return this.allArgs[0].assign(scope, value, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitValueConverter(this);\n  }\n\n  connect(binding, scope) {\n    let expressions = this.allArgs;\n    let i = expressions.length;\n    while (i--) {\n      expressions[i].connect(binding, scope);\n    }\n    let converter = binding.lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n    let signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    i = signals.length;\n    while (i--) {\n      connectBindingToSignal(binding, signals[i]);\n    }\n  }\n};\n\nexport let Assign = class Assign extends Expression {\n  constructor(target, value) {\n    super();\n\n    this.target = target;\n    this.value = value;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.target.assign(scope, this.value.evaluate(scope, lookupFunctions));\n  }\n\n  accept(vistor) {\n    vistor.visitAssign(this);\n  }\n\n  connect(binding, scope) {}\n\n  assign(scope, value) {\n    this.value.assign(scope, value);\n    this.target.assign(scope, value);\n  }\n};\n\nexport let Conditional = class Conditional extends Expression {\n  constructor(condition, yes, no) {\n    super();\n\n    this.condition = condition;\n    this.yes = yes;\n    this.no = no;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return !!this.condition.evaluate(scope, lookupFunctions) ? this.yes.evaluate(scope, lookupFunctions) : this.no.evaluate(scope, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitConditional(this);\n  }\n\n  connect(binding, scope) {\n    this.condition.connect(binding, scope);\n    if (this.condition.evaluate(scope)) {\n      this.yes.connect(binding, scope);\n    } else {\n      this.no.connect(binding, scope);\n    }\n  }\n};\n\nexport let AccessThis = class AccessThis extends Expression {\n  constructor(ancestor) {\n    super();\n    this.ancestor = ancestor;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let oc = scope.overrideContext;\n    let i = this.ancestor;\n    while (i-- && oc) {\n      oc = oc.parentOverrideContext;\n    }\n    return i < 1 && oc ? oc.bindingContext : undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessThis(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let AccessScope = class AccessScope extends Expression {\n  constructor(name, ancestor) {\n    super();\n\n    this.name = name;\n    this.ancestor = ancestor;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    return context[this.name];\n  }\n\n  assign(scope, value) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    return context ? context[this.name] = value : undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessScope(this);\n  }\n\n  connect(binding, scope) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    binding.observeProperty(context, this.name);\n  }\n};\n\nexport let AccessMember = class AccessMember extends Expression {\n  constructor(object, name) {\n    super();\n\n    this.object = object;\n    this.name = name;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    return instance === null || instance === undefined ? instance : instance[this.name];\n  }\n\n  assign(scope, value) {\n    let instance = this.object.evaluate(scope);\n\n    if (instance === null || instance === undefined) {\n      instance = {};\n      this.object.assign(scope, instance);\n    }\n\n    instance[this.name] = value;\n    return value;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessMember(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (obj) {\n      binding.observeProperty(obj, this.name);\n    }\n  }\n};\n\nexport let AccessKeyed = class AccessKeyed extends Expression {\n  constructor(object, key) {\n    super();\n\n    this.object = object;\n    this.key = key;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    let lookup = this.key.evaluate(scope, lookupFunctions);\n    return getKeyed(instance, lookup);\n  }\n\n  assign(scope, value) {\n    let instance = this.object.evaluate(scope);\n    let lookup = this.key.evaluate(scope);\n    return setKeyed(instance, lookup, value);\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessKeyed(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (obj instanceof Object) {\n      this.key.connect(binding, scope);\n      let key = this.key.evaluate(scope);\n\n      if (key !== null && key !== undefined && !(Array.isArray(obj) && typeof key === 'number')) {\n        binding.observeProperty(obj, key);\n      }\n    }\n  }\n};\n\nexport let CallScope = class CallScope extends Expression {\n  constructor(name, args, ancestor) {\n    super();\n\n    this.name = name;\n    this.args = args;\n    this.ancestor = ancestor;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let args = evalList(scope, this.args, lookupFunctions);\n    let context = getContextFor(this.name, scope, this.ancestor);\n    let func = getFunction(context, this.name, mustEvaluate);\n    if (func) {\n      return func.apply(context, args);\n    }\n    return undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitCallScope(this);\n  }\n\n  connect(binding, scope) {\n    let args = this.args;\n    let i = args.length;\n    while (i--) {\n      args[i].connect(binding, scope);\n    }\n  }\n};\n\nexport let CallMember = class CallMember extends Expression {\n  constructor(object, name, args) {\n    super();\n\n    this.object = object;\n    this.name = name;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    let args = evalList(scope, this.args, lookupFunctions);\n    let func = getFunction(instance, this.name, mustEvaluate);\n    if (func) {\n      return func.apply(instance, args);\n    }\n    return undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitCallMember(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (getFunction(obj, this.name, false)) {\n      let args = this.args;\n      let i = args.length;\n      while (i--) {\n        args[i].connect(binding, scope);\n      }\n    }\n  }\n};\n\nexport let CallFunction = class CallFunction extends Expression {\n  constructor(func, args) {\n    super();\n\n    this.func = func;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let func = this.func.evaluate(scope, lookupFunctions);\n    if (typeof func === 'function') {\n      return func.apply(null, evalList(scope, this.args, lookupFunctions));\n    }\n    if (!mustEvaluate && (func === null || func === undefined)) {\n      return undefined;\n    }\n    throw new Error(`${this.func} is not a function`);\n  }\n\n  accept(visitor) {\n    return visitor.visitCallFunction(this);\n  }\n\n  connect(binding, scope) {\n    this.func.connect(binding, scope);\n    let func = this.func.evaluate(scope);\n    if (typeof func === 'function') {\n      let args = this.args;\n      let i = args.length;\n      while (i--) {\n        args[i].connect(binding, scope);\n      }\n    }\n  }\n};\n\nexport let Binary = class Binary extends Expression {\n  constructor(operation, left, right) {\n    super();\n\n    this.operation = operation;\n    this.left = left;\n    this.right = right;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let left = this.left.evaluate(scope, lookupFunctions);\n\n    switch (this.operation) {\n      case '&&':\n        return left && this.right.evaluate(scope, lookupFunctions);\n      case '||':\n        return left || this.right.evaluate(scope, lookupFunctions);\n    }\n\n    let right = this.right.evaluate(scope, lookupFunctions);\n\n    switch (this.operation) {\n      case '==':\n        return left == right;\n      case '===':\n        return left === right;\n      case '!=':\n        return left != right;\n      case '!==':\n        return left !== right;\n      case 'instanceof':\n        return typeof right === 'function' && left instanceof right;\n      case 'in':\n        return typeof right === 'object' && right !== null && left in right;\n    }\n\n    if (left === null || right === null || left === undefined || right === undefined) {\n      switch (this.operation) {\n        case '+':\n          if (left !== null && left !== undefined) return left;\n          if (right !== null && right !== undefined) return right;\n          return 0;\n        case '-':\n          if (left !== null && left !== undefined) return left;\n          if (right !== null && right !== undefined) return 0 - right;\n          return 0;\n      }\n\n      return null;\n    }\n\n    switch (this.operation) {\n      case '+':\n        return autoConvertAdd(left, right);\n      case '-':\n        return left - right;\n      case '*':\n        return left * right;\n      case '/':\n        return left / right;\n      case '%':\n        return left % right;\n      case '<':\n        return left < right;\n      case '>':\n        return left > right;\n      case '<=':\n        return left <= right;\n      case '>=':\n        return left >= right;\n      case '^':\n        return left ^ right;\n    }\n\n    throw new Error(`Internal error [${this.operation}] not handled`);\n  }\n\n  accept(visitor) {\n    return visitor.visitBinary(this);\n  }\n\n  connect(binding, scope) {\n    this.left.connect(binding, scope);\n    let left = this.left.evaluate(scope);\n    if (this.operation === '&&' && !left || this.operation === '||' && left) {\n      return;\n    }\n    this.right.connect(binding, scope);\n  }\n};\n\nexport let Unary = class Unary extends Expression {\n  constructor(operation, expression) {\n    super();\n\n    this.operation = operation;\n    this.expression = expression;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    switch (this.operation) {\n      case '!':\n        return !this.expression.evaluate(scope, lookupFunctions);\n      case 'typeof':\n        return typeof this.expression.evaluate(scope, lookupFunctions);\n      case 'void':\n        return void this.expression.evaluate(scope, lookupFunctions);\n    }\n\n    throw new Error(`Internal error [${this.operation}] not handled`);\n  }\n\n  accept(visitor) {\n    return visitor.visitPrefix(this);\n  }\n\n  connect(binding, scope) {\n    this.expression.connect(binding, scope);\n  }\n};\n\nexport let LiteralPrimitive = class LiteralPrimitive extends Expression {\n  constructor(value) {\n    super();\n\n    this.value = value;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.value;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralPrimitive(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let LiteralString = class LiteralString extends Expression {\n  constructor(value) {\n    super();\n\n    this.value = value;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.value;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralString(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let LiteralTemplate = class LiteralTemplate extends Expression {\n  constructor(cooked, expressions, raw, tag) {\n    super();\n    this.cooked = cooked;\n    this.expressions = expressions || [];\n    this.length = this.expressions.length;\n    this.tagged = tag !== undefined;\n    if (this.tagged) {\n      this.cooked.raw = raw;\n      this.tag = tag;\n      if (tag instanceof AccessScope) {\n        this.contextType = 'Scope';\n      } else if (tag instanceof AccessMember || tag instanceof AccessKeyed) {\n        this.contextType = 'Object';\n      } else {\n        throw new Error(`${this.tag} is not a valid template tag`);\n      }\n    }\n  }\n\n  getScopeContext(scope, lookupFunctions) {\n    return getContextFor(this.tag.name, scope, this.tag.ancestor);\n  }\n\n  getObjectContext(scope, lookupFunctions) {\n    return this.tag.object.evaluate(scope, lookupFunctions);\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    const results = new Array(this.length);\n    for (let i = 0; i < this.length; i++) {\n      results[i] = this.expressions[i].evaluate(scope, lookupFunctions);\n    }\n    if (this.tagged) {\n      const func = this.tag.evaluate(scope, lookupFunctions);\n      if (typeof func === 'function') {\n        const context = this[`get${this.contextType}Context`](scope, lookupFunctions);\n        return func.call(context, this.cooked, ...results);\n      }\n      if (!mustEvaluate) {\n        return null;\n      }\n      throw new Error(`${this.tag} is not a function`);\n    }\n    let result = this.cooked[0];\n    for (let i = 0; i < this.length; i++) {\n      result = String.prototype.concat(result, results[i], this.cooked[i + 1]);\n    }\n    return result;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralTemplate(this);\n  }\n\n  connect(binding, scope) {\n    for (let i = 0; i < this.length; i++) {\n      this.expressions[i].connect(binding, scope);\n    }\n    if (this.tagged) {\n      this.tag.connect(binding, scope);\n    }\n  }\n};\n\nexport let LiteralArray = class LiteralArray extends Expression {\n  constructor(elements) {\n    super();\n\n    this.elements = elements;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let elements = this.elements;\n    let result = [];\n\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      result[i] = elements[i].evaluate(scope, lookupFunctions);\n    }\n\n    return result;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralArray(this);\n  }\n\n  connect(binding, scope) {\n    let length = this.elements.length;\n    for (let i = 0; i < length; i++) {\n      this.elements[i].connect(binding, scope);\n    }\n  }\n};\n\nexport let LiteralObject = class LiteralObject extends Expression {\n  constructor(keys, values) {\n    super();\n\n    this.keys = keys;\n    this.values = values;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = {};\n    let keys = this.keys;\n    let values = this.values;\n\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      instance[keys[i]] = values[i].evaluate(scope, lookupFunctions);\n    }\n\n    return instance;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralObject(this);\n  }\n\n  connect(binding, scope) {\n    let length = this.keys.length;\n    for (let i = 0; i < length; i++) {\n      this.values[i].connect(binding, scope);\n    }\n  }\n};\n\nfunction evalList(scope, list, lookupFunctions) {\n  const length = list.length;\n  const result = [];\n  for (let i = 0; i < length; i++) {\n    result[i] = list[i].evaluate(scope, lookupFunctions);\n  }\n  return result;\n}\n\nfunction autoConvertAdd(a, b) {\n  if (a !== null && b !== null) {\n    if (typeof a === 'string' && typeof b !== 'string') {\n      return a + b.toString();\n    }\n\n    if (typeof a !== 'string' && typeof b === 'string') {\n      return a.toString() + b;\n    }\n\n    return a + b;\n  }\n\n  if (a !== null) {\n    return a;\n  }\n\n  if (b !== null) {\n    return b;\n  }\n\n  return 0;\n}\n\nfunction getFunction(obj, name, mustExist) {\n  let func = obj === null || obj === undefined ? null : obj[name];\n  if (typeof func === 'function') {\n    return func;\n  }\n  if (!mustExist && (func === null || func === undefined)) {\n    return null;\n  }\n  throw new Error(`${name} is not a function`);\n}\n\nfunction getKeyed(obj, key) {\n  if (Array.isArray(obj)) {\n    return obj[parseInt(key, 10)];\n  } else if (obj) {\n    return obj[key];\n  } else if (obj === null || obj === undefined) {\n    return undefined;\n  }\n\n  return obj[key];\n}\n\nfunction setKeyed(obj, key, value) {\n  if (Array.isArray(obj)) {\n    let index = parseInt(key, 10);\n\n    if (obj.length <= index) {\n      obj.length = index + 1;\n    }\n\n    obj[index] = value;\n  } else {\n    obj[key] = value;\n  }\n\n  return value;\n}\n\nexport let Unparser = null;\n\nif (typeof FEATURE_NO_UNPARSER === 'undefined') {\n  Unparser = class {\n    constructor(buffer) {\n      this.buffer = buffer;\n    }\n\n    static unparse(expression) {\n      let buffer = [];\n      let visitor = new Unparser(buffer);\n\n      expression.accept(visitor);\n\n      return buffer.join('');\n    }\n\n    write(text) {\n      this.buffer.push(text);\n    }\n\n    writeArgs(args) {\n      this.write('(');\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        args[i].accept(this);\n      }\n\n      this.write(')');\n    }\n\n    visitBindingBehavior(behavior) {\n      let args = behavior.args;\n\n      behavior.expression.accept(this);\n      this.write(`&${behavior.name}`);\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        this.write(':');\n        args[i].accept(this);\n      }\n    }\n\n    visitValueConverter(converter) {\n      let args = converter.args;\n\n      converter.expression.accept(this);\n      this.write(`|${converter.name}`);\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        this.write(':');\n        args[i].accept(this);\n      }\n    }\n\n    visitAssign(assign) {\n      assign.target.accept(this);\n      this.write('=');\n      assign.value.accept(this);\n    }\n\n    visitConditional(conditional) {\n      conditional.condition.accept(this);\n      this.write('?');\n      conditional.yes.accept(this);\n      this.write(':');\n      conditional.no.accept(this);\n    }\n\n    visitAccessThis(access) {\n      if (access.ancestor === 0) {\n        this.write('$this');\n        return;\n      }\n      this.write('$parent');\n      let i = access.ancestor - 1;\n      while (i--) {\n        this.write('.$parent');\n      }\n    }\n\n    visitAccessScope(access) {\n      let i = access.ancestor;\n      while (i--) {\n        this.write('$parent.');\n      }\n      this.write(access.name);\n    }\n\n    visitAccessMember(access) {\n      access.object.accept(this);\n      this.write(`.${access.name}`);\n    }\n\n    visitAccessKeyed(access) {\n      access.object.accept(this);\n      this.write('[');\n      access.key.accept(this);\n      this.write(']');\n    }\n\n    visitCallScope(call) {\n      let i = call.ancestor;\n      while (i--) {\n        this.write('$parent.');\n      }\n      this.write(call.name);\n      this.writeArgs(call.args);\n    }\n\n    visitCallFunction(call) {\n      call.func.accept(this);\n      this.writeArgs(call.args);\n    }\n\n    visitCallMember(call) {\n      call.object.accept(this);\n      this.write(`.${call.name}`);\n      this.writeArgs(call.args);\n    }\n\n    visitPrefix(prefix) {\n      this.write(`(${prefix.operation}`);\n      if (prefix.operation.charCodeAt(0) >= 97) {\n        this.write(' ');\n      }\n      prefix.expression.accept(this);\n      this.write(')');\n    }\n\n    visitBinary(binary) {\n      binary.left.accept(this);\n      if (binary.operation.charCodeAt(0) === 105) {\n        this.write(` ${binary.operation} `);\n      } else {\n        this.write(binary.operation);\n      }\n      binary.right.accept(this);\n    }\n\n    visitLiteralPrimitive(literal) {\n      this.write(`${literal.value}`);\n    }\n\n    visitLiteralArray(literal) {\n      let elements = literal.elements;\n\n      this.write('[');\n\n      for (let i = 0, length = elements.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        elements[i].accept(this);\n      }\n\n      this.write(']');\n    }\n\n    visitLiteralObject(literal) {\n      let keys = literal.keys;\n      let values = literal.values;\n\n      this.write('{');\n\n      for (let i = 0, length = keys.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        this.write(`'${keys[i]}':`);\n        values[i].accept(this);\n      }\n\n      this.write('}');\n    }\n\n    visitLiteralString(literal) {\n      let escaped = literal.value.replace(/'/g, \"\\'\");\n      this.write(`'${escaped}'`);\n    }\n\n    visitLiteralTemplate(literal) {\n      const { cooked, expressions } = literal;\n      const length = expressions.length;\n      this.write('`');\n      this.write(cooked[0]);\n      for (let i = 0; i < length; i++) {\n        expressions[i].accept(this);\n        this.write(cooked[i + 1]);\n      }\n      this.write('`');\n    }\n  };\n}\n\nexport let ExpressionCloner = class ExpressionCloner {\n  cloneExpressionArray(array) {\n    let clonedArray = [];\n    let i = array.length;\n    while (i--) {\n      clonedArray[i] = array[i].accept(this);\n    }\n    return clonedArray;\n  }\n\n  visitBindingBehavior(behavior) {\n    return new BindingBehavior(behavior.expression.accept(this), behavior.name, this.cloneExpressionArray(behavior.args));\n  }\n\n  visitValueConverter(converter) {\n    return new ValueConverter(converter.expression.accept(this), converter.name, this.cloneExpressionArray(converter.args));\n  }\n\n  visitAssign(assign) {\n    return new Assign(assign.target.accept(this), assign.value.accept(this));\n  }\n\n  visitConditional(conditional) {\n    return new Conditional(conditional.condition.accept(this), conditional.yes.accept(this), conditional.no.accept(this));\n  }\n\n  visitAccessThis(access) {\n    return new AccessThis(access.ancestor);\n  }\n\n  visitAccessScope(access) {\n    return new AccessScope(access.name, access.ancestor);\n  }\n\n  visitAccessMember(access) {\n    return new AccessMember(access.object.accept(this), access.name);\n  }\n\n  visitAccessKeyed(access) {\n    return new AccessKeyed(access.object.accept(this), access.key.accept(this));\n  }\n\n  visitCallScope(call) {\n    return new CallScope(call.name, this.cloneExpressionArray(call.args), call.ancestor);\n  }\n\n  visitCallFunction(call) {\n    return new CallFunction(call.func.accept(this), this.cloneExpressionArray(call.args));\n  }\n\n  visitCallMember(call) {\n    return new CallMember(call.object.accept(this), call.name, this.cloneExpressionArray(call.args));\n  }\n\n  visitUnary(unary) {\n    return new Unary(prefix.operation, prefix.expression.accept(this));\n  }\n\n  visitBinary(binary) {\n    return new Binary(binary.operation, binary.left.accept(this), binary.right.accept(this));\n  }\n\n  visitLiteralPrimitive(literal) {\n    return new LiteralPrimitive(literal);\n  }\n\n  visitLiteralArray(literal) {\n    return new LiteralArray(this.cloneExpressionArray(literal.elements));\n  }\n\n  visitLiteralObject(literal) {\n    return new LiteralObject(literal.keys, this.cloneExpressionArray(literal.values));\n  }\n\n  visitLiteralString(literal) {\n    return new LiteralString(literal.value);\n  }\n\n  visitLiteralTemplate(literal) {\n    return new LiteralTemplate(literal.cooked, this.cloneExpressionArray(literal.expressions), literal.raw, literal.tag && literal.tag.accept(this));\n  }\n};\n\nexport function cloneExpression(expression) {\n  let visitor = new ExpressionCloner();\n  return expression.accept(visitor);\n}\n\nexport const bindingMode = {\n  oneTime: 0,\n  toView: 1,\n  oneWay: 1,\n  twoWay: 2,\n  fromView: 3\n};\n\nexport let Parser = class Parser {\n  constructor() {\n    this.cache = Object.create(null);\n  }\n\n  parse(src) {\n    src = src || '';\n\n    return this.cache[src] || (this.cache[src] = new ParserImplementation(src).parseBindingBehavior());\n  }\n};\n\nconst fromCharCode = String.fromCharCode;\n\nexport let ParserImplementation = class ParserImplementation {\n  get raw() {\n    return this.src.slice(this.start, this.idx);\n  }\n\n  constructor(src) {\n    this.idx = 0;\n\n    this.start = 0;\n\n    this.src = src;\n    this.len = src.length;\n\n    this.tkn = T$EOF;\n\n    this.val = undefined;\n\n    this.ch = src.charCodeAt(0);\n  }\n\n  parseBindingBehavior() {\n    this.nextToken();\n    if (this.tkn & T$ExpressionTerminal) {\n      this.err('Invalid start of expression');\n    }\n    let result = this.parseValueConverter();\n    while (this.opt(T$Ampersand)) {\n      result = new BindingBehavior(result, this.val, this.parseVariadicArgs());\n    }\n    if (this.tkn !== T$EOF) {\n      this.err(`Unconsumed token ${this.raw}`);\n    }\n    return result;\n  }\n\n  parseValueConverter() {\n    let result = this.parseExpression();\n    while (this.opt(T$Bar)) {\n      result = new ValueConverter(result, this.val, this.parseVariadicArgs());\n    }\n    return result;\n  }\n\n  parseVariadicArgs() {\n    this.nextToken();\n    const result = [];\n    while (this.opt(T$Colon)) {\n      result.push(this.parseExpression());\n    }\n    return result;\n  }\n\n  parseExpression() {\n    let exprStart = this.idx;\n    let result = this.parseConditional();\n\n    while (this.tkn === T$Eq) {\n      if (!result.isAssignable) {\n        this.err(`Expression ${this.src.slice(exprStart, this.start)} is not assignable`);\n      }\n      this.nextToken();\n      exprStart = this.idx;\n      result = new Assign(result, this.parseConditional());\n    }\n    return result;\n  }\n\n  parseConditional() {\n    let result = this.parseBinary(0);\n\n    if (this.opt(T$Question)) {\n      let yes = this.parseExpression();\n      this.expect(T$Colon);\n      result = new Conditional(result, yes, this.parseExpression());\n    }\n    return result;\n  }\n\n  parseBinary(minPrecedence) {\n    let left = this.parseLeftHandSide(0);\n\n    while (this.tkn & T$BinaryOp) {\n      const opToken = this.tkn;\n      if ((opToken & T$Precedence) <= minPrecedence) {\n        break;\n      }\n      this.nextToken();\n      left = new Binary(TokenValues[opToken & T$TokenMask], left, this.parseBinary(opToken & T$Precedence));\n    }\n    return left;\n  }\n\n  parseLeftHandSide(context) {\n    let result;\n\n    primary: switch (this.tkn) {\n      case T$Plus:\n        this.nextToken();\n        return this.parseLeftHandSide(0);\n      case T$Minus:\n        this.nextToken();\n        return new Binary('-', new LiteralPrimitive(0), this.parseLeftHandSide(0));\n      case T$Bang:\n      case T$TypeofKeyword:\n      case T$VoidKeyword:\n        const op = TokenValues[this.tkn & T$TokenMask];\n        this.nextToken();\n        return new Unary(op, this.parseLeftHandSide(0));\n      case T$ParentScope:\n        {\n          do {\n            this.nextToken();\n            context++;\n            if (this.opt(T$Period)) {\n              if (this.tkn === T$Period) {\n                this.err();\n              }\n              continue;\n            } else if (this.tkn & T$AccessScopeTerminal) {\n              result = new AccessThis(context & C$Ancestor);\n\n              context = context & C$ShorthandProp | C$This;\n              break primary;\n            } else {\n              this.err();\n            }\n          } while (this.tkn === T$ParentScope);\n        }\n\n      case T$Identifier:\n        {\n          result = new AccessScope(this.val, context & C$Ancestor);\n          this.nextToken();\n          context = context & C$ShorthandProp | C$Scope;\n          break;\n        }\n      case T$ThisScope:\n        this.nextToken();\n        result = new AccessThis(0);\n        context = context & C$ShorthandProp | C$This;\n        break;\n      case T$LParen:\n        this.nextToken();\n        result = this.parseExpression();\n        this.expect(T$RParen);\n        context = C$Primary;\n        break;\n      case T$LBracket:\n        {\n          this.nextToken();\n          const elements = [];\n          if (this.tkn !== T$RBracket) {\n            do {\n              elements.push(this.parseExpression());\n            } while (this.opt(T$Comma));\n          }\n          this.expect(T$RBracket);\n          result = new LiteralArray(elements);\n          context = C$Primary;\n          break;\n        }\n      case T$LBrace:\n        {\n          const keys = [];\n          const values = [];\n          this.nextToken();\n          while (this.tkn !== T$RBrace) {\n            if (this.tkn & T$IdentifierOrKeyword) {\n              const { ch, tkn, idx } = this;\n              keys.push(this.val);\n              this.nextToken();\n              if (this.opt(T$Colon)) {\n                values.push(this.parseExpression());\n              } else {\n                this.ch = ch;\n                this.tkn = tkn;\n                this.idx = idx;\n                values.push(this.parseLeftHandSide(C$ShorthandProp));\n              }\n            } else if (this.tkn & T$Literal) {\n              keys.push(this.val);\n              this.nextToken();\n              this.expect(T$Colon);\n              values.push(this.parseExpression());\n            } else {\n              this.err();\n            }\n            if (this.tkn !== T$RBrace) {\n              this.expect(T$Comma);\n            }\n          }\n          this.expect(T$RBrace);\n          result = new LiteralObject(keys, values);\n          context = C$Primary;\n          break;\n        }\n      case T$StringLiteral:\n        result = new LiteralString(this.val);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      case T$TemplateTail:\n        result = new LiteralTemplate([this.val]);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      case T$TemplateContinuation:\n        result = this.parseTemplate(0);\n        context = C$Primary;\n        break;\n      case T$NumericLiteral:\n        {\n          result = new LiteralPrimitive(this.val);\n          this.nextToken();\n\n          break;\n        }\n      case T$NullKeyword:\n      case T$UndefinedKeyword:\n      case T$TrueKeyword:\n      case T$FalseKeyword:\n        result = new LiteralPrimitive(TokenValues[this.tkn & T$TokenMask]);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      default:\n        if (this.idx >= this.len) {\n          this.err('Unexpected end of expression');\n        } else {\n          this.err();\n        }\n    }\n\n    if (context & C$ShorthandProp) {\n      return result;\n    }\n\n    let name = this.val;\n    while (this.tkn & T$MemberOrCallExpression) {\n      switch (this.tkn) {\n        case T$Period:\n          this.nextToken();\n          if (!(this.tkn & T$IdentifierOrKeyword)) {\n            this.err();\n          }\n          name = this.val;\n          this.nextToken();\n\n          context = context & C$Primary | (context & (C$This | C$Scope)) << 1 | context & C$Member | (context & C$Keyed) >> 1 | (context & C$Call) >> 2;\n          if (this.tkn === T$LParen) {\n            continue;\n          }\n          if (context & C$Scope) {\n            result = new AccessScope(name, result.ancestor);\n          } else {\n            result = new AccessMember(result, name);\n          }\n          continue;\n        case T$LBracket:\n          this.nextToken();\n          context = C$Keyed;\n          result = new AccessKeyed(result, this.parseExpression());\n          this.expect(T$RBracket);\n          break;\n        case T$LParen:\n          this.nextToken();\n          const args = [];\n          while (this.tkn !== T$RParen) {\n            args.push(this.parseExpression());\n            if (!this.opt(T$Comma)) {\n              break;\n            }\n          }\n          this.expect(T$RParen);\n          if (context & C$Scope) {\n            result = new CallScope(name, args, result.ancestor);\n          } else if (context & (C$Member | C$Primary)) {\n            result = new CallMember(result, name, args);\n          } else {\n            result = new CallFunction(result, args);\n          }\n          context = C$Call;\n          break;\n        case T$TemplateTail:\n          result = new LiteralTemplate([this.val], [], [this.raw], result);\n          this.nextToken();\n          break;\n        case T$TemplateContinuation:\n          result = this.parseTemplate(context | C$Tagged, result);\n      }\n    }\n\n    return result;\n  }\n\n  parseTemplate(context, func) {\n    const cooked = [this.val];\n    const raw = context & C$Tagged ? [this.raw] : undefined;\n    this.expect(T$TemplateContinuation);\n    const expressions = [this.parseExpression()];\n\n    while ((this.tkn = this.scanTemplateTail()) !== T$TemplateTail) {\n      cooked.push(this.val);\n      if (context & C$Tagged) {\n        raw.push(this.raw);\n      }\n      this.expect(T$TemplateContinuation);\n      expressions.push(this.parseExpression());\n    }\n\n    cooked.push(this.val);\n    if (context & C$Tagged) {\n      raw.push(this.raw);\n    }\n    this.nextToken();\n    return new LiteralTemplate(cooked, expressions, raw, func);\n  }\n\n  nextToken() {\n    while (this.idx < this.len) {\n      if (this.ch <= 0x20) {\n        this.next();\n        continue;\n      }\n      this.start = this.idx;\n      if (this.ch === 0x24 || this.ch >= 0x61 && this.ch <= 0x7A) {\n        this.tkn = this.scanIdentifier();\n        return;\n      }\n\n      if ((this.tkn = CharScanners[this.ch](this)) !== null) {\n        return;\n      }\n    }\n    this.tkn = T$EOF;\n  }\n\n  next() {\n    return this.ch = this.src.charCodeAt(++this.idx);\n  }\n\n  scanIdentifier() {\n    while (AsciiIdParts.has(this.next()) || this.ch > 0x7F && IdParts[this.ch]) {}\n\n    return KeywordLookup[this.val = this.raw] || T$Identifier;\n  }\n\n  scanNumber(isFloat) {\n    if (isFloat) {\n      this.val = 0;\n    } else {\n      this.val = this.ch - 0x30;\n      while (this.next() <= 0x39 && this.ch >= 0x30) {\n        this.val = this.val * 10 + this.ch - 0x30;\n      }\n    }\n\n    if (isFloat || this.ch === 0x2E) {\n      if (!isFloat) {\n        this.next();\n      }\n      const start = this.idx;\n      let value = this.ch - 0x30;\n      while (this.next() <= 0x39 && this.ch >= 0x30) {\n        value = value * 10 + this.ch - 0x30;\n      }\n      this.val = this.val + value / Math.pow(10, this.idx - start);\n    }\n\n    if (this.ch === 0x65 || this.ch === 0x45) {\n      const start = this.idx;\n\n      this.next();\n      if (this.ch === 0x2D || this.ch === 0x2B) {\n        this.next();\n      }\n\n      if (!(this.ch >= 0x30 && this.ch <= 0x39)) {\n        this.idx = start;\n        this.err('Invalid exponent');\n      }\n      while (this.next() <= 0x39 && this.ch >= 0x30) {}\n      this.val = parseFloat(this.src.slice(this.start, this.idx));\n    }\n\n    return T$NumericLiteral;\n  }\n\n  scanString() {\n    let quote = this.ch;\n    this.next();\n\n    let buffer;\n    let marker = this.idx;\n\n    while (this.ch !== quote) {\n      if (this.ch === 0x5C) {\n        if (!buffer) {\n          buffer = [];\n        }\n\n        buffer.push(this.src.slice(marker, this.idx));\n\n        this.next();\n\n        let unescaped;\n\n        if (this.ch === 0x75) {\n          this.next();\n\n          if (this.idx + 4 < this.len) {\n            let hex = this.src.slice(this.idx, this.idx + 4);\n\n            if (!/[A-Z0-9]{4}/i.test(hex)) {\n              this.err(`Invalid unicode escape [\\\\u${hex}]`);\n            }\n\n            unescaped = parseInt(hex, 16);\n            this.idx += 4;\n            this.ch = this.src.charCodeAt(this.idx);\n          } else {\n            this.err();\n          }\n        } else {\n          unescaped = unescape(this.ch);\n          this.next();\n        }\n\n        buffer.push(fromCharCode(unescaped));\n        marker = this.idx;\n      } else if (this.ch === 0 || this.idx >= this.len) {\n        this.err('Unterminated quote');\n      } else {\n        this.next();\n      }\n    }\n\n    let last = this.src.slice(marker, this.idx);\n    this.next();\n    let unescaped = last;\n\n    if (buffer !== null && buffer !== undefined) {\n      buffer.push(last);\n      unescaped = buffer.join('');\n    }\n\n    this.val = unescaped;\n    return T$StringLiteral;\n  }\n\n  scanTemplate() {\n    let tail = true;\n    let result = '';\n\n    while (this.next() !== 0x60) {\n      if (this.ch === 0x24) {\n        if (this.idx + 1 < this.len && this.src.charCodeAt(this.idx + 1) === 0x7B) {\n          this.idx++;\n          tail = false;\n          break;\n        } else {\n          result += '$';\n        }\n      } else if (this.ch === 0x5C) {\n        result += fromCharCode(unescape(this.next()));\n      } else {\n        result += fromCharCode(this.ch);\n      }\n    }\n\n    this.next();\n    this.val = result;\n    if (tail) {\n      return T$TemplateTail;\n    }\n    return T$TemplateContinuation;\n  }\n\n  scanTemplateTail() {\n    if (this.idx >= this.len) {\n      this.err('Unterminated template');\n    }\n    this.idx--;\n    return this.scanTemplate();\n  }\n\n  err(message = `Unexpected token ${this.raw}`, column = this.start) {\n    throw new Error(`Parser Error: ${message} at column ${column} in expression [${this.src}]`);\n  }\n\n  opt(token) {\n    if (this.tkn === token) {\n      this.nextToken();\n      return true;\n    }\n\n    return false;\n  }\n\n  expect(token) {\n    if (this.tkn === token) {\n      this.nextToken();\n    } else {\n      this.err(`Missing expected token ${TokenValues[token & T$TokenMask]}`, this.idx);\n    }\n  }\n};\n\nfunction unescape(code) {\n  switch (code) {\n    case 0x66:\n      return 0xC;\n    case 0x6E:\n      return 0xA;\n    case 0x72:\n      return 0xD;\n    case 0x74:\n      return 0x9;\n    case 0x76:\n      return 0xB;\n    default:\n      return code;\n  }\n}\n\nconst C$This = 1 << 10;\nconst C$Scope = 1 << 11;\nconst C$Member = 1 << 12;\nconst C$Keyed = 1 << 13;\nconst C$Call = 1 << 14;\nconst C$Primary = 1 << 15;\nconst C$ShorthandProp = 1 << 16;\nconst C$Tagged = 1 << 17;\n\nconst C$Ancestor = (1 << 9) - 1;\n\nconst T$TokenMask = (1 << 6) - 1;\n\nconst T$PrecShift = 6;\n\nconst T$Precedence = 7 << T$PrecShift;\n\nconst T$ExpressionTerminal = 1 << 11;\n\nconst T$ClosingToken = 1 << 12;\n\nconst T$OpeningToken = 1 << 13;\n\nconst T$AccessScopeTerminal = 1 << 14;\nconst T$Keyword = 1 << 15;\nconst T$EOF = 1 << 16 | T$AccessScopeTerminal | T$ExpressionTerminal;\nconst T$Identifier = 1 << 17;\nconst T$IdentifierOrKeyword = T$Identifier | T$Keyword;\nconst T$Literal = 1 << 18;\nconst T$NumericLiteral = 1 << 19 | T$Literal;\nconst T$StringLiteral = 1 << 20 | T$Literal;\nconst T$BinaryOp = 1 << 21;\n\nconst T$UnaryOp = 1 << 22;\n\nconst T$MemberExpression = 1 << 23;\n\nconst T$MemberOrCallExpression = 1 << 24;\nconst T$TemplateTail = 1 << 25 | T$MemberOrCallExpression;\nconst T$TemplateContinuation = 1 << 26 | T$MemberOrCallExpression;\n\nconst T$FalseKeyword = 0 | T$Keyword | T$Literal;\nconst T$TrueKeyword = 1 | T$Keyword | T$Literal;\nconst T$NullKeyword = 2 | T$Keyword | T$Literal;\nconst T$UndefinedKeyword = 3 | T$Keyword | T$Literal;\nconst T$ThisScope = 4 | T$IdentifierOrKeyword;\nconst T$ParentScope = 5 | T$IdentifierOrKeyword;\n\nconst T$LParen = 6 | T$OpeningToken | T$AccessScopeTerminal | T$MemberOrCallExpression;\nconst T$LBrace = 7 | T$OpeningToken;\nconst T$Period = 8 | T$MemberExpression | T$MemberOrCallExpression;\nconst T$RBrace = 9 | T$AccessScopeTerminal | T$ClosingToken | T$ExpressionTerminal;\nconst T$RParen = 10 | T$AccessScopeTerminal | T$ClosingToken | T$ExpressionTerminal;\nconst T$Comma = 11 | T$AccessScopeTerminal;\nconst T$LBracket = 12 | T$OpeningToken | T$AccessScopeTerminal | T$MemberExpression | T$MemberOrCallExpression;\nconst T$RBracket = 13 | T$ClosingToken | T$ExpressionTerminal;\nconst T$Colon = 14 | T$AccessScopeTerminal;\nconst T$Question = 15;\n\nconst T$Ampersand = 18 | T$AccessScopeTerminal;\nconst T$Bar = 19 | T$AccessScopeTerminal;\nconst T$BarBar = 20 | 1 << T$PrecShift | T$BinaryOp;\nconst T$AmpersandAmpersand = 21 | 2 << T$PrecShift | T$BinaryOp;\nconst T$Caret = 22 | 3 << T$PrecShift | T$BinaryOp;\nconst T$EqEq = 23 | 4 << T$PrecShift | T$BinaryOp;\nconst T$BangEq = 24 | 4 << T$PrecShift | T$BinaryOp;\nconst T$EqEqEq = 25 | 4 << T$PrecShift | T$BinaryOp;\nconst T$BangEqEq = 26 | 4 << T$PrecShift | T$BinaryOp;\nconst T$Lt = 27 | 5 << T$PrecShift | T$BinaryOp;\nconst T$Gt = 28 | 5 << T$PrecShift | T$BinaryOp;\nconst T$LtEq = 29 | 5 << T$PrecShift | T$BinaryOp;\nconst T$GtEq = 30 | 5 << T$PrecShift | T$BinaryOp;\nconst T$InKeyword = 31 | 5 << T$PrecShift | T$BinaryOp | T$Keyword;\nconst T$InstanceOfKeyword = 32 | 5 << T$PrecShift | T$BinaryOp | T$Keyword;\nconst T$Plus = 33 | 6 << T$PrecShift | T$BinaryOp | T$UnaryOp;\nconst T$Minus = 34 | 6 << T$PrecShift | T$BinaryOp | T$UnaryOp;\nconst T$TypeofKeyword = 35 | T$UnaryOp | T$Keyword;\nconst T$VoidKeyword = 36 | T$UnaryOp | T$Keyword;\nconst T$Star = 37 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Percent = 38 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Slash = 39 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Eq = 40;\nconst T$Bang = 41 | T$UnaryOp;\n\nconst KeywordLookup = Object.create(null);\nKeywordLookup.true = T$TrueKeyword;\nKeywordLookup.null = T$NullKeyword;\nKeywordLookup.false = T$FalseKeyword;\nKeywordLookup.undefined = T$UndefinedKeyword;\nKeywordLookup.$this = T$ThisScope;\nKeywordLookup.$parent = T$ParentScope;\nKeywordLookup.in = T$InKeyword;\nKeywordLookup.instanceof = T$InstanceOfKeyword;\nKeywordLookup.typeof = T$TypeofKeyword;\nKeywordLookup.void = T$VoidKeyword;\n\nconst TokenValues = [false, true, null, undefined, '$this', '$parent', '(', '{', '.', '}', ')', ',', '[', ']', ':', '?', '\\'', '\"', '&', '|', '||', '&&', '^', '==', '!=', '===', '!==', '<', '>', '<=', '>=', 'in', 'instanceof', '+', '-', 'typeof', 'void', '*', '%', '/', '=', '!'];\n\nconst codes = {\n  AsciiIdPart: [0x24, 0, 0x30, 0x3A, 0x41, 0x5B, 0x5F, 0, 0x61, 0x7B],\n  IdStart: [0x24, 0, 0x41, 0x5B, 0x5F, 0, 0x61, 0x7B, 0xAA, 0, 0xBA, 0, 0xC0, 0xD7, 0xD8, 0xF7, 0xF8, 0x2B9, 0x2E0, 0x2E5, 0x1D00, 0x1D26, 0x1D2C, 0x1D5D, 0x1D62, 0x1D66, 0x1D6B, 0x1D78, 0x1D79, 0x1DBF, 0x1E00, 0x1F00, 0x2071, 0, 0x207F, 0, 0x2090, 0x209D, 0x212A, 0x212C, 0x2132, 0, 0x214E, 0, 0x2160, 0x2189, 0x2C60, 0x2C80, 0xA722, 0xA788, 0xA78B, 0xA7AF, 0xA7B0, 0xA7B8, 0xA7F7, 0xA800, 0xAB30, 0xAB5B, 0xAB5C, 0xAB65, 0xFB00, 0xFB07, 0xFF21, 0xFF3B, 0xFF41, 0xFF5B],\n  Digit: [0x30, 0x3A],\n  Skip: [0, 0x21, 0x7F, 0xA1]\n};\n\nfunction decompress(lookup, set, compressed, value) {\n  let rangeCount = compressed.length;\n  for (let i = 0; i < rangeCount; i += 2) {\n    const start = compressed[i];\n    let end = compressed[i + 1];\n    end = end > 0 ? end : start + 1;\n    if (lookup) {\n      let j = start;\n      while (j < end) {\n        lookup[j] = value;\n        j++;\n      }\n    }\n    if (set) {\n      for (let ch = start; ch < end; ch++) {\n        set.add(ch);\n      }\n    }\n  }\n}\n\nfunction returnToken(token) {\n  return p => {\n    p.next();\n    return token;\n  };\n}\nfunction unexpectedCharacter(p) {\n  p.err(`Unexpected character [${fromCharCode(p.ch)}]`);\n  return null;\n}\n\nconst AsciiIdParts = new Set();\ndecompress(null, AsciiIdParts, codes.AsciiIdPart, true);\n\nconst IdParts = new Uint8Array(0xFFFF);\ndecompress(IdParts, null, codes.IdStart, 1);\ndecompress(IdParts, null, codes.Digit, 1);\n\nconst CharScanners = new Array(0xFFFF);\nlet ci = 0;\nwhile (ci < 0xFFFF) {\n  CharScanners[ci] = unexpectedCharacter;\n  ci++;\n}\n\ndecompress(CharScanners, null, codes.Skip, p => {\n  p.next();\n  return null;\n});\ndecompress(CharScanners, null, codes.IdStart, p => p.scanIdentifier());\ndecompress(CharScanners, null, codes.Digit, p => p.scanNumber(false));\n\nCharScanners[0x22] = CharScanners[0x27] = p => {\n  return p.scanString();\n};\nCharScanners[0x60] = p => {\n  return p.scanTemplate();\n};\n\nCharScanners[0x21] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Bang;\n  }\n  if (p.next() !== 0x3D) {\n    return T$BangEq;\n  }\n  p.next();\n  return T$BangEqEq;\n};\n\nCharScanners[0x3D] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Eq;\n  }\n  if (p.next() !== 0x3D) {\n    return T$EqEq;\n  }\n  p.next();\n  return T$EqEqEq;\n};\n\nCharScanners[0x26] = p => {\n  if (p.next() !== 0x26) {\n    return T$Ampersand;\n  }\n  p.next();\n  return T$AmpersandAmpersand;\n};\n\nCharScanners[0x7C] = p => {\n  if (p.next() !== 0x7C) {\n    return T$Bar;\n  }\n  p.next();\n  return T$BarBar;\n};\n\nCharScanners[0x2E] = p => {\n  if (p.next() <= 0x39 && p.ch >= 0x30) {\n    return p.scanNumber(true);\n  }\n  return T$Period;\n};\n\nCharScanners[0x3C] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Lt;\n  }\n  p.next();\n  return T$LtEq;\n};\n\nCharScanners[0x3E] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Gt;\n  }\n  p.next();\n  return T$GtEq;\n};\n\nCharScanners[0x25] = returnToken(T$Percent);\nCharScanners[0x28] = returnToken(T$LParen);\nCharScanners[0x29] = returnToken(T$RParen);\nCharScanners[0x2A] = returnToken(T$Star);\nCharScanners[0x2B] = returnToken(T$Plus);\nCharScanners[0x2C] = returnToken(T$Comma);\nCharScanners[0x2D] = returnToken(T$Minus);\nCharScanners[0x2F] = returnToken(T$Slash);\nCharScanners[0x3A] = returnToken(T$Colon);\nCharScanners[0x3F] = returnToken(T$Question);\nCharScanners[0x5B] = returnToken(T$LBracket);\nCharScanners[0x5D] = returnToken(T$RBracket);\nCharScanners[0x5E] = returnToken(T$Caret);\nCharScanners[0x7B] = returnToken(T$LBrace);\nCharScanners[0x7D] = returnToken(T$RBrace);\n\nlet mapProto = Map.prototype;\n\nexport function getMapObserver(taskQueue, map) {\n  return ModifyMapObserver.for(taskQueue, map);\n}\n\nlet ModifyMapObserver = class ModifyMapObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, map) {\n    super(taskQueue, map);\n  }\n\n  static for(taskQueue, map) {\n    if (!('__map_observer__' in map)) {\n      Reflect.defineProperty(map, '__map_observer__', {\n        value: ModifyMapObserver.create(taskQueue, map),\n        enumerable: false, configurable: false\n      });\n    }\n    return map.__map_observer__;\n  }\n\n  static create(taskQueue, map) {\n    let observer = new ModifyMapObserver(taskQueue, map);\n\n    let proto = mapProto;\n    if (proto.set !== map.set || proto.delete !== map.delete || proto.clear !== map.clear) {\n      proto = {\n        set: map.set,\n        delete: map.delete,\n        clear: map.clear\n      };\n    }\n\n    map.set = function () {\n      let hasValue = map.has(arguments[0]);\n      let type = hasValue ? 'update' : 'add';\n      let oldValue = map.get(arguments[0]);\n      let methodCallResult = proto.set.apply(map, arguments);\n      if (!hasValue || oldValue !== map.get(arguments[0])) {\n        observer.addChangeRecord({\n          type: type,\n          object: map,\n          key: arguments[0],\n          oldValue: oldValue\n        });\n      }\n      return methodCallResult;\n    };\n\n    map.delete = function () {\n      let hasValue = map.has(arguments[0]);\n      let oldValue = map.get(arguments[0]);\n      let methodCallResult = proto.delete.apply(map, arguments);\n      if (hasValue) {\n        observer.addChangeRecord({\n          type: 'delete',\n          object: map,\n          key: arguments[0],\n          oldValue: oldValue\n        });\n      }\n      return methodCallResult;\n    };\n\n    map.clear = function () {\n      let methodCallResult = proto.clear.apply(map, arguments);\n      observer.addChangeRecord({\n        type: 'clear',\n        object: map\n      });\n      return methodCallResult;\n    };\n\n    return observer;\n  }\n};\n\nfunction findOriginalEventTarget(event) {\n  return event.path && event.path[0] || event.deepPath && event.deepPath[0] || event.target;\n}\n\nfunction stopPropagation() {\n  this.standardStopPropagation();\n  this.propagationStopped = true;\n}\n\nfunction handleCapturedEvent(event) {\n  event.propagationStopped = false;\n  let target = findOriginalEventTarget(event);\n\n  let orderedCallbacks = [];\n\n  while (target) {\n    if (target.capturedCallbacks) {\n      let callback = target.capturedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        orderedCallbacks.push(callback);\n      }\n    }\n    target = target.parentNode;\n  }\n  for (let i = orderedCallbacks.length - 1; i >= 0 && !event.propagationStopped; i--) {\n    let orderedCallback = orderedCallbacks[i];\n    if ('handleEvent' in orderedCallback) {\n      orderedCallback.handleEvent(event);\n    } else {\n      orderedCallback(event);\n    }\n  }\n}\n\nlet CapturedHandlerEntry = class CapturedHandlerEntry {\n  constructor(eventName) {\n    this.eventName = eventName;\n    this.count = 0;\n  }\n\n  increment() {\n    this.count++;\n\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, handleCapturedEvent, true);\n    }\n  }\n\n  decrement() {\n    this.count--;\n\n    if (this.count === 0) {\n      DOM.removeEventListener(this.eventName, handleCapturedEvent, true);\n    }\n  }\n};\n\n\nfunction handleDelegatedEvent(event) {\n  event.propagationStopped = false;\n  let target = findOriginalEventTarget(event);\n\n  while (target && !event.propagationStopped) {\n    if (target.delegatedCallbacks) {\n      let callback = target.delegatedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        if ('handleEvent' in callback) {\n          callback.handleEvent(event);\n        } else {\n          callback(event);\n        }\n      }\n    }\n\n    target = target.parentNode;\n  }\n}\n\nlet DelegateHandlerEntry = class DelegateHandlerEntry {\n  constructor(eventName) {\n    this.eventName = eventName;\n    this.count = 0;\n  }\n\n  increment() {\n    this.count++;\n\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, handleDelegatedEvent, false);\n    }\n  }\n\n  decrement() {\n    this.count--;\n\n    if (this.count === 0) {\n      DOM.removeEventListener(this.eventName, handleDelegatedEvent, false);\n    }\n  }\n};\nlet DelegationEntryHandler = class DelegationEntryHandler {\n  constructor(entry, lookup, targetEvent) {\n    this.entry = entry;\n    this.lookup = lookup;\n    this.targetEvent = targetEvent;\n  }\n\n  dispose() {\n    this.entry.decrement();\n    this.lookup[this.targetEvent] = null;\n  }\n};\nlet EventHandler = class EventHandler {\n  constructor(target, targetEvent, callback) {\n    this.target = target;\n    this.targetEvent = targetEvent;\n    this.callback = callback;\n  }\n\n  dispose() {\n    this.target.removeEventListener(this.targetEvent, this.callback);\n  }\n};\nlet DefaultEventStrategy = class DefaultEventStrategy {\n  constructor() {\n    this.delegatedHandlers = {};\n    this.capturedHandlers = {};\n  }\n\n  subscribe(target, targetEvent, callback, strategy, disposable) {\n    let delegatedHandlers;\n    let capturedHandlers;\n    let handlerEntry;\n\n    if (strategy === delegationStrategy.bubbling) {\n      delegatedHandlers = this.delegatedHandlers;\n      handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new DelegateHandlerEntry(targetEvent));\n      let delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});\n\n      handlerEntry.increment();\n      delegatedCallbacks[targetEvent] = callback;\n\n      if (disposable === true) {\n        return new DelegationEntryHandler(handlerEntry, delegatedCallbacks, targetEvent);\n      }\n\n      return function () {\n        handlerEntry.decrement();\n        delegatedCallbacks[targetEvent] = null;\n      };\n    }\n    if (strategy === delegationStrategy.capturing) {\n      capturedHandlers = this.capturedHandlers;\n      handlerEntry = capturedHandlers[targetEvent] || (capturedHandlers[targetEvent] = new CapturedHandlerEntry(targetEvent));\n      let capturedCallbacks = target.capturedCallbacks || (target.capturedCallbacks = {});\n\n      handlerEntry.increment();\n      capturedCallbacks[targetEvent] = callback;\n\n      if (disposable === true) {\n        return new DelegationEntryHandler(handlerEntry, capturedCallbacks, targetEvent);\n      }\n\n      return function () {\n        handlerEntry.decrement();\n        capturedCallbacks[targetEvent] = null;\n      };\n    }\n\n    target.addEventListener(targetEvent, callback);\n\n    if (disposable === true) {\n      return new EventHandler(target, targetEvent, callback);\n    }\n\n    return function () {\n      target.removeEventListener(targetEvent, callback);\n    };\n  }\n};\n\n\nexport const delegationStrategy = {\n  none: 0,\n  capturing: 1,\n  bubbling: 2\n};\n\nexport let EventManager = class EventManager {\n  constructor() {\n    this.elementHandlerLookup = {};\n    this.eventStrategyLookup = {};\n\n    this.registerElementConfig({\n      tagName: 'input',\n      properties: {\n        value: ['change', 'input'],\n        checked: ['change', 'input'],\n        files: ['change', 'input']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'textarea',\n      properties: {\n        value: ['change', 'input']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'select',\n      properties: {\n        value: ['change']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'content editable',\n      properties: {\n        value: ['change', 'input', 'blur', 'keyup', 'paste']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'scrollable element',\n      properties: {\n        scrollTop: ['scroll'],\n        scrollLeft: ['scroll']\n      }\n    });\n\n    this.defaultEventStrategy = new DefaultEventStrategy();\n  }\n\n  registerElementConfig(config) {\n    let tagName = config.tagName.toLowerCase();\n    let properties = config.properties;\n    let propertyName;\n\n    let lookup = this.elementHandlerLookup[tagName] = {};\n\n    for (propertyName in properties) {\n      if (properties.hasOwnProperty(propertyName)) {\n        lookup[propertyName] = properties[propertyName];\n      }\n    }\n  }\n\n  registerEventStrategy(eventName, strategy) {\n    this.eventStrategyLookup[eventName] = strategy;\n  }\n\n  getElementHandler(target, propertyName) {\n    let tagName;\n    let lookup = this.elementHandlerLookup;\n\n    if (target.tagName) {\n      tagName = target.tagName.toLowerCase();\n\n      if (lookup[tagName] && lookup[tagName][propertyName]) {\n        return new EventSubscriber(lookup[tagName][propertyName]);\n      }\n\n      if (propertyName === 'textContent' || propertyName === 'innerHTML') {\n        return new EventSubscriber(lookup['content editable'].value);\n      }\n\n      if (propertyName === 'scrollTop' || propertyName === 'scrollLeft') {\n        return new EventSubscriber(lookup['scrollable element'][propertyName]);\n      }\n    }\n\n    return null;\n  }\n\n  addEventListener(target, targetEvent, callbackOrListener, delegate, disposable) {\n    return (this.eventStrategyLookup[targetEvent] || this.defaultEventStrategy).subscribe(target, targetEvent, callbackOrListener, delegate, disposable);\n  }\n};\n\nexport let EventSubscriber = class EventSubscriber {\n  constructor(events) {\n    this.events = events;\n    this.element = null;\n    this.handler = null;\n  }\n\n  subscribe(element, callbackOrListener) {\n    this.element = element;\n    this.handler = callbackOrListener;\n\n    let events = this.events;\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      element.addEventListener(events[i], callbackOrListener);\n    }\n  }\n\n  dispose() {\n    if (this.element === null) {\n      return;\n    }\n    let element = this.element;\n    let callbackOrListener = this.handler;\n    let events = this.events;\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      element.removeEventListener(events[i], callbackOrListener);\n    }\n    this.element = this.handler = null;\n  }\n};\n\nexport let DirtyChecker = class DirtyChecker {\n  constructor() {\n    this.tracked = [];\n    this.checkDelay = 120;\n  }\n\n  addProperty(property) {\n    let tracked = this.tracked;\n\n    tracked.push(property);\n\n    if (tracked.length === 1) {\n      this.scheduleDirtyCheck();\n    }\n  }\n\n  removeProperty(property) {\n    let tracked = this.tracked;\n    tracked.splice(tracked.indexOf(property), 1);\n  }\n\n  scheduleDirtyCheck() {\n    setTimeout(() => this.check(), this.checkDelay);\n  }\n\n  check() {\n    let tracked = this.tracked;\n    let i = tracked.length;\n\n    while (i--) {\n      let current = tracked[i];\n\n      if (current.isDirty()) {\n        current.call();\n      }\n    }\n\n    if (tracked.length) {\n      this.scheduleDirtyCheck();\n    }\n  }\n};\n\nexport let DirtyCheckProperty = (_dec5 = subscriberCollection(), _dec5(_class5 = class DirtyCheckProperty {\n  constructor(dirtyChecker, obj, propertyName) {\n    this.dirtyChecker = dirtyChecker;\n    this.obj = obj;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.obj[this.propertyName];\n  }\n\n  setValue(newValue) {\n    this.obj[this.propertyName] = newValue;\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue);\n\n    this.oldValue = newValue;\n  }\n\n  isDirty() {\n    return this.oldValue !== this.obj[this.propertyName];\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.dirtyChecker.addProperty(this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.dirtyChecker.removeProperty(this);\n    }\n  }\n}) || _class5);\n\nconst logger = LogManager.getLogger('property-observation');\n\nexport const propertyAccessor = {\n  getValue: (obj, propertyName) => obj[propertyName],\n  setValue: (value, obj, propertyName) => {\n    obj[propertyName] = value;\n  }\n};\n\nexport let PrimitiveObserver = class PrimitiveObserver {\n\n  constructor(primitive, propertyName) {\n    this.doNotCache = true;\n\n    this.primitive = primitive;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.primitive[this.propertyName];\n  }\n\n  setValue() {\n    let type = typeof this.primitive;\n    throw new Error(`The ${this.propertyName} property of a ${type} (${this.primitive}) cannot be assigned.`);\n  }\n\n  subscribe() {}\n\n  unsubscribe() {}\n};\n\nexport let SetterObserver = (_dec6 = subscriberCollection(), _dec6(_class7 = class SetterObserver {\n  constructor(taskQueue, obj, propertyName) {\n    this.taskQueue = taskQueue;\n    this.obj = obj;\n    this.propertyName = propertyName;\n    this.queued = false;\n    this.observing = false;\n  }\n\n  getValue() {\n    return this.obj[this.propertyName];\n  }\n\n  setValue(newValue) {\n    this.obj[this.propertyName] = newValue;\n  }\n\n  getterValue() {\n    return this.currentValue;\n  }\n\n  setterValue(newValue) {\n    let oldValue = this.currentValue;\n\n    if (oldValue !== newValue) {\n      if (!this.queued) {\n        this.oldValue = oldValue;\n        this.queued = true;\n        this.taskQueue.queueMicroTask(this);\n      }\n\n      this.currentValue = newValue;\n    }\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.currentValue;\n\n    this.queued = false;\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  subscribe(context, callable) {\n    if (!this.observing) {\n      this.convertProperty();\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  convertProperty() {\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyName];\n    this.setValue = this.setterValue;\n    this.getValue = this.getterValue;\n\n    if (!Reflect.defineProperty(this.obj, this.propertyName, {\n      configurable: true,\n      enumerable: this.propertyName in this.obj ? this.obj.propertyIsEnumerable(this.propertyName) : true,\n      get: this.getValue.bind(this),\n      set: this.setValue.bind(this)\n    })) {\n      logger.warn(`Cannot observe property '${this.propertyName}' of object`, this.obj);\n    }\n  }\n}) || _class7);\n\nexport let XLinkAttributeObserver = class XLinkAttributeObserver {\n  constructor(element, propertyName, attributeName) {\n    this.element = element;\n    this.propertyName = propertyName;\n    this.attributeName = attributeName;\n  }\n\n  getValue() {\n    return this.element.getAttributeNS('http://www.w3.org/1999/xlink', this.attributeName);\n  }\n\n  setValue(newValue) {\n    return this.element.setAttributeNS('http://www.w3.org/1999/xlink', this.attributeName, newValue);\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport const dataAttributeAccessor = {\n  getValue: (obj, propertyName) => obj.getAttribute(propertyName),\n  setValue: (value, obj, propertyName) => {\n    if (value === null || value === undefined) {\n      obj.removeAttribute(propertyName);\n    } else {\n      obj.setAttribute(propertyName, value);\n    }\n  }\n};\n\nexport let DataAttributeObserver = class DataAttributeObserver {\n  constructor(element, propertyName) {\n    this.element = element;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.element.getAttribute(this.propertyName);\n  }\n\n  setValue(newValue) {\n    if (newValue === null || newValue === undefined) {\n      return this.element.removeAttribute(this.propertyName);\n    }\n    return this.element.setAttribute(this.propertyName, newValue);\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport let StyleObserver = class StyleObserver {\n  constructor(element, propertyName) {\n    this.element = element;\n    this.propertyName = propertyName;\n\n    this.styles = null;\n    this.version = 0;\n  }\n\n  getValue() {\n    return this.element.style.cssText;\n  }\n\n  _setProperty(style, value) {\n    let priority = '';\n\n    if (value !== null && value !== undefined && typeof value.indexOf === 'function' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n    this.element.style.setProperty(style, value, priority);\n  }\n\n  setValue(newValue) {\n    let styles = this.styles || {};\n    let style;\n    let version = this.version;\n\n    if (newValue !== null && newValue !== undefined) {\n      if (newValue instanceof Object) {\n        let value;\n        for (style in newValue) {\n          if (newValue.hasOwnProperty(style)) {\n            value = newValue[style];\n            style = style.replace(/([A-Z])/g, m => '-' + m.toLowerCase());\n            styles[style] = version;\n            this._setProperty(style, value);\n          }\n        }\n      } else if (newValue.length) {\n        let rx = /\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:^\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?/g;\n        let pair;\n        while ((pair = rx.exec(newValue)) !== null) {\n          style = pair[1];\n          if (!style) {\n            continue;\n          }\n\n          styles[style] = version;\n          this._setProperty(style, pair[2]);\n        }\n      }\n    }\n\n    this.styles = styles;\n    this.version += 1;\n\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (style in styles) {\n      if (!styles.hasOwnProperty(style) || styles[style] !== version) {\n        continue;\n      }\n\n      this.element.style.removeProperty(style);\n    }\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport let ValueAttributeObserver = (_dec7 = subscriberCollection(), _dec7(_class8 = class ValueAttributeObserver {\n  constructor(element, propertyName, handler) {\n    this.element = element;\n    this.propertyName = propertyName;\n    this.handler = handler;\n    if (propertyName === 'files') {\n      this.setValue = () => {};\n    }\n  }\n\n  getValue() {\n    return this.element[this.propertyName];\n  }\n\n  setValue(newValue) {\n    newValue = newValue === undefined || newValue === null ? '' : newValue;\n    if (this.element[this.propertyName] !== newValue) {\n      this.element[this.propertyName] = newValue;\n      this.notify();\n    }\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue);\n\n    this.oldValue = newValue;\n  }\n\n  handleEvent() {\n    this.notify();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.handler.subscribe(this.element, this);\n    }\n\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n}) || _class8);\n\nconst checkedArrayContext = 'CheckedObserver:array';\nconst checkedValueContext = 'CheckedObserver:value';\n\nexport let CheckedObserver = (_dec8 = subscriberCollection(), _dec8(_class9 = class CheckedObserver {\n  constructor(element, handler, observerLocator) {\n    this.element = element;\n    this.handler = handler;\n    this.observerLocator = observerLocator;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    if (this.initialSync && this.value === newValue) {\n      return;\n    }\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(checkedArrayContext, this);\n      this.arrayObserver = null;\n    }\n\n    if (this.element.type === 'checkbox' && Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribe(checkedArrayContext, this);\n    }\n\n    this.oldValue = this.value;\n    this.value = newValue;\n    this.synchronizeElement();\n    this.notify();\n\n    if (!this.initialSync) {\n      this.initialSync = true;\n      this.observerLocator.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  call(context, splices) {\n    this.synchronizeElement();\n\n    if (!this.valueObserver) {\n      this.valueObserver = this.element.__observers__.model || this.element.__observers__.value;\n      if (this.valueObserver) {\n        this.valueObserver.subscribe(checkedValueContext, this);\n      }\n    }\n  }\n\n  synchronizeElement() {\n    let value = this.value;\n    let element = this.element;\n    let elementValue = element.hasOwnProperty('model') ? element.model : element.value;\n    let isRadio = element.type === 'radio';\n    let matcher = element.matcher || ((a, b) => a === b);\n\n    element.checked = isRadio && !!matcher(value, elementValue) || !isRadio && value === true || !isRadio && Array.isArray(value) && value.findIndex(item => !!matcher(item, elementValue)) !== -1;\n  }\n\n  synchronizeValue() {\n    let value = this.value;\n    let element = this.element;\n    let elementValue = element.hasOwnProperty('model') ? element.model : element.value;\n    let index;\n    let matcher = element.matcher || ((a, b) => a === b);\n\n    if (element.type === 'checkbox') {\n      if (Array.isArray(value)) {\n        index = value.findIndex(item => !!matcher(item, elementValue));\n        if (element.checked && index === -1) {\n          value.push(elementValue);\n        } else if (!element.checked && index !== -1) {\n          value.splice(index, 1);\n        }\n\n        return;\n      }\n\n      value = element.checked;\n    } else if (element.checked) {\n      value = elementValue;\n    } else {\n      return;\n    }\n\n    this.oldValue = this.value;\n    this.value = value;\n    this.notify();\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.value;\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  handleEvent() {\n    this.synchronizeValue();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.element, this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  unbind() {\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(checkedArrayContext, this);\n      this.arrayObserver = null;\n    }\n    if (this.valueObserver) {\n      this.valueObserver.unsubscribe(checkedValueContext, this);\n    }\n  }\n}) || _class9);\n\nconst selectArrayContext = 'SelectValueObserver:array';\n\nexport let SelectValueObserver = (_dec9 = subscriberCollection(), _dec9(_class10 = class SelectValueObserver {\n  constructor(element, handler, observerLocator) {\n    this.element = element;\n    this.handler = handler;\n    this.observerLocator = observerLocator;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    if (newValue !== null && newValue !== undefined && this.element.multiple && !Array.isArray(newValue)) {\n      throw new Error('Only null or Array instances can be bound to a multi-select.');\n    }\n    if (this.value === newValue) {\n      return;\n    }\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(selectArrayContext, this);\n      this.arrayObserver = null;\n    }\n\n    if (Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribe(selectArrayContext, this);\n    }\n\n    this.oldValue = this.value;\n    this.value = newValue;\n    this.synchronizeOptions();\n    this.notify();\n\n    if (!this.initialSync) {\n      this.initialSync = true;\n      this.observerLocator.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  call(context, splices) {\n    this.synchronizeOptions();\n  }\n\n  synchronizeOptions() {\n    let value = this.value;\n    let isArray;\n\n    if (Array.isArray(value)) {\n      isArray = true;\n    }\n\n    let options = this.element.options;\n    let i = options.length;\n    let matcher = this.element.matcher || ((a, b) => a === b);\n    while (i--) {\n      let option = options.item(i);\n      let optionValue = option.hasOwnProperty('model') ? option.model : option.value;\n      if (isArray) {\n        option.selected = value.findIndex(item => !!matcher(optionValue, item)) !== -1;\n        continue;\n      }\n      option.selected = !!matcher(optionValue, value);\n    }\n  }\n\n  synchronizeValue() {\n    let options = this.element.options;\n    let count = 0;\n    let value = [];\n\n    for (let i = 0, ii = options.length; i < ii; i++) {\n      let option = options.item(i);\n      if (!option.selected) {\n        continue;\n      }\n      value.push(option.hasOwnProperty('model') ? option.model : option.value);\n      count++;\n    }\n\n    if (this.element.multiple) {\n      if (Array.isArray(this.value)) {\n        let matcher = this.element.matcher || ((a, b) => a === b);\n\n        let i = 0;\n        while (i < this.value.length) {\n          let a = this.value[i];\n          if (value.findIndex(b => matcher(a, b)) === -1) {\n            this.value.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n\n        i = 0;\n        while (i < value.length) {\n          let a = value[i];\n          if (this.value.findIndex(b => matcher(a, b)) === -1) {\n            this.value.push(a);\n          }\n          i++;\n        }\n        return;\n      }\n    } else {\n      if (count === 0) {\n        value = null;\n      } else {\n        value = value[0];\n      }\n    }\n\n    if (value !== this.value) {\n      this.oldValue = this.value;\n      this.value = value;\n      this.notify();\n    }\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.value;\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  handleEvent() {\n    this.synchronizeValue();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.element, this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  bind() {\n    this.domObserver = DOM.createMutationObserver(() => {\n      this.synchronizeOptions();\n      this.synchronizeValue();\n    });\n    this.domObserver.observe(this.element, { childList: true, subtree: true, characterData: true });\n  }\n\n  unbind() {\n    this.domObserver.disconnect();\n    this.domObserver = null;\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(selectArrayContext, this);\n      this.arrayObserver = null;\n    }\n  }\n}) || _class10);\n\nexport let ClassObserver = class ClassObserver {\n  constructor(element) {\n    this.element = element;\n    this.doNotCache = true;\n    this.value = '';\n    this.version = 0;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    let nameIndex = this.nameIndex || {};\n    let version = this.version;\n    let names;\n    let name;\n\n    if (newValue !== null && newValue !== undefined && newValue.length) {\n      names = newValue.split(/\\s+/);\n      for (let i = 0, length = names.length; i < length; i++) {\n        name = names[i];\n        if (name === '') {\n          continue;\n        }\n        nameIndex[name] = version;\n        this.element.classList.add(name);\n      }\n    }\n\n    this.value = newValue;\n    this.nameIndex = nameIndex;\n    this.version += 1;\n\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (name in nameIndex) {\n      if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {\n        continue;\n      }\n      this.element.classList.remove(name);\n    }\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"class\" property is not supported.`);\n  }\n};\n\nexport function hasDeclaredDependencies(descriptor) {\n  return !!(descriptor && descriptor.get && descriptor.get.dependencies);\n}\n\nexport function declarePropertyDependencies(ctor, propertyName, dependencies) {\n  let descriptor = Object.getOwnPropertyDescriptor(ctor.prototype, propertyName);\n  descriptor.get.dependencies = dependencies;\n}\n\nexport function computedFrom(...rest) {\n  return function (target, key, descriptor) {\n    descriptor.get.dependencies = rest;\n    return descriptor;\n  };\n}\n\nexport let ComputedExpression = class ComputedExpression extends Expression {\n  constructor(name, dependencies) {\n    super();\n\n    this.name = name;\n    this.dependencies = dependencies;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return scope.bindingContext[this.name];\n  }\n\n  assign(scope, value) {\n    scope.bindingContext[this.name] = value;\n  }\n\n  accept(visitor) {\n    throw new Error('not implemented');\n  }\n\n  connect(binding, scope) {\n    let dependencies = this.dependencies;\n    let i = dependencies.length;\n    while (i--) {\n      dependencies[i].connect(binding, scope);\n    }\n  }\n};\n\nexport function createComputedObserver(obj, propertyName, descriptor, observerLocator) {\n  let dependencies = descriptor.get.dependencies;\n  if (!(dependencies instanceof ComputedExpression)) {\n    let i = dependencies.length;\n    while (i--) {\n      dependencies[i] = observerLocator.parser.parse(dependencies[i]);\n    }\n    dependencies = descriptor.get.dependencies = new ComputedExpression(propertyName, dependencies);\n  }\n\n  let scope = { bindingContext: obj, overrideContext: createOverrideContext(obj) };\n  return new ExpressionObserver(scope, dependencies, observerLocator);\n}\n\nlet svgElements;\nlet svgPresentationElements;\nlet svgPresentationAttributes;\nlet svgAnalyzer;\n\nif (typeof FEATURE_NO_SVG === 'undefined') {\n  svgElements = {\n    a: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'target', 'transform', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    altGlyph: ['class', 'dx', 'dy', 'externalResourcesRequired', 'format', 'glyphRef', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    altGlyphDef: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    altGlyphItem: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    animate: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateColor: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateMotion: ['accumulate', 'additive', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keyPoints', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'origin', 'path', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'rotate', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateTransform: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'type', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    circle: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'r', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    clipPath: ['class', 'clipPathUnits', 'externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    'color-profile': ['id', 'local', 'name', 'rendering-intent', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    cursor: ['externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    defs: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    desc: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    ellipse: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    feBlend: ['class', 'height', 'id', 'in', 'in2', 'mode', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feColorMatrix: ['class', 'height', 'id', 'in', 'result', 'style', 'type', 'values', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feComponentTransfer: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feComposite: ['class', 'height', 'id', 'in', 'in2', 'k1', 'k2', 'k3', 'k4', 'operator', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feConvolveMatrix: ['bias', 'class', 'divisor', 'edgeMode', 'height', 'id', 'in', 'kernelMatrix', 'kernelUnitLength', 'order', 'preserveAlpha', 'result', 'style', 'targetX', 'targetY', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feDiffuseLighting: ['class', 'diffuseConstant', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feDisplacementMap: ['class', 'height', 'id', 'in', 'in2', 'result', 'scale', 'style', 'width', 'x', 'xChannelSelector', 'xml:base', 'xml:lang', 'xml:space', 'y', 'yChannelSelector'],\n    feDistantLight: ['azimuth', 'elevation', 'id', 'xml:base', 'xml:lang', 'xml:space'],\n    feFlood: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feFuncA: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncB: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncG: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncR: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feGaussianBlur: ['class', 'height', 'id', 'in', 'result', 'stdDeviation', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feImage: ['class', 'externalResourcesRequired', 'height', 'id', 'preserveAspectRatio', 'result', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feMerge: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feMergeNode: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    feMorphology: ['class', 'height', 'id', 'in', 'operator', 'radius', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feOffset: ['class', 'dx', 'dy', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    fePointLight: ['id', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],\n    feSpecularLighting: ['class', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'specularConstant', 'specularExponent', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feSpotLight: ['id', 'limitingConeAngle', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'specularExponent', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],\n    feTile: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feTurbulence: ['baseFrequency', 'class', 'height', 'id', 'numOctaves', 'result', 'seed', 'stitchTiles', 'style', 'type', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    filter: ['class', 'externalResourcesRequired', 'filterRes', 'filterUnits', 'height', 'id', 'primitiveUnits', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    font: ['class', 'externalResourcesRequired', 'horiz-adv-x', 'horiz-origin-x', 'horiz-origin-y', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face': ['accent-height', 'alphabetic', 'ascent', 'bbox', 'cap-height', 'descent', 'font-family', 'font-size', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'hanging', 'id', 'ideographic', 'mathematical', 'overline-position', 'overline-thickness', 'panose-1', 'slope', 'stemh', 'stemv', 'strikethrough-position', 'strikethrough-thickness', 'underline-position', 'underline-thickness', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'widths', 'x-height', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-format': ['id', 'string', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-name': ['id', 'name', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-src': ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-uri': ['id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    foreignObject: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    g: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    glyph: ['arabic-form', 'class', 'd', 'glyph-name', 'horiz-adv-x', 'id', 'lang', 'orientation', 'style', 'unicode', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    glyphRef: ['class', 'dx', 'dy', 'format', 'glyphRef', 'id', 'style', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    hkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space'],\n    image: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    line: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'x1', 'x2', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],\n    linearGradient: ['class', 'externalResourcesRequired', 'gradientTransform', 'gradientUnits', 'id', 'spreadMethod', 'style', 'x1', 'x2', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],\n    marker: ['class', 'externalResourcesRequired', 'id', 'markerHeight', 'markerUnits', 'markerWidth', 'orient', 'preserveAspectRatio', 'refX', 'refY', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],\n    mask: ['class', 'externalResourcesRequired', 'height', 'id', 'maskContentUnits', 'maskUnits', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    metadata: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    'missing-glyph': ['class', 'd', 'horiz-adv-x', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    mpath: ['externalResourcesRequired', 'id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    path: ['class', 'd', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'pathLength', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    pattern: ['class', 'externalResourcesRequired', 'height', 'id', 'patternContentUnits', 'patternTransform', 'patternUnits', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'viewBox', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    polygon: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    polyline: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    radialGradient: ['class', 'cx', 'cy', 'externalResourcesRequired', 'fx', 'fy', 'gradientTransform', 'gradientUnits', 'id', 'r', 'spreadMethod', 'style', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    rect: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    script: ['externalResourcesRequired', 'id', 'type', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    set: ['attributeName', 'attributeType', 'begin', 'dur', 'end', 'externalResourcesRequired', 'fill', 'id', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    stop: ['class', 'id', 'offset', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    style: ['id', 'media', 'title', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    svg: ['baseProfile', 'class', 'contentScriptType', 'contentStyleType', 'externalResourcesRequired', 'height', 'id', 'onabort', 'onactivate', 'onclick', 'onerror', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onresize', 'onscroll', 'onunload', 'onzoom', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'version', 'viewBox', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'zoomAndPan'],\n    switch: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    symbol: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],\n    text: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'transform', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    textPath: ['class', 'externalResourcesRequired', 'id', 'lengthAdjust', 'method', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'spacing', 'startOffset', 'style', 'systemLanguage', 'textLength', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    title: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    tref: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    tspan: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    use: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    view: ['externalResourcesRequired', 'id', 'preserveAspectRatio', 'viewBox', 'viewTarget', 'xml:base', 'xml:lang', 'xml:space', 'zoomAndPan'],\n    vkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space']\n  };\n\n\n  svgPresentationElements = {\n    'a': true,\n    'altGlyph': true,\n    'animate': true,\n    'animateColor': true,\n    'circle': true,\n    'clipPath': true,\n    'defs': true,\n    'ellipse': true,\n    'feBlend': true,\n    'feColorMatrix': true,\n    'feComponentTransfer': true,\n    'feComposite': true,\n    'feConvolveMatrix': true,\n    'feDiffuseLighting': true,\n    'feDisplacementMap': true,\n    'feFlood': true,\n    'feGaussianBlur': true,\n    'feImage': true,\n    'feMerge': true,\n    'feMorphology': true,\n    'feOffset': true,\n    'feSpecularLighting': true,\n    'feTile': true,\n    'feTurbulence': true,\n    'filter': true,\n    'font': true,\n    'foreignObject': true,\n    'g': true,\n    'glyph': true,\n    'glyphRef': true,\n    'image': true,\n    'line': true,\n    'linearGradient': true,\n    'marker': true,\n    'mask': true,\n    'missing-glyph': true,\n    'path': true,\n    'pattern': true,\n    'polygon': true,\n    'polyline': true,\n    'radialGradient': true,\n    'rect': true,\n    'stop': true,\n    'svg': true,\n    'switch': true,\n    'symbol': true,\n    'text': true,\n    'textPath': true,\n    'tref': true,\n    'tspan': true,\n    'use': true\n  };\n\n  svgPresentationAttributes = {\n    'alignment-baseline': true,\n    'baseline-shift': true,\n    'clip-path': true,\n    'clip-rule': true,\n    'clip': true,\n    'color-interpolation-filters': true,\n    'color-interpolation': true,\n    'color-profile': true,\n    'color-rendering': true,\n    'color': true,\n    'cursor': true,\n    'direction': true,\n    'display': true,\n    'dominant-baseline': true,\n    'enable-background': true,\n    'fill-opacity': true,\n    'fill-rule': true,\n    'fill': true,\n    'filter': true,\n    'flood-color': true,\n    'flood-opacity': true,\n    'font-family': true,\n    'font-size-adjust': true,\n    'font-size': true,\n    'font-stretch': true,\n    'font-style': true,\n    'font-variant': true,\n    'font-weight': true,\n    'glyph-orientation-horizontal': true,\n    'glyph-orientation-vertical': true,\n    'image-rendering': true,\n    'kerning': true,\n    'letter-spacing': true,\n    'lighting-color': true,\n    'marker-end': true,\n    'marker-mid': true,\n    'marker-start': true,\n    'mask': true,\n    'opacity': true,\n    'overflow': true,\n    'pointer-events': true,\n    'shape-rendering': true,\n    'stop-color': true,\n    'stop-opacity': true,\n    'stroke-dasharray': true,\n    'stroke-dashoffset': true,\n    'stroke-linecap': true,\n    'stroke-linejoin': true,\n    'stroke-miterlimit': true,\n    'stroke-opacity': true,\n    'stroke-width': true,\n    'stroke': true,\n    'text-anchor': true,\n    'text-decoration': true,\n    'text-rendering': true,\n    'unicode-bidi': true,\n    'visibility': true,\n    'word-spacing': true,\n    'writing-mode': true\n  };\n\n  let createElement = function (html) {\n    let div = DOM.createElement('div');\n    div.innerHTML = html;\n    return div.firstChild;\n  };\n\n  svgAnalyzer = class SVGAnalyzer {\n    constructor() {\n      if (createElement('<svg><altGlyph /></svg>').firstElementChild.nodeName === 'altglyph' && elements.altGlyph) {\n        elements.altglyph = elements.altGlyph;\n        delete elements.altGlyph;\n        elements.altglyphdef = elements.altGlyphDef;\n        delete elements.altGlyphDef;\n        elements.altglyphitem = elements.altGlyphItem;\n        delete elements.altGlyphItem;\n        elements.glyphref = elements.glyphRef;\n        delete elements.glyphRef;\n      }\n    }\n\n    isStandardSvgAttribute(nodeName, attributeName) {\n      return presentationElements[nodeName] && presentationAttributes[attributeName] || elements[nodeName] && elements[nodeName].indexOf(attributeName) !== -1;\n    }\n  };\n}\n\nexport const elements = svgElements;\nexport const presentationElements = svgPresentationElements;\nexport const presentationAttributes = svgPresentationAttributes;\nexport const SVGAnalyzer = svgAnalyzer || class {\n  isStandardSvgAttribute() {\n    return false;\n  }\n};\n\nexport let ObserverLocator = (_temp = _class11 = class ObserverLocator {\n  constructor(taskQueue, eventManager, dirtyChecker, svgAnalyzer, parser) {\n    this.taskQueue = taskQueue;\n    this.eventManager = eventManager;\n    this.dirtyChecker = dirtyChecker;\n    this.svgAnalyzer = svgAnalyzer;\n    this.parser = parser;\n\n    this.adapters = [];\n    this.logger = LogManager.getLogger('observer-locator');\n  }\n\n  getObserver(obj, propertyName) {\n    let observersLookup = obj.__observers__;\n    let observer;\n\n    if (observersLookup && propertyName in observersLookup) {\n      return observersLookup[propertyName];\n    }\n\n    observer = this.createPropertyObserver(obj, propertyName);\n\n    if (!observer.doNotCache) {\n      if (observersLookup === undefined) {\n        observersLookup = this.getOrCreateObserversLookup(obj);\n      }\n\n      observersLookup[propertyName] = observer;\n    }\n\n    return observer;\n  }\n\n  getOrCreateObserversLookup(obj) {\n    return obj.__observers__ || this.createObserversLookup(obj);\n  }\n\n  createObserversLookup(obj) {\n    let value = {};\n\n    if (!Reflect.defineProperty(obj, '__observers__', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    })) {\n      this.logger.warn('Cannot add observers to object', obj);\n    }\n\n    return value;\n  }\n\n  addAdapter(adapter) {\n    this.adapters.push(adapter);\n  }\n\n  getAdapterObserver(obj, propertyName, descriptor) {\n    for (let i = 0, ii = this.adapters.length; i < ii; i++) {\n      let adapter = this.adapters[i];\n      let observer = adapter.getObserver(obj, propertyName, descriptor);\n      if (observer) {\n        return observer;\n      }\n    }\n    return null;\n  }\n\n  createPropertyObserver(obj, propertyName) {\n    let descriptor;\n    let handler;\n    let xlinkResult;\n\n    if (!(obj instanceof Object)) {\n      return new PrimitiveObserver(obj, propertyName);\n    }\n\n    if (obj instanceof DOM.Element) {\n      if (propertyName === 'class') {\n        return new ClassObserver(obj);\n      }\n      if (propertyName === 'style' || propertyName === 'css') {\n        return new StyleObserver(obj, propertyName);\n      }\n      handler = this.eventManager.getElementHandler(obj, propertyName);\n      if (propertyName === 'value' && obj.tagName.toLowerCase() === 'select') {\n        return new SelectValueObserver(obj, handler, this);\n      }\n      if (propertyName === 'checked' && obj.tagName.toLowerCase() === 'input') {\n        return new CheckedObserver(obj, handler, this);\n      }\n      if (handler) {\n        return new ValueAttributeObserver(obj, propertyName, handler);\n      }\n      xlinkResult = /^xlink:(.+)$/.exec(propertyName);\n      if (xlinkResult) {\n        return new XLinkAttributeObserver(obj, propertyName, xlinkResult[1]);\n      }\n      if (propertyName === 'role' && (obj instanceof DOM.Element || obj instanceof DOM.SVGElement) || /^\\w+:|^data-|^aria-/.test(propertyName) || obj instanceof DOM.SVGElement && this.svgAnalyzer.isStandardSvgAttribute(obj.nodeName, propertyName)) {\n        return new DataAttributeObserver(obj, propertyName);\n      }\n    }\n\n    descriptor = Object.getPropertyDescriptor(obj, propertyName);\n\n    if (hasDeclaredDependencies(descriptor)) {\n      return createComputedObserver(obj, propertyName, descriptor, this);\n    }\n\n    if (descriptor) {\n      const existingGetterOrSetter = descriptor.get || descriptor.set;\n      if (existingGetterOrSetter) {\n        if (existingGetterOrSetter.getObserver) {\n          return existingGetterOrSetter.getObserver(obj);\n        }\n\n        let adapterObserver = this.getAdapterObserver(obj, propertyName, descriptor);\n        if (adapterObserver) {\n          return adapterObserver;\n        }\n        return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n      }\n    }\n\n    if (obj instanceof Array) {\n      if (propertyName === 'length') {\n        return this.getArrayObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    } else if (obj instanceof Map) {\n      if (propertyName === 'size') {\n        return this.getMapObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    } else if (obj instanceof Set) {\n      if (propertyName === 'size') {\n        return this.getSetObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    }\n\n    return new SetterObserver(this.taskQueue, obj, propertyName);\n  }\n\n  getAccessor(obj, propertyName) {\n    if (obj instanceof DOM.Element) {\n      if (propertyName === 'class' || propertyName === 'style' || propertyName === 'css' || propertyName === 'value' && (obj.tagName.toLowerCase() === 'input' || obj.tagName.toLowerCase() === 'select') || propertyName === 'checked' && obj.tagName.toLowerCase() === 'input' || propertyName === 'model' && obj.tagName.toLowerCase() === 'input' || /^xlink:.+$/.exec(propertyName)) {\n        return this.getObserver(obj, propertyName);\n      }\n      if (/^\\w+:|^data-|^aria-/.test(propertyName) || obj instanceof DOM.SVGElement && this.svgAnalyzer.isStandardSvgAttribute(obj.nodeName, propertyName) || obj.tagName.toLowerCase() === 'img' && propertyName === 'src' || obj.tagName.toLowerCase() === 'a' && propertyName === 'href') {\n        return dataAttributeAccessor;\n      }\n    }\n    return propertyAccessor;\n  }\n\n  getArrayObserver(array) {\n    return getArrayObserver(this.taskQueue, array);\n  }\n\n  getMapObserver(map) {\n    return getMapObserver(this.taskQueue, map);\n  }\n\n  getSetObserver(set) {\n    return getSetObserver(this.taskQueue, set);\n  }\n}, _class11.inject = [TaskQueue, EventManager, DirtyChecker, SVGAnalyzer, Parser], _temp);\n\nexport let ObjectObservationAdapter = class ObjectObservationAdapter {\n  getObserver(object, propertyName, descriptor) {\n    throw new Error('BindingAdapters must implement getObserver(object, propertyName).');\n  }\n};\n\nexport let BindingExpression = class BindingExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, mode, lookupFunctions, attribute) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.sourceExpression = sourceExpression;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.attribute = attribute;\n    this.discrete = false;\n  }\n\n  createBinding(target) {\n    return new Binding(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.mode, this.lookupFunctions);\n  }\n};\n\nexport let Binding = (_dec10 = connectable(), _dec10(_class12 = class Binding {\n  constructor(observerLocator, sourceExpression, target, targetProperty, mode, lookupFunctions) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = targetProperty;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  updateTarget(value) {\n    this.targetObserver.setValue(value, this.target, this.targetProperty);\n  }\n\n  updateSource(value) {\n    this.sourceExpression.assign(this.source, value, this.lookupFunctions);\n  }\n\n  call(context, newValue, oldValue) {\n    if (!this.isBound) {\n      return;\n    }\n    if (context === sourceContext) {\n      oldValue = this.targetObserver.getValue(this.target, this.targetProperty);\n      newValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      if (newValue !== oldValue) {\n        this.updateTarget(newValue);\n      }\n      if (this.mode !== bindingMode.oneTime) {\n        this._version++;\n        this.sourceExpression.connect(this, this.source);\n        this.unobserve(false);\n      }\n      return;\n    }\n    if (context === targetContext) {\n      if (newValue !== this.sourceExpression.evaluate(this.source, this.lookupFunctions)) {\n        this.updateSource(newValue);\n      }\n      return;\n    }\n    throw new Error(`Unexpected call context ${context}`);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    let mode = this.mode;\n    if (!this.targetObserver) {\n      let method = mode === bindingMode.twoWay || mode === bindingMode.fromView ? 'getObserver' : 'getAccessor';\n      this.targetObserver = this.observerLocator[method](this.target, this.targetProperty);\n    }\n\n    if ('bind' in this.targetObserver) {\n      this.targetObserver.bind();\n    }\n    if (this.mode !== bindingMode.fromView) {\n      let value = this.sourceExpression.evaluate(source, this.lookupFunctions);\n      this.updateTarget(value);\n    }\n\n    if (mode === bindingMode.oneTime) {\n      return;\n    } else if (mode === bindingMode.toView) {\n      enqueueBindingConnect(this);\n    } else if (mode === bindingMode.twoWay) {\n      this.sourceExpression.connect(this, source);\n      this.targetObserver.subscribe(targetContext, this);\n    } else if (mode === bindingMode.fromView) {\n      this.targetObserver.subscribe(targetContext, this);\n    }\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    if ('unbind' in this.targetObserver) {\n      this.targetObserver.unbind();\n    }\n    if (this.targetObserver.unsubscribe) {\n      this.targetObserver.unsubscribe(targetContext, this);\n    }\n    this.unobserve(true);\n  }\n\n  connect(evaluate) {\n    if (!this.isBound) {\n      return;\n    }\n    if (evaluate) {\n      let value = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      this.updateTarget(value);\n    }\n    this.sourceExpression.connect(this, this.source);\n  }\n}) || _class12);\n\nexport let CallExpression = class CallExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, lookupFunctions) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.sourceExpression = sourceExpression;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  createBinding(target) {\n    return new Call(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.lookupFunctions);\n  }\n};\n\nexport let Call = class Call {\n  constructor(observerLocator, sourceExpression, target, targetProperty, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = observerLocator.getObserver(target, targetProperty);\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  callSource($event) {\n    let overrideContext = this.source.overrideContext;\n    Object.assign(overrideContext, $event);\n    overrideContext.$event = $event;\n    let mustEvaluate = true;\n    let result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);\n    delete overrideContext.$event;\n    for (let prop in $event) {\n      delete overrideContext[prop];\n    }\n    return result;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this.targetProperty.setValue($event => this.callSource($event));\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.targetProperty.setValue(null);\n  }\n};\n\nexport let ValueConverterResource = class ValueConverterResource {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static convention(name) {\n    if (name.endsWith('ValueConverter')) {\n      return new ValueConverterResource(camelCase(name.substring(0, name.length - 14)));\n    }\n  }\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerValueConverter(name || this.name, this.instance);\n  }\n\n  load(container, target) {}\n};\n\nexport function valueConverter(nameOrTarget) {\n  if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {\n    return function (target) {\n      metadata.define(metadata.resource, new ValueConverterResource(nameOrTarget), target);\n    };\n  }\n\n  metadata.define(metadata.resource, new ValueConverterResource(), nameOrTarget);\n}\n\nexport let BindingBehaviorResource = class BindingBehaviorResource {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static convention(name) {\n    if (name.endsWith('BindingBehavior')) {\n      return new BindingBehaviorResource(camelCase(name.substring(0, name.length - 15)));\n    }\n  }\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerBindingBehavior(name || this.name, this.instance);\n  }\n\n  load(container, target) {}\n};\n\nexport function bindingBehavior(nameOrTarget) {\n  if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {\n    return function (target) {\n      metadata.define(metadata.resource, new BindingBehaviorResource(nameOrTarget), target);\n    };\n  }\n\n  metadata.define(metadata.resource, new BindingBehaviorResource(), nameOrTarget);\n}\n\nexport let ListenerExpression = class ListenerExpression {\n  constructor(eventManager, targetEvent, sourceExpression, delegationStrategy, preventDefault, lookupFunctions) {\n    this.eventManager = eventManager;\n    this.targetEvent = targetEvent;\n    this.sourceExpression = sourceExpression;\n    this.delegationStrategy = delegationStrategy;\n    this.discrete = true;\n    this.preventDefault = preventDefault;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  createBinding(target) {\n    return new Listener(this.eventManager, this.targetEvent, this.delegationStrategy, this.sourceExpression, target, this.preventDefault, this.lookupFunctions);\n  }\n};\n\nexport let Listener = class Listener {\n  constructor(eventManager, targetEvent, delegationStrategy, sourceExpression, target, preventDefault, lookupFunctions) {\n    this.eventManager = eventManager;\n    this.targetEvent = targetEvent;\n    this.delegationStrategy = delegationStrategy;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.preventDefault = preventDefault;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  callSource(event) {\n    let overrideContext = this.source.overrideContext;\n    overrideContext.$event = event;\n    let mustEvaluate = true;\n    let result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);\n    delete overrideContext.$event;\n    if (result !== true && this.preventDefault) {\n      event.preventDefault();\n    }\n    return result;\n  }\n\n  handleEvent(event) {\n    this.callSource(event);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this._handler = this.eventManager.addEventListener(this.target, this.targetEvent, this, this.delegationStrategy, true);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this._handler.dispose();\n    this._handler = null;\n  }\n};\n\nfunction getAU(element) {\n  let au = element.au;\n\n  if (au === undefined) {\n    throw new Error(`No Aurelia APIs are defined for the element: \"${element.tagName}\".`);\n  }\n\n  return au;\n}\n\nexport let NameExpression = class NameExpression {\n  constructor(sourceExpression, apiName, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.apiName = apiName;\n    this.lookupFunctions = lookupFunctions;\n    this.discrete = true;\n  }\n\n  createBinding(target) {\n    return new NameBinder(this.sourceExpression, NameExpression.locateAPI(target, this.apiName), this.lookupFunctions);\n  }\n\n  static locateAPI(element, apiName) {\n    switch (apiName) {\n      case 'element':\n        return element;\n      case 'controller':\n        return getAU(element).controller;\n      case 'view-model':\n        return getAU(element).controller.viewModel;\n      case 'view':\n        return getAU(element).controller.view;\n      default:\n        let target = getAU(element)[apiName];\n\n        if (target === undefined) {\n          throw new Error(`Attempted to reference \"${apiName}\", but it was not found amongst the target's API.`);\n        }\n\n        return target.viewModel;\n    }\n  }\n};\n\nlet NameBinder = class NameBinder {\n  constructor(sourceExpression, target, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this.sourceExpression.assign(this.source, this.target, this.lookupFunctions);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.evaluate(this.source, this.lookupFunctions) === this.target) {\n      this.sourceExpression.assign(this.source, null, this.lookupFunctions);\n    }\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n  }\n};\n\n\nconst LookupFunctions = {\n  bindingBehaviors: name => null,\n  valueConverters: name => null\n};\n\nexport let BindingEngine = (_temp2 = _class13 = class BindingEngine {\n\n  constructor(observerLocator, parser) {\n    this.observerLocator = observerLocator;\n    this.parser = parser;\n  }\n\n  createBindingExpression(targetProperty, sourceExpression, mode = bindingMode.toView, lookupFunctions = LookupFunctions) {\n    return new BindingExpression(this.observerLocator, targetProperty, this.parser.parse(sourceExpression), mode, lookupFunctions);\n  }\n\n  propertyObserver(obj, propertyName) {\n    return {\n      subscribe: callback => {\n        let observer = this.observerLocator.getObserver(obj, propertyName);\n        observer.subscribe(callback);\n        return {\n          dispose: () => observer.unsubscribe(callback)\n        };\n      }\n    };\n  }\n\n  collectionObserver(collection) {\n    return {\n      subscribe: callback => {\n        let observer;\n        if (collection instanceof Array) {\n          observer = this.observerLocator.getArrayObserver(collection);\n        } else if (collection instanceof Map) {\n          observer = this.observerLocator.getMapObserver(collection);\n        } else if (collection instanceof Set) {\n          observer = this.observerLocator.getSetObserver(collection);\n        } else {\n          throw new Error('collection must be an instance of Array, Map or Set.');\n        }\n        observer.subscribe(callback);\n        return {\n          dispose: () => observer.unsubscribe(callback)\n        };\n      }\n    };\n  }\n\n  expressionObserver(bindingContext, expression) {\n    let scope = { bindingContext, overrideContext: createOverrideContext(bindingContext) };\n    return new ExpressionObserver(scope, this.parser.parse(expression), this.observerLocator, LookupFunctions);\n  }\n\n  parseExpression(expression) {\n    return this.parser.parse(expression);\n  }\n\n  registerAdapter(adapter) {\n    this.observerLocator.addAdapter(adapter);\n  }\n}, _class13.inject = [ObserverLocator, Parser], _temp2);\n\nlet setProto = Set.prototype;\n\nexport function getSetObserver(taskQueue, set) {\n  return ModifySetObserver.for(taskQueue, set);\n}\n\nlet ModifySetObserver = class ModifySetObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, set) {\n    super(taskQueue, set);\n  }\n\n  static for(taskQueue, set) {\n    if (!('__set_observer__' in set)) {\n      Reflect.defineProperty(set, '__set_observer__', {\n        value: ModifySetObserver.create(taskQueue, set),\n        enumerable: false, configurable: false\n      });\n    }\n    return set.__set_observer__;\n  }\n\n  static create(taskQueue, set) {\n    let observer = new ModifySetObserver(taskQueue, set);\n\n    let proto = setProto;\n    if (proto.add !== set.add || proto.delete !== set.delete || proto.clear !== set.clear) {\n      proto = {\n        add: set.add,\n        delete: set.delete,\n        clear: set.clear\n      };\n    }\n\n    set.add = function () {\n      let type = 'add';\n      let oldSize = set.size;\n      let methodCallResult = proto.add.apply(set, arguments);\n      let hasValue = set.size === oldSize;\n      if (!hasValue) {\n        observer.addChangeRecord({\n          type: type,\n          object: set,\n          value: Array.from(set).pop()\n        });\n      }\n      return methodCallResult;\n    };\n\n    set.delete = function () {\n      let hasValue = set.has(arguments[0]);\n      let methodCallResult = proto.delete.apply(set, arguments);\n      if (hasValue) {\n        observer.addChangeRecord({\n          type: 'delete',\n          object: set,\n          value: arguments[0]\n        });\n      }\n      return methodCallResult;\n    };\n\n    set.clear = function () {\n      let methodCallResult = proto.clear.apply(set, arguments);\n      observer.addChangeRecord({\n        type: 'clear',\n        object: set\n      });\n      return methodCallResult;\n    };\n\n    return observer;\n  }\n};\n\n\nexport function observable(targetOrConfig, key, descriptor) {\n  function deco(target, key, descriptor, config) {\n    const isClassDecorator = key === undefined;\n    if (isClassDecorator) {\n      target = target.prototype;\n      key = typeof config === 'string' ? config : config.name;\n    }\n\n    let innerPropertyName = `_${key}`;\n    const innerPropertyDescriptor = {\n      configurable: true,\n      enumerable: false,\n      writable: true\n    };\n\n    const callbackName = config && config.changeHandler || `${key}Changed`;\n\n    if (descriptor) {\n      if (typeof descriptor.initializer === 'function') {\n        innerPropertyDescriptor.value = descriptor.initializer();\n      }\n    } else {\n      descriptor = {};\n    }\n\n    if (!('enumerable' in descriptor)) {\n      descriptor.enumerable = true;\n    }\n\n    delete descriptor.value;\n    delete descriptor.writable;\n    delete descriptor.initializer;\n\n    Reflect.defineProperty(target, innerPropertyName, innerPropertyDescriptor);\n\n    descriptor.get = function () {\n      return this[innerPropertyName];\n    };\n    descriptor.set = function (newValue) {\n      let oldValue = this[innerPropertyName];\n      if (newValue === oldValue) {\n        return;\n      }\n\n      this[innerPropertyName] = newValue;\n      Reflect.defineProperty(this, innerPropertyName, { enumerable: false });\n\n      if (this[callbackName]) {\n        this[callbackName](newValue, oldValue, key);\n      }\n    };\n\n    descriptor.get.dependencies = [innerPropertyName];\n\n    if (isClassDecorator) {\n      Reflect.defineProperty(target, key, descriptor);\n    } else {\n      return descriptor;\n    }\n  }\n\n  if (key === undefined) {\n    return (t, k, d) => deco(t, k, d, targetOrConfig);\n  }\n  return deco(targetOrConfig, key, descriptor);\n}\n\nconst signals = {};\n\nexport function connectBindingToSignal(binding, name) {\n  if (!signals.hasOwnProperty(name)) {\n    signals[name] = 0;\n  }\n  binding.observeProperty(signals, name);\n}\n\nexport function signalBindings(name) {\n  if (signals.hasOwnProperty(name)) {\n    signals[name]++;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-binding/dist/es2015/aurelia-binding.js\n// module id = 24\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n\nvar AbstractRepeater = exports.AbstractRepeater = function () {\n  function AbstractRepeater(options) {\n    \n\n    Object.assign(this, {\n      local: 'items',\n      viewsRequireLifecycle: true\n    }, options);\n  }\n\n  AbstractRepeater.prototype.viewCount = function viewCount() {\n    throw new Error('subclass must implement `viewCount`');\n  };\n\n  AbstractRepeater.prototype.views = function views() {\n    throw new Error('subclass must implement `views`');\n  };\n\n  AbstractRepeater.prototype.view = function view(index) {\n    throw new Error('subclass must implement `view`');\n  };\n\n  AbstractRepeater.prototype.matcher = function matcher() {\n    throw new Error('subclass must implement `matcher`');\n  };\n\n  AbstractRepeater.prototype.addView = function addView(bindingContext, overrideContext) {\n    throw new Error('subclass must implement `addView`');\n  };\n\n  AbstractRepeater.prototype.insertView = function insertView(index, bindingContext, overrideContext) {\n    throw new Error('subclass must implement `insertView`');\n  };\n\n  AbstractRepeater.prototype.moveView = function moveView(sourceIndex, targetIndex) {\n    throw new Error('subclass must implement `moveView`');\n  };\n\n  AbstractRepeater.prototype.removeAllViews = function removeAllViews(returnToCache, skipAnimation) {\n    throw new Error('subclass must implement `removeAllViews`');\n  };\n\n  AbstractRepeater.prototype.removeViews = function removeViews(viewsToRemove, returnToCache, skipAnimation) {\n    throw new Error('subclass must implement `removeView`');\n  };\n\n  AbstractRepeater.prototype.removeView = function removeView(index, returnToCache, skipAnimation) {\n    throw new Error('subclass must implement `removeView`');\n  };\n\n  AbstractRepeater.prototype.updateBindings = function updateBindings(view) {\n    throw new Error('subclass must implement `updateBindings`');\n  };\n\n  return AbstractRepeater;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/abstract-repeater.js\n// module id = 294\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewsRequireLifecycle = viewsRequireLifecycle;\nvar lifecycleOptionalBehaviors = exports.lifecycleOptionalBehaviors = ['focus', 'if', 'else', 'repeat', 'show', 'hide', 'with'];\n\nfunction behaviorRequiresLifecycle(instruction) {\n  var t = instruction.type;\n  var name = t.elementName !== null ? t.elementName : t.attributeName;\n  return lifecycleOptionalBehaviors.indexOf(name) === -1 && (t.handlesAttached || t.handlesBind || t.handlesCreated || t.handlesDetached || t.handlesUnbind) || t.viewFactory && viewsRequireLifecycle(t.viewFactory) || instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\n}\n\nfunction targetRequiresLifecycle(instruction) {\n  var behaviors = instruction.behaviorInstructions;\n  if (behaviors) {\n    var i = behaviors.length;\n    while (i--) {\n      if (behaviorRequiresLifecycle(behaviors[i])) {\n        return true;\n      }\n    }\n  }\n\n  return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\n}\n\nfunction viewsRequireLifecycle(viewFactory) {\n  if ('_viewsRequireLifecycle' in viewFactory) {\n    return viewFactory._viewsRequireLifecycle;\n  }\n\n  viewFactory._viewsRequireLifecycle = false;\n\n  if (viewFactory.viewFactory) {\n    viewFactory._viewsRequireLifecycle = viewsRequireLifecycle(viewFactory.viewFactory);\n    return viewFactory._viewsRequireLifecycle;\n  }\n\n  if (viewFactory.template.querySelector('.au-animate')) {\n    viewFactory._viewsRequireLifecycle = true;\n    return true;\n  }\n\n  for (var id in viewFactory.instructions) {\n    if (targetRequiresLifecycle(viewFactory.instructions[id])) {\n      viewFactory._viewsRequireLifecycle = true;\n      return true;\n    }\n  }\n\n  viewFactory._viewsRequireLifecycle = false;\n  return false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/analyze-view-factory.js\n// module id = 295\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayRepeatStrategy = undefined;\n\nvar _repeatUtilities = require('./repeat-utilities');\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar ArrayRepeatStrategy = exports.ArrayRepeatStrategy = function () {\n  function ArrayRepeatStrategy() {\n    \n  }\n\n  ArrayRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {\n    return observerLocator.getArrayObserver(items);\n  };\n\n  ArrayRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {\n    var _this = this;\n\n    var itemsLength = items.length;\n\n    if (!items || itemsLength === 0) {\n      repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n      return;\n    }\n\n    var children = repeat.views();\n    var viewsLength = children.length;\n\n    if (viewsLength === 0) {\n      this._standardProcessInstanceChanged(repeat, items);\n      return;\n    }\n\n    if (repeat.viewsRequireLifecycle) {\n      var childrenSnapshot = children.slice(0);\n      var itemNameInBindingContext = repeat.local;\n      var matcher = repeat.matcher();\n\n      var itemsPreviouslyInViews = [];\n      var viewsToRemove = [];\n\n      for (var index = 0; index < viewsLength; index++) {\n        var view = childrenSnapshot[index];\n        var oldItem = view.bindingContext[itemNameInBindingContext];\n\n        if ((0, _repeatUtilities.indexOf)(items, oldItem, matcher) === -1) {\n          viewsToRemove.push(view);\n        } else {\n          itemsPreviouslyInViews.push(oldItem);\n        }\n      }\n\n      var updateViews = void 0;\n      var removePromise = void 0;\n\n      if (itemsPreviouslyInViews.length > 0) {\n        removePromise = repeat.removeViews(viewsToRemove, true, !repeat.viewsRequireLifecycle);\n        updateViews = function updateViews() {\n          for (var _index = 0; _index < itemsLength; _index++) {\n            var item = items[_index];\n            var indexOfView = (0, _repeatUtilities.indexOf)(itemsPreviouslyInViews, item, matcher, _index);\n            var _view = void 0;\n\n            if (indexOfView === -1) {\n              var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[_index], _index, itemsLength);\n              repeat.insertView(_index, overrideContext.bindingContext, overrideContext);\n\n              itemsPreviouslyInViews.splice(_index, 0, undefined);\n            } else if (indexOfView === _index) {\n              _view = children[indexOfView];\n              itemsPreviouslyInViews[indexOfView] = undefined;\n            } else {\n              _view = children[indexOfView];\n              repeat.moveView(indexOfView, _index);\n              itemsPreviouslyInViews.splice(indexOfView, 1);\n              itemsPreviouslyInViews.splice(_index, 0, undefined);\n            }\n\n            if (_view) {\n              (0, _repeatUtilities.updateOverrideContext)(_view.overrideContext, _index, itemsLength);\n            }\n          }\n\n          _this._inPlaceProcessItems(repeat, items);\n        };\n      } else {\n        removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n        updateViews = function updateViews() {\n          return _this._standardProcessInstanceChanged(repeat, items);\n        };\n      }\n\n      if (removePromise instanceof Promise) {\n        removePromise.then(updateViews);\n      } else {\n        updateViews();\n      }\n    } else {\n      this._inPlaceProcessItems(repeat, items);\n    }\n  };\n\n  ArrayRepeatStrategy.prototype._standardProcessInstanceChanged = function _standardProcessInstanceChanged(repeat, items) {\n    for (var i = 0, ii = items.length; i < ii; i++) {\n      var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[i], i, ii);\n      repeat.addView(overrideContext.bindingContext, overrideContext);\n    }\n  };\n\n  ArrayRepeatStrategy.prototype._inPlaceProcessItems = function _inPlaceProcessItems(repeat, items) {\n    var itemsLength = items.length;\n    var viewsLength = repeat.viewCount();\n\n    while (viewsLength > itemsLength) {\n      viewsLength--;\n      repeat.removeView(viewsLength, true, !repeat.viewsRequireLifecycle);\n    }\n\n    var local = repeat.local;\n\n    for (var i = 0; i < viewsLength; i++) {\n      var view = repeat.view(i);\n      var last = i === itemsLength - 1;\n      var middle = i !== 0 && !last;\n\n      if (view.bindingContext[local] === items[i] && view.overrideContext.$middle === middle && view.overrideContext.$last === last) {\n        continue;\n      }\n\n      view.bindingContext[local] = items[i];\n      view.overrideContext.$middle = middle;\n      view.overrideContext.$last = last;\n      repeat.updateBindings(view);\n    }\n\n    for (var _i = viewsLength; _i < itemsLength; _i++) {\n      var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[_i], _i, itemsLength);\n      repeat.addView(overrideContext.bindingContext, overrideContext);\n    }\n  };\n\n  ArrayRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, array, splices) {\n    var _this2 = this;\n\n    if (repeat.__queuedSplices) {\n      for (var i = 0, ii = splices.length; i < ii; ++i) {\n        var _splices$i = splices[i],\n            index = _splices$i.index,\n            removed = _splices$i.removed,\n            addedCount = _splices$i.addedCount;\n\n        (0, _aureliaBinding.mergeSplice)(repeat.__queuedSplices, index, removed, addedCount);\n      }\n\n      repeat.__array = array.slice(0);\n      return;\n    }\n\n    var maybePromise = this._runSplices(repeat, array.slice(0), splices);\n    if (maybePromise instanceof Promise) {\n      var queuedSplices = repeat.__queuedSplices = [];\n\n      var runQueuedSplices = function runQueuedSplices() {\n        if (!queuedSplices.length) {\n          repeat.__queuedSplices = undefined;\n          repeat.__array = undefined;\n          return;\n        }\n\n        var nextPromise = _this2._runSplices(repeat, repeat.__array, queuedSplices) || Promise.resolve();\n        queuedSplices = repeat.__queuedSplices = [];\n        nextPromise.then(runQueuedSplices);\n      };\n\n      maybePromise.then(runQueuedSplices);\n    }\n  };\n\n  ArrayRepeatStrategy.prototype._runSplices = function _runSplices(repeat, array, splices) {\n    var _this3 = this;\n\n    var removeDelta = 0;\n    var rmPromises = [];\n\n    for (var i = 0, ii = splices.length; i < ii; ++i) {\n      var splice = splices[i];\n      var removed = splice.removed;\n\n      for (var j = 0, jj = removed.length; j < jj; ++j) {\n        var viewOrPromise = repeat.removeView(splice.index + removeDelta + rmPromises.length, true);\n        if (viewOrPromise instanceof Promise) {\n          rmPromises.push(viewOrPromise);\n        }\n      }\n      removeDelta -= splice.addedCount;\n    }\n\n    if (rmPromises.length > 0) {\n      return Promise.all(rmPromises).then(function () {\n        var spliceIndexLow = _this3._handleAddedSplices(repeat, array, splices);\n        (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), spliceIndexLow);\n      });\n    }\n\n    var spliceIndexLow = this._handleAddedSplices(repeat, array, splices);\n    (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), spliceIndexLow);\n\n    return undefined;\n  };\n\n  ArrayRepeatStrategy.prototype._handleAddedSplices = function _handleAddedSplices(repeat, array, splices) {\n    var spliceIndex = void 0;\n    var spliceIndexLow = void 0;\n    var arrayLength = array.length;\n    for (var i = 0, ii = splices.length; i < ii; ++i) {\n      var splice = splices[i];\n      var addIndex = spliceIndex = splice.index;\n      var end = splice.index + splice.addedCount;\n\n      if (typeof spliceIndexLow === 'undefined' || spliceIndexLow === null || spliceIndexLow > splice.index) {\n        spliceIndexLow = spliceIndex;\n      }\n\n      for (; addIndex < end; ++addIndex) {\n        var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, array[addIndex], addIndex, arrayLength);\n        repeat.insertView(addIndex, overrideContext.bindingContext, overrideContext);\n      }\n    }\n\n    return spliceIndexLow;\n  };\n\n  return ArrayRepeatStrategy;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/array-repeat-strategy.js\n// module id = 296\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BindingSignaler = undefined;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar BindingSignaler = exports.BindingSignaler = function () {\n  function BindingSignaler() {\n    \n\n    this.signals = {};\n  }\n\n  BindingSignaler.prototype.signal = function signal(name) {\n    var bindings = this.signals[name];\n    if (!bindings) {\n      return;\n    }\n    var i = bindings.length;\n    while (i--) {\n      bindings[i].call(_aureliaBinding.sourceContext);\n    }\n  };\n\n  return BindingSignaler;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/binding-signaler.js\n// module id = 297\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n\nvar SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n\nvar HTMLSanitizer = exports.HTMLSanitizer = function () {\n  function HTMLSanitizer() {\n    \n  }\n\n  HTMLSanitizer.prototype.sanitize = function sanitize(input) {\n    return input.replace(SCRIPT_REGEX, '');\n  };\n\n  return HTMLSanitizer;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/html-sanitizer.js\n// module id = 298\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n\nvar IfCore = exports.IfCore = function () {\n  function IfCore(viewFactory, viewSlot) {\n    \n\n    this.viewFactory = viewFactory;\n    this.viewSlot = viewSlot;\n    this.view = null;\n    this.bindingContext = null;\n    this.overrideContext = null;\n\n    this.showing = false;\n  }\n\n  IfCore.prototype.bind = function bind(bindingContext, overrideContext) {\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext;\n  };\n\n  IfCore.prototype.unbind = function unbind() {\n    if (this.view === null) {\n      return;\n    }\n\n    this.view.unbind();\n\n    if (!this.viewFactory.isCaching) {\n      return;\n    }\n\n    if (this.showing) {\n      this.showing = false;\n      this.viewSlot.remove(this.view, true, true);\n    } else {\n      this.view.returnToCache();\n    }\n\n    this.view = null;\n  };\n\n  IfCore.prototype._show = function _show() {\n    if (this.showing) {\n      if (!this.view.isBound) {\n        this.view.bind(this.bindingContext, this.overrideContext);\n      }\n      return;\n    }\n\n    if (this.view === null) {\n      this.view = this.viewFactory.create();\n    }\n\n    if (!this.view.isBound) {\n      this.view.bind(this.bindingContext, this.overrideContext);\n    }\n\n    this.showing = true;\n    return this.viewSlot.add(this.view);\n  };\n\n  IfCore.prototype._hide = function _hide() {\n    var _this = this;\n\n    if (!this.showing) {\n      return;\n    }\n\n    this.showing = false;\n    var removed = this.viewSlot.remove(this.view);\n\n    if (removed instanceof Promise) {\n      return removed.then(function () {\n        return _this.view.unbind();\n      });\n    }\n\n    this.view.unbind();\n  };\n\n  return IfCore;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/if-core.js\n// module id = 299\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MapRepeatStrategy = undefined;\n\nvar _repeatUtilities = require('./repeat-utilities');\n\n\n\nvar MapRepeatStrategy = exports.MapRepeatStrategy = function () {\n  function MapRepeatStrategy() {\n    \n  }\n\n  MapRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {\n    return observerLocator.getMapObserver(items);\n  };\n\n  MapRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {\n    var _this = this;\n\n    var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n    if (removePromise instanceof Promise) {\n      removePromise.then(function () {\n        return _this._standardProcessItems(repeat, items);\n      });\n      return;\n    }\n    this._standardProcessItems(repeat, items);\n  };\n\n  MapRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, items) {\n    var index = 0;\n    var overrideContext = void 0;\n\n    items.forEach(function (value, key) {\n      overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, index, items.size, key);\n      repeat.addView(overrideContext.bindingContext, overrideContext);\n      ++index;\n    });\n  };\n\n  MapRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, map, records) {\n    var key = void 0;\n    var i = void 0;\n    var ii = void 0;\n    var overrideContext = void 0;\n    var removeIndex = void 0;\n    var addIndex = void 0;\n    var record = void 0;\n    var rmPromises = [];\n    var viewOrPromise = void 0;\n\n    for (i = 0, ii = records.length; i < ii; ++i) {\n      record = records[i];\n      key = record.key;\n      switch (record.type) {\n        case 'update':\n          removeIndex = this._getViewIndexByKey(repeat, key);\n          viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\n          if (viewOrPromise instanceof Promise) {\n            rmPromises.push(viewOrPromise);\n          }\n          overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, map.get(key), removeIndex, map.size, key);\n          repeat.insertView(removeIndex, overrideContext.bindingContext, overrideContext);\n          break;\n        case 'add':\n          addIndex = repeat.viewCount() <= map.size - 1 ? repeat.viewCount() : map.size - 1;\n          overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, map.get(key), addIndex, map.size, key);\n          repeat.insertView(map.size - 1, overrideContext.bindingContext, overrideContext);\n          break;\n        case 'delete':\n          if (record.oldValue === undefined) {\n            return;\n          }\n          removeIndex = this._getViewIndexByKey(repeat, key);\n          viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\n          if (viewOrPromise instanceof Promise) {\n            rmPromises.push(viewOrPromise);\n          }\n          break;\n        case 'clear':\n          repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n          break;\n        default:\n          continue;\n      }\n    }\n\n    if (rmPromises.length > 0) {\n      Promise.all(rmPromises).then(function () {\n        (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);\n      });\n    } else {\n      (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);\n    }\n  };\n\n  MapRepeatStrategy.prototype._getViewIndexByKey = function _getViewIndexByKey(repeat, key) {\n    var i = void 0;\n    var ii = void 0;\n    var child = void 0;\n\n    for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\n      child = repeat.view(i);\n      if (child.bindingContext[repeat.key] === key) {\n        return i;\n      }\n    }\n\n    return undefined;\n  };\n\n  return MapRepeatStrategy;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/map-repeat-strategy.js\n// module id = 300\n// module chunks = 1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n\nvar NullRepeatStrategy = exports.NullRepeatStrategy = function () {\n  function NullRepeatStrategy() {\n    \n  }\n\n  NullRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {\n    repeat.removeAllViews(true);\n  };\n\n  NullRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {};\n\n  return NullRepeatStrategy;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/null-repeat-strategy.js\n// module id = 301\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NumberRepeatStrategy = undefined;\n\nvar _repeatUtilities = require('./repeat-utilities');\n\n\n\nvar NumberRepeatStrategy = exports.NumberRepeatStrategy = function () {\n  function NumberRepeatStrategy() {\n    \n  }\n\n  NumberRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver() {\n    return null;\n  };\n\n  NumberRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, value) {\n    var _this = this;\n\n    var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n    if (removePromise instanceof Promise) {\n      removePromise.then(function () {\n        return _this._standardProcessItems(repeat, value);\n      });\n      return;\n    }\n    this._standardProcessItems(repeat, value);\n  };\n\n  NumberRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, value) {\n    var childrenLength = repeat.viewCount();\n    var i = void 0;\n    var ii = void 0;\n    var overrideContext = void 0;\n    var viewsToRemove = void 0;\n\n    value = Math.floor(value);\n    viewsToRemove = childrenLength - value;\n\n    if (viewsToRemove > 0) {\n      if (viewsToRemove > childrenLength) {\n        viewsToRemove = childrenLength;\n      }\n\n      for (i = 0, ii = viewsToRemove; i < ii; ++i) {\n        repeat.removeView(childrenLength - (i + 1), true, !repeat.viewsRequireLifecycle);\n      }\n\n      return;\n    }\n\n    for (i = childrenLength, ii = value; i < ii; ++i) {\n      overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, i, i, ii);\n      repeat.addView(overrideContext.bindingContext, overrideContext);\n    }\n\n    (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);\n  };\n\n  return NumberRepeatStrategy;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/number-repeat-strategy.js\n// module id = 302\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RepeatStrategyLocator = undefined;\n\nvar _nullRepeatStrategy = require('./null-repeat-strategy');\n\nvar _arrayRepeatStrategy = require('./array-repeat-strategy');\n\nvar _mapRepeatStrategy = require('./map-repeat-strategy');\n\nvar _setRepeatStrategy = require('./set-repeat-strategy');\n\nvar _numberRepeatStrategy = require('./number-repeat-strategy');\n\n\n\nvar RepeatStrategyLocator = exports.RepeatStrategyLocator = function () {\n  function RepeatStrategyLocator() {\n    \n\n    this.matchers = [];\n    this.strategies = [];\n\n    this.addStrategy(function (items) {\n      return items === null || items === undefined;\n    }, new _nullRepeatStrategy.NullRepeatStrategy());\n    this.addStrategy(function (items) {\n      return items instanceof Array;\n    }, new _arrayRepeatStrategy.ArrayRepeatStrategy());\n    this.addStrategy(function (items) {\n      return items instanceof Map;\n    }, new _mapRepeatStrategy.MapRepeatStrategy());\n    this.addStrategy(function (items) {\n      return items instanceof Set;\n    }, new _setRepeatStrategy.SetRepeatStrategy());\n    this.addStrategy(function (items) {\n      return typeof items === 'number';\n    }, new _numberRepeatStrategy.NumberRepeatStrategy());\n  }\n\n  RepeatStrategyLocator.prototype.addStrategy = function addStrategy(matcher, strategy) {\n    this.matchers.push(matcher);\n    this.strategies.push(strategy);\n  };\n\n  RepeatStrategyLocator.prototype.getStrategy = function getStrategy(items) {\n    var matchers = this.matchers;\n\n    for (var i = 0, ii = matchers.length; i < ii; ++i) {\n      if (matchers[i](items)) {\n        return this.strategies[i];\n      }\n    }\n\n    return null;\n  };\n\n  return RepeatStrategyLocator;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/repeat-strategy-locator.js\n// module id = 303\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetRepeatStrategy = undefined;\n\nvar _repeatUtilities = require('./repeat-utilities');\n\n\n\nvar SetRepeatStrategy = exports.SetRepeatStrategy = function () {\n  function SetRepeatStrategy() {\n    \n  }\n\n  SetRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {\n    return observerLocator.getSetObserver(items);\n  };\n\n  SetRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {\n    var _this = this;\n\n    var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n    if (removePromise instanceof Promise) {\n      removePromise.then(function () {\n        return _this._standardProcessItems(repeat, items);\n      });\n      return;\n    }\n    this._standardProcessItems(repeat, items);\n  };\n\n  SetRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, items) {\n    var index = 0;\n    var overrideContext = void 0;\n\n    items.forEach(function (value) {\n      overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, index, items.size);\n      repeat.addView(overrideContext.bindingContext, overrideContext);\n      ++index;\n    });\n  };\n\n  SetRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, set, records) {\n    var value = void 0;\n    var i = void 0;\n    var ii = void 0;\n    var overrideContext = void 0;\n    var removeIndex = void 0;\n    var record = void 0;\n    var rmPromises = [];\n    var viewOrPromise = void 0;\n\n    for (i = 0, ii = records.length; i < ii; ++i) {\n      record = records[i];\n      value = record.value;\n      switch (record.type) {\n        case 'add':\n          var size = Math.max(set.size - 1, 0);\n          overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, size, set.size);\n          repeat.insertView(size, overrideContext.bindingContext, overrideContext);\n          break;\n        case 'delete':\n          removeIndex = this._getViewIndexByValue(repeat, value);\n          viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\n          if (viewOrPromise instanceof Promise) {\n            rmPromises.push(viewOrPromise);\n          }\n          break;\n        case 'clear':\n          repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\n          break;\n        default:\n          continue;\n      }\n    }\n\n    if (rmPromises.length > 0) {\n      Promise.all(rmPromises).then(function () {\n        (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);\n      });\n    } else {\n      (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);\n    }\n  };\n\n  SetRepeatStrategy.prototype._getViewIndexByValue = function _getViewIndexByValue(repeat, value) {\n    var i = void 0;\n    var ii = void 0;\n    var child = void 0;\n\n    for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\n      child = repeat.view(i);\n      if (child.bindingContext[repeat.local] === value) {\n        return i;\n      }\n    }\n\n    return undefined;\n  };\n\n  return SetRepeatStrategy;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/set-repeat-strategy.js\n// module id = 304\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouterViewLocator = exports.RouterView = undefined;\n\nvar _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaRouter = require('aurelia-router');\n\nvar _aureliaMetadata = require('aurelia-metadata');\n\nvar _aureliaPal = require('aurelia-pal');\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\n\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar RouterView = exports.RouterView = (_dec = (0, _aureliaTemplating.customElement)('router-view'), _dec(_class = (0, _aureliaTemplating.noView)(_class = (_class2 = function () {\n  RouterView.inject = function inject() {\n    return [_aureliaPal.DOM.Element, _aureliaDependencyInjection.Container, _aureliaTemplating.ViewSlot, _aureliaRouter.Router, _aureliaTemplating.ViewLocator, _aureliaTemplating.CompositionTransaction, _aureliaTemplating.CompositionEngine];\n  };\n\n  function RouterView(element, container, viewSlot, router, viewLocator, compositionTransaction, compositionEngine) {\n    \n\n    _initDefineProp(this, 'swapOrder', _descriptor, this);\n\n    _initDefineProp(this, 'layoutView', _descriptor2, this);\n\n    _initDefineProp(this, 'layoutViewModel', _descriptor3, this);\n\n    _initDefineProp(this, 'layoutModel', _descriptor4, this);\n\n    this.element = element;\n    this.container = container;\n    this.viewSlot = viewSlot;\n    this.router = router;\n    this.viewLocator = viewLocator;\n    this.compositionTransaction = compositionTransaction;\n    this.compositionEngine = compositionEngine;\n    this.router.registerViewPort(this, this.element.getAttribute('name'));\n\n    if (!('initialComposition' in compositionTransaction)) {\n      compositionTransaction.initialComposition = true;\n      this.compositionTransactionNotifier = compositionTransaction.enlist();\n    }\n  }\n\n  RouterView.prototype.created = function created(owningView) {\n    this.owningView = owningView;\n  };\n\n  RouterView.prototype.bind = function bind(bindingContext, overrideContext) {\n    this.container.viewModel = bindingContext;\n    this.overrideContext = overrideContext;\n  };\n\n  RouterView.prototype.process = function process(viewPortInstruction, waitToSwap) {\n    var _this = this;\n\n    var component = viewPortInstruction.component;\n    var childContainer = component.childContainer;\n    var viewModel = component.viewModel;\n    var viewModelResource = component.viewModelResource;\n    var metadata = viewModelResource.metadata;\n    var config = component.router.currentInstruction.config;\n    var viewPort = config.viewPorts ? config.viewPorts[viewPortInstruction.name] || {} : {};\n\n    childContainer.get(RouterViewLocator)._notify(this);\n\n    var layoutInstruction = {\n      viewModel: viewPort.layoutViewModel || config.layoutViewModel || this.layoutViewModel,\n      view: viewPort.layoutView || config.layoutView || this.layoutView,\n      model: viewPort.layoutModel || config.layoutModel || this.layoutModel,\n      router: viewPortInstruction.component.router,\n      childContainer: childContainer,\n      viewSlot: this.viewSlot\n    };\n\n    var viewStrategy = this.viewLocator.getViewStrategy(component.view || viewModel);\n    if (viewStrategy && component.view) {\n      viewStrategy.makeRelativeTo(_aureliaMetadata.Origin.get(component.router.container.viewModel.constructor).moduleId);\n    }\n\n    return metadata.load(childContainer, viewModelResource.value, null, viewStrategy, true).then(function (viewFactory) {\n      if (!_this.compositionTransactionNotifier) {\n        _this.compositionTransactionOwnershipToken = _this.compositionTransaction.tryCapture();\n      }\n\n      if (layoutInstruction.viewModel || layoutInstruction.view) {\n        viewPortInstruction.layoutInstruction = layoutInstruction;\n      }\n\n      viewPortInstruction.controller = metadata.create(childContainer, _aureliaTemplating.BehaviorInstruction.dynamic(_this.element, viewModel, viewFactory));\n\n      if (waitToSwap) {\n        return null;\n      }\n\n      _this.swap(viewPortInstruction);\n    });\n  };\n\n  RouterView.prototype.swap = function swap(viewPortInstruction) {\n    var _this2 = this;\n\n    var layoutInstruction = viewPortInstruction.layoutInstruction;\n    var previousView = this.view;\n\n    var work = function work() {\n      var swapStrategy = _aureliaTemplating.SwapStrategies[_this2.swapOrder] || _aureliaTemplating.SwapStrategies.after;\n      var viewSlot = _this2.viewSlot;\n\n      swapStrategy(viewSlot, previousView, function () {\n        return Promise.resolve(viewSlot.add(_this2.view));\n      }).then(function () {\n        _this2._notify();\n      });\n    };\n\n    var ready = function ready(owningView) {\n      viewPortInstruction.controller.automate(_this2.overrideContext, owningView);\n      if (_this2.compositionTransactionOwnershipToken) {\n        return _this2.compositionTransactionOwnershipToken.waitForCompositionComplete().then(function () {\n          _this2.compositionTransactionOwnershipToken = null;\n          return work();\n        });\n      }\n\n      return work();\n    };\n\n    if (layoutInstruction) {\n      if (!layoutInstruction.viewModel) {\n        layoutInstruction.viewModel = {};\n      }\n\n      return this.compositionEngine.createController(layoutInstruction).then(function (controller) {\n        _aureliaTemplating.ShadowDOM.distributeView(viewPortInstruction.controller.view, controller.slots || controller.view.slots);\n        controller.automate((0, _aureliaBinding.createOverrideContext)(layoutInstruction.viewModel), _this2.owningView);\n        controller.view.children.push(viewPortInstruction.controller.view);\n        return controller.view || controller;\n      }).then(function (newView) {\n        _this2.view = newView;\n        return ready(newView);\n      });\n    }\n\n    this.view = viewPortInstruction.controller.view;\n\n    return ready(this.owningView);\n  };\n\n  RouterView.prototype._notify = function _notify() {\n    if (this.compositionTransactionNotifier) {\n      this.compositionTransactionNotifier.done();\n      this.compositionTransactionNotifier = null;\n    }\n  };\n\n  return RouterView;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'swapOrder', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'layoutView', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'layoutViewModel', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'layoutModel', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n})), _class2)) || _class) || _class);\n\nvar RouterViewLocator = exports.RouterViewLocator = function () {\n  function RouterViewLocator() {\n    var _this3 = this;\n\n    \n\n    this.promise = new Promise(function (resolve) {\n      return _this3.resolve = resolve;\n    });\n  }\n\n  RouterViewLocator.prototype.findNearest = function findNearest() {\n    return this.promise;\n  };\n\n  RouterViewLocator.prototype._notify = function _notify(routerView) {\n    this.resolve(routerView);\n  };\n\n  return RouterViewLocator;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-router/dist/commonjs/router-view.js\n// module id = 305\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogger = getLogger;\nexports.addAppender = addAppender;\nexports.removeAppender = removeAppender;\nexports.getAppenders = getAppenders;\nexports.clearAppenders = clearAppenders;\nexports.addCustomLevel = addCustomLevel;\nexports.removeCustomLevel = removeCustomLevel;\nexports.setLevel = setLevel;\nexports.getLevel = getLevel;\n\n\n\nvar logLevel = exports.logLevel = {\n  none: 0,\n  error: 10,\n  warn: 20,\n  info: 30,\n  debug: 40\n};\n\nvar loggers = {};\nvar appenders = [];\nvar globalDefaultLevel = logLevel.none;\n\nvar standardLevels = ['none', 'error', 'warn', 'info', 'debug'];\nfunction isStandardLevel(level) {\n  return standardLevels.filter(function (l) {\n    return l === level;\n  }).length > 0;\n}\n\nfunction appendArgs() {\n  return [this].concat(Array.prototype.slice.call(arguments));\n}\n\nfunction logFactory(level) {\n  var threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    var args = appendArgs.apply(this, arguments);\n    var i = appenders.length;\n    while (i--) {\n      var _appenders$i;\n\n      (_appenders$i = appenders[i])[level].apply(_appenders$i, args);\n    }\n  };\n}\n\nfunction logFactoryCustom(level) {\n  var threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    var args = appendArgs.apply(this, arguments);\n    var i = appenders.length;\n    while (i--) {\n      var appender = appenders[i];\n      if (appender[level] !== undefined) {\n        appender[level].apply(appender, args);\n      }\n    }\n  };\n}\n\nfunction connectLoggers() {\n  var proto = Logger.prototype;\n  for (var _level in logLevel) {\n    if (isStandardLevel(_level)) {\n      if (_level !== 'none') {\n        proto[_level] = logFactory(_level);\n      }\n    } else {\n      proto[_level] = logFactoryCustom(_level);\n    }\n  }\n}\n\nfunction disconnectLoggers() {\n  var proto = Logger.prototype;\n  for (var _level2 in logLevel) {\n    if (_level2 !== 'none') {\n      proto[_level2] = function () {};\n    }\n  }\n}\n\nfunction getLogger(id) {\n  return loggers[id] || new Logger(id);\n}\n\nfunction addAppender(appender) {\n  if (appenders.push(appender) === 1) {\n    connectLoggers();\n  }\n}\n\nfunction removeAppender(appender) {\n  appenders = appenders.filter(function (a) {\n    return a !== appender;\n  });\n}\n\nfunction getAppenders() {\n  return [].concat(appenders);\n}\n\nfunction clearAppenders() {\n  appenders = [];\n  disconnectLoggers();\n}\n\nfunction addCustomLevel(name, value) {\n  if (logLevel[name] !== undefined) {\n    throw Error('Log level \"' + name + '\" already exists.');\n  }\n\n  if (isNaN(value)) {\n    throw Error('Value must be a number.');\n  }\n\n  logLevel[name] = value;\n\n  if (appenders.length > 0) {\n    connectLoggers();\n  } else {\n    Logger.prototype[name] = function () {};\n  }\n}\n\nfunction removeCustomLevel(name) {\n  if (logLevel[name] === undefined) {\n    return;\n  }\n\n  if (isStandardLevel(name)) {\n    throw Error('Built-in log level \"' + name + '\" cannot be removed.');\n  }\n\n  delete logLevel[name];\n  delete Logger.prototype[name];\n}\n\nfunction setLevel(level) {\n  globalDefaultLevel = level;\n  for (var key in loggers) {\n    loggers[key].setLevel(level);\n  }\n}\n\nfunction getLevel() {\n  return globalDefaultLevel;\n}\n\nvar Logger = exports.Logger = function () {\n  function Logger(id) {\n    \n\n    var cached = loggers[id];\n    if (cached) {\n      return cached;\n    }\n\n    loggers[id] = this;\n    this.id = id;\n    this.level = globalDefaultLevel;\n  }\n\n  Logger.prototype.debug = function debug(message) {};\n\n  Logger.prototype.info = function info(message) {};\n\n  Logger.prototype.warn = function warn(message) {};\n\n  Logger.prototype.error = function error(message) {};\n\n  Logger.prototype.setLevel = function setLevel(level) {\n    this.level = level;\n  };\n\n  Logger.prototype.isDebugEnabled = function isDebugEnabled() {\n    return this.level === logLevel.debug;\n  };\n\n  return Logger;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-logging/dist/commonjs/aurelia-logging.js\n// module id = 58\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._createCSSResource = _createCSSResource;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaLoader = require('aurelia-loader');\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaPath = require('aurelia-path');\n\nvar _aureliaPal = require('aurelia-pal');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar cssUrlMatcher = /url\\((?!['\"]data)([^)]+)\\)/gi;\n\nfunction fixupCSSUrls(address, css) {\n  if (typeof css !== 'string') {\n    throw new Error('Failed loading required CSS file: ' + address);\n  }\n  return css.replace(cssUrlMatcher, function (match, p1) {\n    var quote = p1.charAt(0);\n    if (quote === '\\'' || quote === '\"') {\n      p1 = p1.substr(1, p1.length - 2);\n    }\n    return 'url(\\'' + (0, _aureliaPath.relativeToFile)(p1, address) + '\\')';\n  });\n}\n\nvar CSSResource = function () {\n  function CSSResource(address) {\n    \n\n    this.address = address;\n    this._scoped = null;\n    this._global = false;\n    this._alreadyGloballyInjected = false;\n  }\n\n  CSSResource.prototype.initialize = function initialize(container, target) {\n    this._scoped = new target(this);\n  };\n\n  CSSResource.prototype.register = function register(registry, name) {\n    if (name === 'scoped') {\n      registry.registerViewEngineHooks(this._scoped);\n    } else {\n      this._global = true;\n    }\n  };\n\n  CSSResource.prototype.load = function load(container) {\n    var _this = this;\n\n    return container.get(_aureliaLoader.Loader).loadText(this.address).catch(function (err) {\n      return null;\n    }).then(function (text) {\n      text = fixupCSSUrls(_this.address, text);\n      _this._scoped.css = text;\n      if (_this._global) {\n        _this._alreadyGloballyInjected = true;\n        _aureliaPal.DOM.injectStyles(text);\n      }\n    });\n  };\n\n  return CSSResource;\n}();\n\nvar CSSViewEngineHooks = function () {\n  function CSSViewEngineHooks(owner) {\n    \n\n    this.owner = owner;\n    this.css = null;\n  }\n\n  CSSViewEngineHooks.prototype.beforeCompile = function beforeCompile(content, resources, instruction) {\n    if (instruction.targetShadowDOM) {\n      _aureliaPal.DOM.injectStyles(this.css, content, true);\n    } else if (_aureliaPal.FEATURE.scopedCSS) {\n      var styleNode = _aureliaPal.DOM.injectStyles(this.css, content, true);\n      styleNode.setAttribute('scoped', 'scoped');\n    } else if (this._global && !this.owner._alreadyGloballyInjected) {\n      _aureliaPal.DOM.injectStyles(this.css);\n      this.owner._alreadyGloballyInjected = true;\n    }\n  };\n\n  return CSSViewEngineHooks;\n}();\n\nfunction _createCSSResource(address) {\n  var _dec, _class;\n\n  var ViewCSS = (_dec = (0, _aureliaTemplating.resource)(new CSSResource(address)), _dec(_class = function (_CSSViewEngineHooks) {\n    _inherits(ViewCSS, _CSSViewEngineHooks);\n\n    function ViewCSS() {\n      \n\n      return _possibleConstructorReturn(this, _CSSViewEngineHooks.apply(this, arguments));\n    }\n\n    return ViewCSS;\n  }(CSSViewEngineHooks)) || _class);\n\n  return ViewCSS;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/css-resource.js\n// module id = 601\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._createDynamicElement = _createDynamicElement;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\n\n\nfunction _createDynamicElement(name, viewUrl, bindableNames) {\n  var _dec, _dec2, _class;\n\n  var DynamicElement = (_dec = (0, _aureliaTemplating.customElement)(name), _dec2 = (0, _aureliaTemplating.useView)(viewUrl), _dec(_class = _dec2(_class = function () {\n    function DynamicElement() {\n      \n    }\n\n    DynamicElement.prototype.bind = function bind(bindingContext) {\n      this.$parent = bindingContext;\n    };\n\n    return DynamicElement;\n  }()) || _class) || _class);\n\n  for (var i = 0, ii = bindableNames.length; i < ii; ++i) {\n    (0, _aureliaTemplating.bindable)(bindableNames[i])(DynamicElement);\n  }\n  return DynamicElement;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/dynamic-element.js\n// module id = 602\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getElementName = getElementName;\nexports.configure = configure;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _dynamicElement = require('./dynamic-element');\n\nfunction getElementName(address) {\n  return (/([^\\/^\\?]+)\\.html/i.exec(address)[1].toLowerCase()\n  );\n}\n\nfunction configure(config) {\n  var viewEngine = config.container.get(_aureliaTemplating.ViewEngine);\n  var loader = config.aurelia.loader;\n\n  viewEngine.addResourcePlugin('.html', {\n    'fetch': function fetch(address) {\n      return loader.loadTemplate(address).then(function (registryEntry) {\n        var _ref;\n\n        var bindable = registryEntry.template.getAttribute('bindable');\n        var elementName = getElementName(address);\n\n        if (bindable) {\n          bindable = bindable.split(',').map(function (x) {\n            return x.trim();\n          });\n          registryEntry.template.removeAttribute('bindable');\n        } else {\n          bindable = [];\n        }\n\n        return _ref = {}, _ref[elementName] = (0, _dynamicElement._createDynamicElement)(elementName, address, bindable), _ref;\n      });\n    }\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/html-resource-plugin.js\n// module id = 603\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouteHref = undefined;\n\nvar _dec, _dec2, _dec3, _dec4, _class;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaRouter = require('aurelia-router');\n\nvar _aureliaPal = require('aurelia-pal');\n\nvar _aureliaLogging = require('aurelia-logging');\n\nvar LogManager = _interopRequireWildcard(_aureliaLogging);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\n\nvar logger = LogManager.getLogger('route-href');\n\nvar RouteHref = exports.RouteHref = (_dec = (0, _aureliaTemplating.customAttribute)('route-href'), _dec2 = (0, _aureliaTemplating.bindable)({ name: 'route', changeHandler: 'processChange', primaryProperty: true }), _dec3 = (0, _aureliaTemplating.bindable)({ name: 'params', changeHandler: 'processChange' }), _dec4 = (0, _aureliaTemplating.bindable)({ name: 'attribute', defaultValue: 'href' }), _dec(_class = _dec2(_class = _dec3(_class = _dec4(_class = function () {\n  RouteHref.inject = function inject() {\n    return [_aureliaRouter.Router, _aureliaPal.DOM.Element];\n  };\n\n  function RouteHref(router, element) {\n    \n\n    this.router = router;\n    this.element = element;\n  }\n\n  RouteHref.prototype.bind = function bind() {\n    this.isActive = true;\n    this.processChange();\n  };\n\n  RouteHref.prototype.unbind = function unbind() {\n    this.isActive = false;\n  };\n\n  RouteHref.prototype.attributeChanged = function attributeChanged(value, previous) {\n    if (previous) {\n      this.element.removeAttribute(previous);\n    }\n\n    this.processChange();\n  };\n\n  RouteHref.prototype.processChange = function processChange() {\n    var _this = this;\n\n    return this.router.ensureConfigured().then(function () {\n      if (!_this.isActive) {\n        return null;\n      }\n\n      var href = _this.router.generate(_this.route, _this.params);\n\n      if (_this.element.au.controller) {\n        _this.element.au.controller.viewModel[_this.attribute] = href;\n      } else {\n        _this.element.setAttribute(_this.attribute, href);\n      }\n\n      return null;\n    }).catch(function (reason) {\n      logger.error(reason);\n    });\n  };\n\n  return RouteHref;\n}()) || _class) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-router/dist/commonjs/route-href.js\n// module id = 604\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TemplatingRouteLoader = undefined;\n\nvar _dec, _class, _dec2, _class2;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaRouter = require('aurelia-router');\n\nvar _aureliaPath = require('aurelia-path');\n\nvar _aureliaMetadata = require('aurelia-metadata');\n\nvar _routerView = require('./router-view');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar EmptyClass = (_dec = (0, _aureliaTemplating.inlineView)('<template></template>'), _dec(_class = function EmptyClass() {\n  \n}) || _class);\nvar TemplatingRouteLoader = exports.TemplatingRouteLoader = (_dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.CompositionEngine), _dec2(_class2 = function (_RouteLoader) {\n  _inherits(TemplatingRouteLoader, _RouteLoader);\n\n  function TemplatingRouteLoader(compositionEngine) {\n    \n\n    var _this = _possibleConstructorReturn(this, _RouteLoader.call(this));\n\n    _this.compositionEngine = compositionEngine;\n    return _this;\n  }\n\n  TemplatingRouteLoader.prototype.loadRoute = function loadRoute(router, config) {\n    var childContainer = router.container.createChild();\n\n    var viewModel = void 0;\n    if (config.moduleId === null) {\n      viewModel = EmptyClass;\n    } else if (/\\.html/i.test(config.moduleId)) {\n      viewModel = createDynamicClass(config.moduleId);\n    } else {\n      viewModel = (0, _aureliaPath.relativeToFile)(config.moduleId, _aureliaMetadata.Origin.get(router.container.viewModel.constructor).moduleId);\n    }\n\n    var instruction = {\n      viewModel: viewModel,\n      childContainer: childContainer,\n      view: config.view || config.viewStrategy,\n      router: router\n    };\n\n    childContainer.registerSingleton(_routerView.RouterViewLocator);\n\n    childContainer.getChildRouter = function () {\n      var childRouter = void 0;\n\n      childContainer.registerHandler(_aureliaRouter.Router, function (c) {\n        return childRouter || (childRouter = router.createChild(childContainer));\n      });\n\n      return childContainer.get(_aureliaRouter.Router);\n    };\n\n    return this.compositionEngine.ensureViewModel(instruction);\n  };\n\n  return TemplatingRouteLoader;\n}(_aureliaRouter.RouteLoader)) || _class2);\n\n\nfunction createDynamicClass(moduleId) {\n  var _dec3, _dec4, _class3;\n\n  var name = /([^\\/^\\?]+)\\.html/i.exec(moduleId)[1];\n\n  var DynamicClass = (_dec3 = (0, _aureliaTemplating.customElement)(name), _dec4 = (0, _aureliaTemplating.useView)(moduleId), _dec3(_class3 = _dec4(_class3 = function () {\n    function DynamicClass() {\n      \n    }\n\n    DynamicClass.prototype.bind = function bind(bindingContext) {\n      this.$parent = bindingContext;\n    };\n\n    return DynamicClass;\n  }()) || _class3) || _class3);\n\n\n  return DynamicClass;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-router/dist/commonjs/route-loader.js\n// module id = 605\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = exports.InvocationHandler = exports._emptyParameters = exports.SingletonRegistration = exports.TransientRegistration = exports.FactoryInvoker = exports.NewInstance = exports.Factory = exports.Parent = exports.Optional = exports.All = exports.Lazy = exports.StrategyResolver = exports.resolver = undefined;\n\nvar _dec, _class, _dec2, _class2, _dec3, _class3, _dec4, _class4, _dec5, _class5, _dec6, _class6, _dec7, _class7, _classInvokers;\n\nexports.getDecoratorDependencies = getDecoratorDependencies;\nexports.lazy = lazy;\nexports.all = all;\nexports.optional = optional;\nexports.parent = parent;\nexports.factory = factory;\nexports.newInstance = newInstance;\nexports.invoker = invoker;\nexports.invokeAsFactory = invokeAsFactory;\nexports.registration = registration;\nexports.transient = transient;\nexports.singleton = singleton;\nexports.autoinject = autoinject;\nexports.inject = inject;\n\nvar _aureliaMetadata = require('aurelia-metadata');\n\nvar _aureliaPal = require('aurelia-pal');\n\n\n\nvar resolver = exports.resolver = _aureliaMetadata.protocol.create('aurelia:resolver', function (target) {\n  if (!(typeof target.get === 'function')) {\n    return 'Resolvers must implement: get(container: Container, key: any): any';\n  }\n\n  return true;\n});\n\nvar StrategyResolver = exports.StrategyResolver = (_dec = resolver(), _dec(_class = function () {\n  function StrategyResolver(strategy, state) {\n    \n\n    this.strategy = strategy;\n    this.state = state;\n  }\n\n  StrategyResolver.prototype.get = function get(container, key) {\n    switch (this.strategy) {\n      case 0:\n        return this.state;\n      case 1:\n        var _singleton = container.invoke(this.state);\n        this.state = _singleton;\n        this.strategy = 0;\n        return _singleton;\n      case 2:\n        return container.invoke(this.state);\n      case 3:\n        return this.state(container, key, this);\n      case 4:\n        return this.state[0].get(container, key);\n      case 5:\n        return container.get(this.state);\n      default:\n        throw new Error('Invalid strategy: ' + this.strategy);\n    }\n  };\n\n  return StrategyResolver;\n}()) || _class);\nvar Lazy = exports.Lazy = (_dec2 = resolver(), _dec2(_class2 = function () {\n  function Lazy(key) {\n    \n\n    this._key = key;\n  }\n\n  Lazy.prototype.get = function get(container) {\n    var _this = this;\n\n    return function () {\n      return container.get(_this._key);\n    };\n  };\n\n  Lazy.of = function of(key) {\n    return new Lazy(key);\n  };\n\n  return Lazy;\n}()) || _class2);\nvar All = exports.All = (_dec3 = resolver(), _dec3(_class3 = function () {\n  function All(key) {\n    \n\n    this._key = key;\n  }\n\n  All.prototype.get = function get(container) {\n    return container.getAll(this._key);\n  };\n\n  All.of = function of(key) {\n    return new All(key);\n  };\n\n  return All;\n}()) || _class3);\nvar Optional = exports.Optional = (_dec4 = resolver(), _dec4(_class4 = function () {\n  function Optional(key) {\n    var checkParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    \n\n    this._key = key;\n    this._checkParent = checkParent;\n  }\n\n  Optional.prototype.get = function get(container) {\n    if (container.hasResolver(this._key, this._checkParent)) {\n      return container.get(this._key);\n    }\n\n    return null;\n  };\n\n  Optional.of = function of(key) {\n    var checkParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    return new Optional(key, checkParent);\n  };\n\n  return Optional;\n}()) || _class4);\nvar Parent = exports.Parent = (_dec5 = resolver(), _dec5(_class5 = function () {\n  function Parent(key) {\n    \n\n    this._key = key;\n  }\n\n  Parent.prototype.get = function get(container) {\n    return container.parent ? container.parent.get(this._key) : null;\n  };\n\n  Parent.of = function of(key) {\n    return new Parent(key);\n  };\n\n  return Parent;\n}()) || _class5);\nvar Factory = exports.Factory = (_dec6 = resolver(), _dec6(_class6 = function () {\n  function Factory(key) {\n    \n\n    this._key = key;\n  }\n\n  Factory.prototype.get = function get(container) {\n    var fn = this._key;\n    var resolver = container.getResolver(fn);\n    if (resolver && resolver.strategy === 3) {\n      fn = resolver.state;\n    }\n\n    return function () {\n      for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n        rest[_key] = arguments[_key];\n      }\n\n      return container.invoke(fn, rest);\n    };\n  };\n\n  Factory.of = function of(key) {\n    return new Factory(key);\n  };\n\n  return Factory;\n}()) || _class6);\nvar NewInstance = exports.NewInstance = (_dec7 = resolver(), _dec7(_class7 = function () {\n  function NewInstance(key) {\n    \n\n    this.key = key;\n    this.asKey = key;\n\n    for (var _len2 = arguments.length, dynamicDependencies = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      dynamicDependencies[_key2 - 1] = arguments[_key2];\n    }\n\n    this.dynamicDependencies = dynamicDependencies;\n  }\n\n  NewInstance.prototype.get = function get(container) {\n    var dynamicDependencies = this.dynamicDependencies.length > 0 ? this.dynamicDependencies.map(function (dependency) {\n      return dependency['protocol:aurelia:resolver'] ? dependency.get(container) : container.get(dependency);\n    }) : undefined;\n\n    var fn = this.key;\n    var resolver = container.getResolver(fn);\n    if (resolver && resolver.strategy === 3) {\n      fn = resolver.state;\n    }\n\n    var instance = container.invoke(fn, dynamicDependencies);\n    container.registerInstance(this.asKey, instance);\n    return instance;\n  };\n\n  NewInstance.prototype.as = function as(key) {\n    this.asKey = key;\n    return this;\n  };\n\n  NewInstance.of = function of(key) {\n    for (var _len3 = arguments.length, dynamicDependencies = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      dynamicDependencies[_key3 - 1] = arguments[_key3];\n    }\n\n    return new (Function.prototype.bind.apply(NewInstance, [null].concat([key], dynamicDependencies)))();\n  };\n\n  return NewInstance;\n}()) || _class7);\nfunction getDecoratorDependencies(target) {\n  autoinject(target);\n\n  return target.inject;\n}\n\nfunction lazy(keyValue) {\n  return function (target, key, index) {\n    var inject = getDecoratorDependencies(target);\n    inject[index] = Lazy.of(keyValue);\n  };\n}\n\nfunction all(keyValue) {\n  return function (target, key, index) {\n    var inject = getDecoratorDependencies(target);\n    inject[index] = All.of(keyValue);\n  };\n}\n\nfunction optional() {\n  var checkParentOrTarget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var deco = function deco(checkParent) {\n    return function (target, key, index) {\n      var inject = getDecoratorDependencies(target);\n      inject[index] = Optional.of(inject[index], checkParent);\n    };\n  };\n  if (typeof checkParentOrTarget === 'boolean') {\n    return deco(checkParentOrTarget);\n  }\n  return deco(true);\n}\n\nfunction parent(target, key, index) {\n  var inject = getDecoratorDependencies(target);\n  inject[index] = Parent.of(inject[index]);\n}\n\nfunction factory(keyValue) {\n  return function (target, key, index) {\n    var inject = getDecoratorDependencies(target);\n    inject[index] = Factory.of(keyValue);\n  };\n}\n\nfunction newInstance(asKeyOrTarget) {\n  for (var _len4 = arguments.length, dynamicDependencies = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    dynamicDependencies[_key4 - 1] = arguments[_key4];\n  }\n\n  var deco = function deco(asKey) {\n    return function (target, key, index) {\n      var inject = getDecoratorDependencies(target);\n      inject[index] = NewInstance.of.apply(NewInstance, [inject[index]].concat(dynamicDependencies));\n      if (!!asKey) {\n        inject[index].as(asKey);\n      }\n    };\n  };\n  if (arguments.length >= 1) {\n    return deco(asKeyOrTarget);\n  }\n  return deco();\n}\n\nfunction invoker(value) {\n  return function (target) {\n    _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.invoker, value, target);\n  };\n}\n\nfunction invokeAsFactory(potentialTarget) {\n  var deco = function deco(target) {\n    _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.invoker, FactoryInvoker.instance, target);\n  };\n\n  return potentialTarget ? deco(potentialTarget) : deco;\n}\n\nvar FactoryInvoker = exports.FactoryInvoker = function () {\n  function FactoryInvoker() {\n    \n  }\n\n  FactoryInvoker.prototype.invoke = function invoke(container, fn, dependencies) {\n    var i = dependencies.length;\n    var args = new Array(i);\n\n    while (i--) {\n      args[i] = container.get(dependencies[i]);\n    }\n\n    return fn.apply(undefined, args);\n  };\n\n  FactoryInvoker.prototype.invokeWithDynamicDependencies = function invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {\n    var i = staticDependencies.length;\n    var args = new Array(i);\n\n    while (i--) {\n      args[i] = container.get(staticDependencies[i]);\n    }\n\n    if (dynamicDependencies !== undefined) {\n      args = args.concat(dynamicDependencies);\n    }\n\n    return fn.apply(undefined, args);\n  };\n\n  return FactoryInvoker;\n}();\n\nFactoryInvoker.instance = new FactoryInvoker();\n\nfunction registration(value) {\n  return function (target) {\n    _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.registration, value, target);\n  };\n}\n\nfunction transient(key) {\n  return registration(new TransientRegistration(key));\n}\n\nfunction singleton(keyOrRegisterInChild) {\n  var registerInChild = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  return registration(new SingletonRegistration(keyOrRegisterInChild, registerInChild));\n}\n\nvar TransientRegistration = exports.TransientRegistration = function () {\n  function TransientRegistration(key) {\n    \n\n    this._key = key;\n  }\n\n  TransientRegistration.prototype.registerResolver = function registerResolver(container, key, fn) {\n    var existingResolver = container.getResolver(this._key || key);\n    return existingResolver === undefined ? container.registerTransient(this._key || key, fn) : existingResolver;\n  };\n\n  return TransientRegistration;\n}();\n\nvar SingletonRegistration = exports.SingletonRegistration = function () {\n  function SingletonRegistration(keyOrRegisterInChild) {\n    var registerInChild = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    \n\n    if (typeof keyOrRegisterInChild === 'boolean') {\n      this._registerInChild = keyOrRegisterInChild;\n    } else {\n      this._key = keyOrRegisterInChild;\n      this._registerInChild = registerInChild;\n    }\n  }\n\n  SingletonRegistration.prototype.registerResolver = function registerResolver(container, key, fn) {\n    var targetContainer = this._registerInChild ? container : container.root;\n    var existingResolver = targetContainer.getResolver(this._key || key);\n    return existingResolver === undefined ? targetContainer.registerSingleton(this._key || key, fn) : existingResolver;\n  };\n\n  return SingletonRegistration;\n}();\n\nfunction validateKey(key) {\n  if (key === null || key === undefined) {\n    throw new Error('key/value cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\n  }\n}\nvar _emptyParameters = exports._emptyParameters = Object.freeze([]);\n\n_aureliaMetadata.metadata.registration = 'aurelia:registration';\n_aureliaMetadata.metadata.invoker = 'aurelia:invoker';\n\nvar resolverDecorates = resolver.decorates;\n\nvar InvocationHandler = exports.InvocationHandler = function () {\n  function InvocationHandler(fn, invoker, dependencies) {\n    \n\n    this.fn = fn;\n    this.invoker = invoker;\n    this.dependencies = dependencies;\n  }\n\n  InvocationHandler.prototype.invoke = function invoke(container, dynamicDependencies) {\n    return dynamicDependencies !== undefined ? this.invoker.invokeWithDynamicDependencies(container, this.fn, this.dependencies, dynamicDependencies) : this.invoker.invoke(container, this.fn, this.dependencies);\n  };\n\n  return InvocationHandler;\n}();\n\nfunction invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {\n  var i = staticDependencies.length;\n  var args = new Array(i);\n  var lookup = void 0;\n\n  while (i--) {\n    lookup = staticDependencies[i];\n\n    if (lookup === null || lookup === undefined) {\n      throw new Error('Constructor Parameter with index ' + i + ' cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\n    } else {\n      args[i] = container.get(lookup);\n    }\n  }\n\n  if (dynamicDependencies !== undefined) {\n    args = args.concat(dynamicDependencies);\n  }\n\n  return Reflect.construct(fn, args);\n}\n\nvar classInvokers = (_classInvokers = {}, _classInvokers[0] = {\n  invoke: function invoke(container, Type) {\n    return new Type();\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers[1] = {\n  invoke: function invoke(container, Type, deps) {\n    return new Type(container.get(deps[0]));\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers[2] = {\n  invoke: function invoke(container, Type, deps) {\n    return new Type(container.get(deps[0]), container.get(deps[1]));\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers[3] = {\n  invoke: function invoke(container, Type, deps) {\n    return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]));\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers[4] = {\n  invoke: function invoke(container, Type, deps) {\n    return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]), container.get(deps[3]));\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers[5] = {\n  invoke: function invoke(container, Type, deps) {\n    return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]), container.get(deps[3]), container.get(deps[4]));\n  },\n\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers.fallback = {\n  invoke: invokeWithDynamicDependencies,\n  invokeWithDynamicDependencies: invokeWithDynamicDependencies\n}, _classInvokers);\n\nfunction getDependencies(f) {\n  if (!f.hasOwnProperty('inject')) {\n    return [];\n  }\n\n  if (typeof f.inject === 'function') {\n    return f.inject();\n  }\n\n  return f.inject;\n}\n\nvar Container = exports.Container = function () {\n  function Container(configuration) {\n    \n\n    if (configuration === undefined) {\n      configuration = {};\n    }\n\n    this._configuration = configuration;\n    this._onHandlerCreated = configuration.onHandlerCreated;\n    this._handlers = configuration.handlers || (configuration.handlers = new Map());\n    this._resolvers = new Map();\n    this.root = this;\n    this.parent = null;\n  }\n\n  Container.prototype.makeGlobal = function makeGlobal() {\n    Container.instance = this;\n    return this;\n  };\n\n  Container.prototype.setHandlerCreatedCallback = function setHandlerCreatedCallback(onHandlerCreated) {\n    this._onHandlerCreated = onHandlerCreated;\n    this._configuration.onHandlerCreated = onHandlerCreated;\n  };\n\n  Container.prototype.registerInstance = function registerInstance(key, instance) {\n    return this.registerResolver(key, new StrategyResolver(0, instance === undefined ? key : instance));\n  };\n\n  Container.prototype.registerSingleton = function registerSingleton(key, fn) {\n    return this.registerResolver(key, new StrategyResolver(1, fn === undefined ? key : fn));\n  };\n\n  Container.prototype.registerTransient = function registerTransient(key, fn) {\n    return this.registerResolver(key, new StrategyResolver(2, fn === undefined ? key : fn));\n  };\n\n  Container.prototype.registerHandler = function registerHandler(key, handler) {\n    return this.registerResolver(key, new StrategyResolver(3, handler));\n  };\n\n  Container.prototype.registerAlias = function registerAlias(originalKey, aliasKey) {\n    return this.registerResolver(aliasKey, new StrategyResolver(5, originalKey));\n  };\n\n  Container.prototype.registerResolver = function registerResolver(key, resolver) {\n    validateKey(key);\n\n    var allResolvers = this._resolvers;\n    var result = allResolvers.get(key);\n\n    if (result === undefined) {\n      allResolvers.set(key, resolver);\n    } else if (result.strategy === 4) {\n      result.state.push(resolver);\n    } else {\n      allResolvers.set(key, new StrategyResolver(4, [result, resolver]));\n    }\n\n    return resolver;\n  };\n\n  Container.prototype.autoRegister = function autoRegister(key, fn) {\n    fn = fn === undefined ? key : fn;\n\n    if (typeof fn === 'function') {\n      var _registration = _aureliaMetadata.metadata.get(_aureliaMetadata.metadata.registration, fn);\n\n      if (_registration === undefined) {\n        return this.registerResolver(key, new StrategyResolver(1, fn));\n      }\n\n      return _registration.registerResolver(this, key, fn);\n    }\n\n    return this.registerResolver(key, new StrategyResolver(0, fn));\n  };\n\n  Container.prototype.autoRegisterAll = function autoRegisterAll(fns) {\n    var i = fns.length;\n    while (i--) {\n      this.autoRegister(fns[i]);\n    }\n  };\n\n  Container.prototype.unregister = function unregister(key) {\n    this._resolvers.delete(key);\n  };\n\n  Container.prototype.hasResolver = function hasResolver(key) {\n    var checkParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    validateKey(key);\n\n    return this._resolvers.has(key) || checkParent && this.parent !== null && this.parent.hasResolver(key, checkParent);\n  };\n\n  Container.prototype.getResolver = function getResolver(key) {\n    return this._resolvers.get(key);\n  };\n\n  Container.prototype.get = function get(key) {\n    validateKey(key);\n\n    if (key === Container) {\n      return this;\n    }\n\n    if (resolverDecorates(key)) {\n      return key.get(this, key);\n    }\n\n    var resolver = this._resolvers.get(key);\n\n    if (resolver === undefined) {\n      if (this.parent === null) {\n        return this.autoRegister(key).get(this, key);\n      }\n\n      var _registration2 = _aureliaMetadata.metadata.get(_aureliaMetadata.metadata.registration, key);\n\n      if (_registration2 === undefined) {\n        return this.parent._get(key);\n      }\n\n      return _registration2.registerResolver(this, key, key).get(this, key);\n    }\n\n    return resolver.get(this, key);\n  };\n\n  Container.prototype._get = function _get(key) {\n    var resolver = this._resolvers.get(key);\n\n    if (resolver === undefined) {\n      if (this.parent === null) {\n        return this.autoRegister(key).get(this, key);\n      }\n\n      return this.parent._get(key);\n    }\n\n    return resolver.get(this, key);\n  };\n\n  Container.prototype.getAll = function getAll(key) {\n    validateKey(key);\n\n    var resolver = this._resolvers.get(key);\n\n    if (resolver === undefined) {\n      if (this.parent === null) {\n        return _emptyParameters;\n      }\n\n      return this.parent.getAll(key);\n    }\n\n    if (resolver.strategy === 4) {\n      var state = resolver.state;\n      var i = state.length;\n      var results = new Array(i);\n\n      while (i--) {\n        results[i] = state[i].get(this, key);\n      }\n\n      return results;\n    }\n\n    return [resolver.get(this, key)];\n  };\n\n  Container.prototype.createChild = function createChild() {\n    var child = new Container(this._configuration);\n    child.root = this.root;\n    child.parent = this;\n    return child;\n  };\n\n  Container.prototype.invoke = function invoke(fn, dynamicDependencies) {\n    try {\n      var _handler = this._handlers.get(fn);\n\n      if (_handler === undefined) {\n        _handler = this._createInvocationHandler(fn);\n        this._handlers.set(fn, _handler);\n      }\n\n      return _handler.invoke(this, dynamicDependencies);\n    } catch (e) {\n      throw new _aureliaPal.AggregateError('Error invoking ' + fn.name + '. Check the inner error for details.', e, true);\n    }\n  };\n\n  Container.prototype._createInvocationHandler = function _createInvocationHandler(fn) {\n    var dependencies = void 0;\n\n    if (fn.inject === undefined) {\n      dependencies = _aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.paramTypes, fn) || _emptyParameters;\n    } else {\n      dependencies = [];\n      var ctor = fn;\n      while (typeof ctor === 'function') {\n        var _dependencies;\n\n        (_dependencies = dependencies).push.apply(_dependencies, getDependencies(ctor));\n        ctor = Object.getPrototypeOf(ctor);\n      }\n    }\n\n    var invoker = _aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.invoker, fn) || classInvokers[dependencies.length] || classInvokers.fallback;\n\n    var handler = new InvocationHandler(fn, invoker, dependencies);\n    return this._onHandlerCreated !== undefined ? this._onHandlerCreated(handler) : handler;\n  };\n\n  return Container;\n}();\n\nfunction autoinject(potentialTarget) {\n  var deco = function deco(target) {\n    if (!target.hasOwnProperty('inject')) {\n      target.inject = (_aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.paramTypes, target) || _emptyParameters).slice();\n    }\n  };\n\n  return potentialTarget ? deco(potentialTarget) : deco;\n}\n\nfunction inject() {\n  for (var _len5 = arguments.length, rest = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    rest[_key5] = arguments[_key5];\n  }\n\n  return function (target, key, descriptor) {\n    if (typeof descriptor === 'number') {\n      autoinject(target);\n      if (rest.length === 1) {\n        target.inject[descriptor] = rest[0];\n      }\n      return;\n    }\n\n    if (descriptor) {\n      var _fn = descriptor.value;\n      _fn.inject = rest;\n    } else {\n      target.inject = rest;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-dependency-injection/dist/commonjs/aurelia-dependency-injection.js\n// module id = 7\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventAggregator = undefined;\nexports.includeEventsIn = includeEventsIn;\nexports.configure = configure;\n\nvar _aureliaLogging = require('aurelia-logging');\n\nvar LogManager = _interopRequireWildcard(_aureliaLogging);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\n\nvar logger = LogManager.getLogger('event-aggregator');\n\nvar Handler = function () {\n  function Handler(messageType, callback) {\n    \n\n    this.messageType = messageType;\n    this.callback = callback;\n  }\n\n  Handler.prototype.handle = function handle(message) {\n    if (message instanceof this.messageType) {\n      this.callback.call(null, message);\n    }\n  };\n\n  return Handler;\n}();\n\nfunction invokeCallback(callback, data, event) {\n  try {\n    callback(data, event);\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\nfunction invokeHandler(handler, data) {\n  try {\n    handler.handle(data);\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\nvar EventAggregator = exports.EventAggregator = function () {\n  function EventAggregator() {\n    \n\n    this.eventLookup = {};\n    this.messageHandlers = [];\n  }\n\n  EventAggregator.prototype.publish = function publish(event, data) {\n    var subscribers = void 0;\n    var i = void 0;\n\n    if (!event) {\n      throw new Error('Event was invalid.');\n    }\n\n    if (typeof event === 'string') {\n      subscribers = this.eventLookup[event];\n      if (subscribers) {\n        subscribers = subscribers.slice();\n        i = subscribers.length;\n\n        while (i--) {\n          invokeCallback(subscribers[i], data, event);\n        }\n      }\n    } else {\n      subscribers = this.messageHandlers.slice();\n      i = subscribers.length;\n\n      while (i--) {\n        invokeHandler(subscribers[i], event);\n      }\n    }\n  };\n\n  EventAggregator.prototype.subscribe = function subscribe(event, callback) {\n    var handler = void 0;\n    var subscribers = void 0;\n\n    if (!event) {\n      throw new Error('Event channel/type was invalid.');\n    }\n\n    if (typeof event === 'string') {\n      handler = callback;\n      subscribers = this.eventLookup[event] || (this.eventLookup[event] = []);\n    } else {\n      handler = new Handler(event, callback);\n      subscribers = this.messageHandlers;\n    }\n\n    subscribers.push(handler);\n\n    return {\n      dispose: function dispose() {\n        var idx = subscribers.indexOf(handler);\n        if (idx !== -1) {\n          subscribers.splice(idx, 1);\n        }\n      }\n    };\n  };\n\n  EventAggregator.prototype.subscribeOnce = function subscribeOnce(event, callback) {\n    var sub = this.subscribe(event, function (a, b) {\n      sub.dispose();\n      return callback(a, b);\n    });\n\n    return sub;\n  };\n\n  return EventAggregator;\n}();\n\nfunction includeEventsIn(obj) {\n  var ea = new EventAggregator();\n\n  obj.subscribeOnce = function (event, callback) {\n    return ea.subscribeOnce(event, callback);\n  };\n\n  obj.subscribe = function (event, callback) {\n    return ea.subscribe(event, callback);\n  };\n\n  obj.publish = function (event, data) {\n    ea.publish(event, data);\n  };\n\n  return ea;\n}\n\nfunction configure(config) {\n  config.instance(EventAggregator, includeEventsIn(config.aurelia));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-event-aggregator/dist/commonjs/aurelia-event-aggregator.js\n// module id = aurelia-event-aggregator\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogManager = exports.FrameworkConfiguration = exports.Aurelia = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nObject.keys(_aureliaDependencyInjection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaDependencyInjection[key];\n    }\n  });\n});\n\nvar _aureliaBinding = require('aurelia-binding');\n\nObject.keys(_aureliaBinding).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaBinding[key];\n    }\n  });\n});\n\nvar _aureliaMetadata = require('aurelia-metadata');\n\nObject.keys(_aureliaMetadata).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaMetadata[key];\n    }\n  });\n});\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nObject.keys(_aureliaTemplating).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaTemplating[key];\n    }\n  });\n});\n\nvar _aureliaLoader = require('aurelia-loader');\n\nObject.keys(_aureliaLoader).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaLoader[key];\n    }\n  });\n});\n\nvar _aureliaTaskQueue = require('aurelia-task-queue');\n\nObject.keys(_aureliaTaskQueue).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaTaskQueue[key];\n    }\n  });\n});\n\nvar _aureliaPath = require('aurelia-path');\n\nObject.keys(_aureliaPath).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaPath[key];\n    }\n  });\n});\n\nvar _aureliaPal = require('aurelia-pal');\n\nObject.keys(_aureliaPal).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _aureliaPal[key];\n    }\n  });\n});\n\nvar _aureliaLogging = require('aurelia-logging');\n\nvar TheLogManager = _interopRequireWildcard(_aureliaLogging);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\n\nfunction preventActionlessFormSubmit() {\n  _aureliaPal.DOM.addEventListener('submit', function (evt) {\n    var target = evt.target;\n    var action = target.action;\n\n    if (target.tagName.toLowerCase() === 'form' && !action) {\n      evt.preventDefault();\n    }\n  });\n}\n\nvar Aurelia = exports.Aurelia = function () {\n  function Aurelia(loader, container, resources) {\n    \n\n    this.loader = loader || new _aureliaPal.PLATFORM.Loader();\n    this.container = container || new _aureliaDependencyInjection.Container().makeGlobal();\n    this.resources = resources || new _aureliaTemplating.ViewResources();\n    this.use = new FrameworkConfiguration(this);\n    this.logger = TheLogManager.getLogger('aurelia');\n    this.hostConfigured = false;\n    this.host = null;\n\n    this.use.instance(Aurelia, this);\n    this.use.instance(_aureliaLoader.Loader, this.loader);\n    this.use.instance(_aureliaTemplating.ViewResources, this.resources);\n  }\n\n  Aurelia.prototype.start = function start() {\n    var _this = this;\n\n    if (this._started) {\n      return this._started;\n    }\n\n    this.logger.info('Aurelia Starting');\n    return this._started = this.use.apply().then(function () {\n      preventActionlessFormSubmit();\n\n      if (!_this.container.hasResolver(_aureliaTemplating.BindingLanguage)) {\n        var message = 'You must configure Aurelia with a BindingLanguage implementation.';\n        _this.logger.error(message);\n        throw new Error(message);\n      }\n\n      _this.logger.info('Aurelia Started');\n      var evt = _aureliaPal.DOM.createCustomEvent('aurelia-started', { bubbles: true, cancelable: true });\n      _aureliaPal.DOM.dispatchEvent(evt);\n      return _this;\n    });\n  };\n\n  Aurelia.prototype.enhance = function enhance() {\n    var _this2 = this;\n\n    var bindingContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var applicationHost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    this._configureHost(applicationHost || _aureliaPal.DOM.querySelectorAll('body')[0]);\n\n    return new Promise(function (resolve) {\n      var engine = _this2.container.get(_aureliaTemplating.TemplatingEngine);\n      _this2.root = engine.enhance({ container: _this2.container, element: _this2.host, resources: _this2.resources, bindingContext: bindingContext });\n      _this2.root.attached();\n      _this2._onAureliaComposed();\n      resolve(_this2);\n    });\n  };\n\n  Aurelia.prototype.setRoot = function setRoot() {\n    var _this3 = this;\n\n    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var applicationHost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    var instruction = {};\n\n    if (this.root && this.root.viewModel && this.root.viewModel.router) {\n      this.root.viewModel.router.deactivate();\n      this.root.viewModel.router.reset();\n    }\n\n    this._configureHost(applicationHost);\n\n    var engine = this.container.get(_aureliaTemplating.TemplatingEngine);\n    var transaction = this.container.get(_aureliaTemplating.CompositionTransaction);\n    delete transaction.initialComposition;\n\n    if (!root) {\n      if (this.configModuleId) {\n        root = (0, _aureliaPath.relativeToFile)('./app', this.configModuleId);\n      } else {\n        root = 'app';\n      }\n    }\n\n    instruction.viewModel = root;\n    instruction.container = instruction.childContainer = this.container;\n    instruction.viewSlot = this.hostSlot;\n    instruction.host = this.host;\n\n    return engine.compose(instruction).then(function (r) {\n      _this3.root = r;\n      instruction.viewSlot.attached();\n      _this3._onAureliaComposed();\n      return _this3;\n    });\n  };\n\n  Aurelia.prototype._configureHost = function _configureHost(applicationHost) {\n    if (this.hostConfigured) {\n      return;\n    }\n    applicationHost = applicationHost || this.host;\n\n    if (!applicationHost || typeof applicationHost === 'string') {\n      this.host = _aureliaPal.DOM.getElementById(applicationHost || 'applicationHost');\n    } else {\n      this.host = applicationHost;\n    }\n\n    if (!this.host) {\n      throw new Error('No applicationHost was specified.');\n    }\n\n    this.hostConfigured = true;\n    this.host.aurelia = this;\n    this.hostSlot = new _aureliaTemplating.ViewSlot(this.host, true);\n    this.hostSlot.transformChildNodesIntoView();\n    this.container.registerInstance(_aureliaPal.DOM.boundary, this.host);\n  };\n\n  Aurelia.prototype._onAureliaComposed = function _onAureliaComposed() {\n    var evt = _aureliaPal.DOM.createCustomEvent('aurelia-composed', { bubbles: true, cancelable: true });\n    setTimeout(function () {\n      return _aureliaPal.DOM.dispatchEvent(evt);\n    }, 1);\n  };\n\n  return Aurelia;\n}();\n\nvar logger = TheLogManager.getLogger('aurelia');\nvar extPattern = /\\.[^/.]+$/;\n\nfunction runTasks(config, tasks) {\n  var current = void 0;\n  var next = function next() {\n    current = tasks.shift();\n    if (current) {\n      return Promise.resolve(current(config)).then(next);\n    }\n\n    return Promise.resolve();\n  };\n\n  return next();\n}\n\nfunction loadPlugin(fwConfig, loader, info) {\n  logger.debug('Loading plugin ' + info.moduleId + '.');\n  if (typeof info.moduleId === 'string') {\n    fwConfig.resourcesRelativeTo = info.resourcesRelativeTo;\n\n    var id = info.moduleId;\n\n    if (info.resourcesRelativeTo.length > 1) {\n      return loader.normalize(info.moduleId, info.resourcesRelativeTo[1]).then(function (normalizedId) {\n        return _loadPlugin(normalizedId);\n      });\n    }\n\n    return _loadPlugin(id);\n  } else if (typeof info.configure === 'function') {\n    if (fwConfig.configuredPlugins.indexOf(info.configure) !== -1) {\n      return Promise.resolve();\n    }\n    fwConfig.configuredPlugins.push(info.configure);\n\n    return Promise.resolve(info.configure.call(null, fwConfig, info.config || {}));\n  }\n  throw new Error(invalidConfigMsg(info.moduleId || info.configure, 'plugin'));\n\n  function _loadPlugin(moduleId) {\n    return loader.loadModule(moduleId).then(function (m) {\n      if ('configure' in m) {\n        if (fwConfig.configuredPlugins.indexOf(m.configure) !== -1) {\n          return Promise.resolve();\n        }\n        return Promise.resolve(m.configure(fwConfig, info.config || {})).then(function () {\n          fwConfig.configuredPlugins.push(m.configure);\n          fwConfig.resourcesRelativeTo = null;\n          logger.debug('Configured plugin ' + info.moduleId + '.');\n        });\n      }\n\n      fwConfig.resourcesRelativeTo = null;\n      logger.debug('Loaded plugin ' + info.moduleId + '.');\n    });\n  }\n}\n\nfunction loadResources(aurelia, resourcesToLoad, appResources) {\n  if (Object.keys(resourcesToLoad).length === 0) {\n    return Promise.resolve();\n  }\n  var viewEngine = aurelia.container.get(_aureliaTemplating.ViewEngine);\n\n  return Promise.all(Object.keys(resourcesToLoad).map(function (n) {\n    return _normalize(resourcesToLoad[n]);\n  })).then(function (loads) {\n    var names = [];\n    var importIds = [];\n\n    loads.forEach(function (l) {\n      names.push(undefined);\n      importIds.push(l.importId);\n    });\n\n    return viewEngine.importViewResources(importIds, names, appResources);\n  });\n\n  function _normalize(load) {\n    var moduleId = load.moduleId;\n    var ext = getExt(moduleId);\n\n    if (isOtherResource(moduleId)) {\n      moduleId = removeExt(moduleId);\n    }\n\n    return aurelia.loader.normalize(moduleId, load.relativeTo).then(function (normalized) {\n      return {\n        name: load.moduleId,\n        importId: isOtherResource(load.moduleId) ? addOriginalExt(normalized, ext) : normalized\n      };\n    });\n  }\n\n  function isOtherResource(name) {\n    var ext = getExt(name);\n    if (!ext) return false;\n    if (ext === '') return false;\n    if (ext === '.js' || ext === '.ts') return false;\n    return true;\n  }\n\n  function removeExt(name) {\n    return name.replace(extPattern, '');\n  }\n\n  function addOriginalExt(normalized, ext) {\n    return removeExt(normalized) + '.' + ext;\n  }\n}\n\nfunction getExt(name) {\n  var match = name.match(extPattern);\n  if (match && match.length > 0) {\n    return match[0].split('.')[1];\n  }\n}\n\nfunction loadBehaviors(config) {\n  return Promise.all(config.behaviorsToLoad.map(function (m) {\n    return m.load(config.container, m.target);\n  })).then(function () {\n    config.behaviorsToLoad = null;\n  });\n}\n\nfunction assertProcessed(plugins) {\n  if (plugins.processed) {\n    throw new Error('This config instance has already been applied. To load more plugins or global resources, create a new FrameworkConfiguration instance.');\n  }\n}\n\nfunction invalidConfigMsg(cfg, type) {\n  return 'Invalid ' + type + ' [' + cfg + '], ' + type + ' must be specified as functions or relative module IDs.';\n}\n\nvar FrameworkConfiguration = function () {\n  function FrameworkConfiguration(aurelia) {\n    var _this4 = this;\n\n    \n\n    this.aurelia = aurelia;\n    this.container = aurelia.container;\n\n    this.info = [];\n    this.processed = false;\n    this.preTasks = [];\n    this.postTasks = [];\n\n    this.behaviorsToLoad = [];\n\n    this.configuredPlugins = [];\n    this.resourcesToLoad = {};\n    this.preTask(function () {\n      return aurelia.loader.normalize('aurelia-bootstrapper').then(function (name) {\n        return _this4.bootstrapperName = name;\n      });\n    });\n    this.postTask(function () {\n      return loadResources(aurelia, _this4.resourcesToLoad, aurelia.resources);\n    });\n  }\n\n  FrameworkConfiguration.prototype.instance = function instance(type, _instance) {\n    this.container.registerInstance(type, _instance);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.singleton = function singleton(type, implementation) {\n    this.container.registerSingleton(type, implementation);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.transient = function transient(type, implementation) {\n    this.container.registerTransient(type, implementation);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.preTask = function preTask(task) {\n    assertProcessed(this);\n    this.preTasks.push(task);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.postTask = function postTask(task) {\n    assertProcessed(this);\n    this.postTasks.push(task);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.feature = function feature(plugin) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    switch (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) {\n      case 'string':\n        var hasIndex = /\\/index$/i.test(plugin);\n        var _moduleId = hasIndex || getExt(plugin) ? plugin : plugin + '/index';\n        var root = hasIndex ? plugin.substr(0, plugin.length - 6) : plugin;\n        this.info.push({ moduleId: _moduleId, resourcesRelativeTo: [root, ''], config: config });\n        break;\n\n      case 'function':\n        this.info.push({ configure: plugin, config: config || {} });\n        break;\n      default:\n        throw new Error(invalidConfigMsg(plugin, 'feature'));\n    }\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.globalResources = function globalResources(resources) {\n    var _this5 = this;\n\n    assertProcessed(this);\n\n    var toAdd = Array.isArray(resources) ? resources : arguments;\n    var resource = void 0;\n    var resourcesRelativeTo = this.resourcesRelativeTo || ['', ''];\n\n    for (var i = 0, ii = toAdd.length; i < ii; ++i) {\n      resource = toAdd[i];\n      switch (typeof resource === 'undefined' ? 'undefined' : _typeof(resource)) {\n        case 'string':\n          var parent = resourcesRelativeTo[0];\n          var grandParent = resourcesRelativeTo[1];\n          var name = resource;\n\n          if ((resource.startsWith('./') || resource.startsWith('../')) && parent !== '') {\n            name = (0, _aureliaPath.join)(parent, resource);\n          }\n\n          this.resourcesToLoad[name] = { moduleId: name, relativeTo: grandParent };\n          break;\n        case 'function':\n          var meta = this.aurelia.resources.autoRegister(this.container, resource);\n          if (meta instanceof _aureliaTemplating.HtmlBehaviorResource && meta.elementName !== null) {\n            if (this.behaviorsToLoad.push(meta) === 1) {\n              this.postTask(function () {\n                return loadBehaviors(_this5);\n              });\n            }\n          }\n          break;\n        default:\n          throw new Error(invalidConfigMsg(resource, 'resource'));\n      }\n    }\n\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.globalName = function globalName(resourcePath, newName) {\n    assertProcessed(this);\n    this.resourcesToLoad[resourcePath] = { moduleId: newName, relativeTo: '' };\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.plugin = function plugin(_plugin, pluginConfig) {\n    assertProcessed(this);\n\n    var info = void 0;\n    switch (typeof _plugin === 'undefined' ? 'undefined' : _typeof(_plugin)) {\n      case 'string':\n        info = { moduleId: _plugin, resourcesRelativeTo: [_plugin, ''], config: pluginConfig || {} };\n        break;\n      case 'function':\n        info = { configure: _plugin, config: pluginConfig || {} };\n        break;\n      default:\n        throw new Error(invalidConfigMsg(_plugin, 'plugin'));\n    }\n    this.info.push(info);\n    return this;\n  };\n\n  FrameworkConfiguration.prototype._addNormalizedPlugin = function _addNormalizedPlugin(name, config) {\n    var _this6 = this;\n\n    var plugin = { moduleId: name, resourcesRelativeTo: [name, ''], config: config || {} };\n    this.info.push(plugin);\n\n    this.preTask(function () {\n      var relativeTo = [name, _this6.bootstrapperName];\n      plugin.moduleId = name;\n      plugin.resourcesRelativeTo = relativeTo;\n      return Promise.resolve();\n    });\n\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.defaultBindingLanguage = function defaultBindingLanguage() {\n    return this._addNormalizedPlugin('aurelia-templating-binding');\n  };\n\n  FrameworkConfiguration.prototype.router = function router() {\n    return this._addNormalizedPlugin('aurelia-templating-router');\n  };\n\n  FrameworkConfiguration.prototype.history = function history() {\n    return this._addNormalizedPlugin('aurelia-history-browser');\n  };\n\n  FrameworkConfiguration.prototype.defaultResources = function defaultResources() {\n    return this._addNormalizedPlugin('aurelia-templating-resources');\n  };\n\n  FrameworkConfiguration.prototype.eventAggregator = function eventAggregator() {\n    return this._addNormalizedPlugin('aurelia-event-aggregator');\n  };\n\n  FrameworkConfiguration.prototype.basicConfiguration = function basicConfiguration() {\n    return this.defaultBindingLanguage().defaultResources().eventAggregator();\n  };\n\n  FrameworkConfiguration.prototype.standardConfiguration = function standardConfiguration() {\n    return this.basicConfiguration().history().router();\n  };\n\n  FrameworkConfiguration.prototype.developmentLogging = function developmentLogging(level) {\n    var _this7 = this;\n\n    var logLevel = level ? TheLogManager.logLevel[level] : undefined;\n\n    if (logLevel === undefined) {\n      logLevel = TheLogManager.logLevel.debug;\n    }\n\n    this.preTask(function () {\n      return _this7.aurelia.loader.normalize('aurelia-logging-console', _this7.bootstrapperName).then(function (name) {\n        return _this7.aurelia.loader.loadModule(name).then(function (m) {\n          TheLogManager.addAppender(new m.ConsoleAppender());\n          TheLogManager.setLevel(logLevel);\n        });\n      });\n    });\n\n    return this;\n  };\n\n  FrameworkConfiguration.prototype.apply = function apply() {\n    var _this8 = this;\n\n    if (this.processed) {\n      return Promise.resolve();\n    }\n\n    return runTasks(this, this.preTasks).then(function () {\n      var loader = _this8.aurelia.loader;\n      var info = _this8.info;\n      var current = void 0;\n\n      var next = function next() {\n        current = info.shift();\n        if (current) {\n          return loadPlugin(_this8, loader, current).then(next);\n        }\n\n        _this8.processed = true;\n        _this8.configuredPlugins = null;\n        return Promise.resolve();\n      };\n\n      return next().then(function () {\n        return runTasks(_this8, _this8.postTasks);\n      });\n    });\n  };\n\n  return FrameworkConfiguration;\n}();\n\nexports.FrameworkConfiguration = FrameworkConfiguration;\nvar LogManager = exports.LogManager = TheLogManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-framework/dist/commonjs/aurelia-framework.js\n// module id = aurelia-framework\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserHistory = exports.DefaultLinkHandler = exports.LinkHandler = undefined;\n\nvar _class, _temp;\n\nexports.configure = configure;\n\nvar _aureliaPal = require('aurelia-pal');\n\nvar _aureliaHistory = require('aurelia-history');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar LinkHandler = exports.LinkHandler = function () {\n  function LinkHandler() {\n    \n  }\n\n  LinkHandler.prototype.activate = function activate(history) {};\n\n  LinkHandler.prototype.deactivate = function deactivate() {};\n\n  return LinkHandler;\n}();\n\nvar DefaultLinkHandler = exports.DefaultLinkHandler = function (_LinkHandler) {\n  _inherits(DefaultLinkHandler, _LinkHandler);\n\n  function DefaultLinkHandler() {\n    \n\n    var _this = _possibleConstructorReturn(this, _LinkHandler.call(this));\n\n    _this.handler = function (e) {\n      var _DefaultLinkHandler$g = DefaultLinkHandler.getEventInfo(e),\n          shouldHandleEvent = _DefaultLinkHandler$g.shouldHandleEvent,\n          href = _DefaultLinkHandler$g.href;\n\n      if (shouldHandleEvent) {\n        e.preventDefault();\n        _this.history.navigate(href);\n      }\n    };\n    return _this;\n  }\n\n  DefaultLinkHandler.prototype.activate = function activate(history) {\n    if (history._hasPushState) {\n      this.history = history;\n      _aureliaPal.DOM.addEventListener('click', this.handler, true);\n    }\n  };\n\n  DefaultLinkHandler.prototype.deactivate = function deactivate() {\n    _aureliaPal.DOM.removeEventListener('click', this.handler);\n  };\n\n  DefaultLinkHandler.getEventInfo = function getEventInfo(event) {\n    var info = {\n      shouldHandleEvent: false,\n      href: null,\n      anchor: null\n    };\n\n    var target = DefaultLinkHandler.findClosestAnchor(event.target);\n    if (!target || !DefaultLinkHandler.targetIsThisWindow(target)) {\n      return info;\n    }\n\n    if (target.hasAttribute('download') || target.hasAttribute('router-ignore')) {\n      return info;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return info;\n    }\n\n    var href = target.getAttribute('href');\n    info.anchor = target;\n    info.href = href;\n\n    var leftButtonClicked = event.which === 1;\n    var isRelative = href && !(href.charAt(0) === '#' || /^[a-z]+:/i.test(href));\n\n    info.shouldHandleEvent = leftButtonClicked && isRelative;\n    return info;\n  };\n\n  DefaultLinkHandler.findClosestAnchor = function findClosestAnchor(el) {\n    while (el) {\n      if (el.tagName === 'A') {\n        return el;\n      }\n\n      el = el.parentNode;\n    }\n  };\n\n  DefaultLinkHandler.targetIsThisWindow = function targetIsThisWindow(target) {\n    var targetWindow = target.getAttribute('target');\n    var win = _aureliaPal.PLATFORM.global;\n\n    return !targetWindow || targetWindow === win.name || targetWindow === '_self';\n  };\n\n  return DefaultLinkHandler;\n}(LinkHandler);\n\nfunction configure(config) {\n  config.singleton(_aureliaHistory.History, BrowserHistory);\n  config.transient(LinkHandler, DefaultLinkHandler);\n}\n\nvar BrowserHistory = exports.BrowserHistory = (_temp = _class = function (_History) {\n  _inherits(BrowserHistory, _History);\n\n  function BrowserHistory(linkHandler) {\n    \n\n    var _this2 = _possibleConstructorReturn(this, _History.call(this));\n\n    _this2._isActive = false;\n    _this2._checkUrlCallback = _this2._checkUrl.bind(_this2);\n\n    _this2.location = _aureliaPal.PLATFORM.location;\n    _this2.history = _aureliaPal.PLATFORM.history;\n    _this2.linkHandler = linkHandler;\n    return _this2;\n  }\n\n  BrowserHistory.prototype.activate = function activate(options) {\n    if (this._isActive) {\n      throw new Error('History has already been activated.');\n    }\n\n    var wantsPushState = !!options.pushState;\n\n    this._isActive = true;\n    this.options = Object.assign({}, { root: '/' }, this.options, options);\n\n    this.root = ('/' + this.options.root + '/').replace(rootStripper, '/');\n\n    this._wantsHashChange = this.options.hashChange !== false;\n    this._hasPushState = !!(this.options.pushState && this.history && this.history.pushState);\n\n    var eventName = void 0;\n    if (this._hasPushState) {\n      eventName = 'popstate';\n    } else if (this._wantsHashChange) {\n      eventName = 'hashchange';\n    }\n\n    _aureliaPal.PLATFORM.addEventListener(eventName, this._checkUrlCallback);\n\n    if (this._wantsHashChange && wantsPushState) {\n      var loc = this.location;\n      var atRoot = loc.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n\n      if (!this._hasPushState && !atRoot) {\n        this.fragment = this._getFragment(null, true);\n        this.location.replace(this.root + this.location.search + '#' + this.fragment);\n\n        return true;\n      } else if (this._hasPushState && atRoot && loc.hash) {\n        this.fragment = this._getHash().replace(routeStripper, '');\n        this.history.replaceState({}, _aureliaPal.DOM.title, this.root + this.fragment + loc.search);\n      }\n    }\n\n    if (!this.fragment) {\n      this.fragment = this._getFragment();\n    }\n\n    this.linkHandler.activate(this);\n\n    if (!this.options.silent) {\n      return this._loadUrl();\n    }\n  };\n\n  BrowserHistory.prototype.deactivate = function deactivate() {\n    _aureliaPal.PLATFORM.removeEventListener('popstate', this._checkUrlCallback);\n    _aureliaPal.PLATFORM.removeEventListener('hashchange', this._checkUrlCallback);\n    this._isActive = false;\n    this.linkHandler.deactivate();\n  };\n\n  BrowserHistory.prototype.getAbsoluteRoot = function getAbsoluteRoot() {\n    var origin = createOrigin(this.location.protocol, this.location.hostname, this.location.port);\n    return '' + origin + this.root;\n  };\n\n  BrowserHistory.prototype.navigate = function navigate(fragment) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$trigger = _ref.trigger,\n        trigger = _ref$trigger === undefined ? true : _ref$trigger,\n        _ref$replace = _ref.replace,\n        replace = _ref$replace === undefined ? false : _ref$replace;\n\n    if (fragment && absoluteUrl.test(fragment)) {\n      this.location.href = fragment;\n      return true;\n    }\n\n    if (!this._isActive) {\n      return false;\n    }\n\n    fragment = this._getFragment(fragment || '');\n\n    if (this.fragment === fragment && !replace) {\n      return false;\n    }\n\n    this.fragment = fragment;\n\n    var url = this.root + fragment;\n\n    if (fragment === '' && url !== '/') {\n      url = url.slice(0, -1);\n    }\n\n    if (this._hasPushState) {\n      url = url.replace('//', '/');\n      this.history[replace ? 'replaceState' : 'pushState']({}, _aureliaPal.DOM.title, url);\n    } else if (this._wantsHashChange) {\n      updateHash(this.location, fragment, replace);\n    } else {\n      this.location.assign(url);\n    }\n\n    if (trigger) {\n      return this._loadUrl(fragment);\n    }\n\n    return true;\n  };\n\n  BrowserHistory.prototype.navigateBack = function navigateBack() {\n    this.history.back();\n  };\n\n  BrowserHistory.prototype.setTitle = function setTitle(title) {\n    _aureliaPal.DOM.title = title;\n  };\n\n  BrowserHistory.prototype.setState = function setState(key, value) {\n    var state = Object.assign({}, this.history.state);\n    var _location = this.location,\n        pathname = _location.pathname,\n        search = _location.search,\n        hash = _location.hash;\n\n    state[key] = value;\n    this.history.replaceState(state, null, '' + pathname + search + hash);\n  };\n\n  BrowserHistory.prototype.getState = function getState(key) {\n    var state = Object.assign({}, this.history.state);\n    return state[key];\n  };\n\n  BrowserHistory.prototype._getHash = function _getHash() {\n    return this.location.hash.substr(1);\n  };\n\n  BrowserHistory.prototype._getFragment = function _getFragment(fragment, forcePushState) {\n    var root = void 0;\n\n    if (!fragment) {\n      if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n        fragment = this.location.pathname + this.location.search;\n        root = this.root.replace(trailingSlash, '');\n        if (!fragment.indexOf(root)) {\n          fragment = fragment.substr(root.length);\n        }\n      } else {\n        fragment = this._getHash();\n      }\n    }\n\n    return '/' + fragment.replace(routeStripper, '');\n  };\n\n  BrowserHistory.prototype._checkUrl = function _checkUrl() {\n    var current = this._getFragment();\n    if (current !== this.fragment) {\n      this._loadUrl();\n    }\n  };\n\n  BrowserHistory.prototype._loadUrl = function _loadUrl(fragmentOverride) {\n    var fragment = this.fragment = this._getFragment(fragmentOverride);\n\n    return this.options.routeHandler ? this.options.routeHandler(fragment) : false;\n  };\n\n  return BrowserHistory;\n}(_aureliaHistory.History), _class.inject = [LinkHandler], _temp);\n\nvar routeStripper = /^#?\\/*|\\s+$/g;\n\nvar rootStripper = /^\\/+|\\/+$/g;\n\nvar trailingSlash = /\\/$/;\n\nvar absoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n\nfunction updateHash(location, fragment, replace) {\n  if (replace) {\n    var _href = location.href.replace(/(javascript:|#).*$/, '');\n    location.replace(_href + '#' + fragment);\n  } else {\n    location.hash = '#' + fragment;\n  }\n}\n\nfunction createOrigin(protocol, hostname, port) {\n  return protocol + '//' + hostname + (port ? ':' + port : '');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-history-browser/dist/commonjs/aurelia-history-browser.js\n// module id = aurelia-history-browser\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsoleAppender = undefined;\n\nvar _aureliaLogging = require('aurelia-logging');\n\n\n\nvar ConsoleAppender = exports.ConsoleAppender = function () {\n  function ConsoleAppender() {\n    \n  }\n\n  ConsoleAppender.prototype.debug = function debug(logger) {\n    var _console;\n\n    for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    (_console = console).debug.apply(_console, ['DEBUG [' + logger.id + ']'].concat(rest));\n  };\n\n  ConsoleAppender.prototype.info = function info(logger) {\n    var _console2;\n\n    for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    (_console2 = console).info.apply(_console2, ['INFO [' + logger.id + ']'].concat(rest));\n  };\n\n  ConsoleAppender.prototype.warn = function warn(logger) {\n    var _console3;\n\n    for (var _len3 = arguments.length, rest = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      rest[_key3 - 1] = arguments[_key3];\n    }\n\n    (_console3 = console).warn.apply(_console3, ['WARN [' + logger.id + ']'].concat(rest));\n  };\n\n  ConsoleAppender.prototype.error = function error(logger) {\n    var _console4;\n\n    for (var _len4 = arguments.length, rest = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      rest[_key4 - 1] = arguments[_key4];\n    }\n\n    (_console4 = console).error.apply(_console4, ['ERROR [' + logger.id + ']'].concat(rest));\n  };\n\n  return ConsoleAppender;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-logging-console/dist/commonjs/aurelia-logging-console.js\n// module id = aurelia-logging-console\n// module chunks = 1","import { buildQueryString, parseQueryString } from 'aurelia-path';\n\nexport let State = class State {\n  constructor(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  get(charSpec) {\n    for (let child of this.nextStates) {\n      let isEqual = child.charSpec.validChars === charSpec.validChars && child.charSpec.invalidChars === charSpec.invalidChars;\n\n      if (isEqual) {\n        return child;\n      }\n    }\n\n    return undefined;\n  }\n\n  put(charSpec) {\n    let state = this.get(charSpec);\n\n    if (state) {\n      return state;\n    }\n\n    state = new State(charSpec);\n\n    this.nextStates.push(state);\n\n    if (charSpec.repeat) {\n      state.nextStates.push(state);\n    }\n\n    return state;\n  }\n\n  match(ch) {\n    let nextStates = this.nextStates;\n    let results = [];\n\n    for (let i = 0, l = nextStates.length; i < l; i++) {\n      let child = nextStates[i];\n      let charSpec = child.charSpec;\n\n      if (charSpec.validChars !== undefined) {\n        if (charSpec.validChars.indexOf(ch) !== -1) {\n          results.push(child);\n        }\n      } else if (charSpec.invalidChars !== undefined) {\n        if (charSpec.invalidChars.indexOf(ch) === -1) {\n          results.push(child);\n        }\n      }\n    }\n\n    return results;\n  }\n};\n\nconst specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\nconst escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\nexport let StaticSegment = class StaticSegment {\n  constructor(string, caseSensitive) {\n    this.string = string;\n    this.caseSensitive = caseSensitive;\n  }\n\n  eachChar(callback) {\n    let s = this.string;\n    for (let i = 0, ii = s.length; i < ii; ++i) {\n      let ch = s[i];\n      callback({ validChars: this.caseSensitive ? ch : ch.toUpperCase() + ch.toLowerCase() });\n    }\n  }\n\n  regex() {\n    return this.string.replace(escapeRegex, '\\\\$1');\n  }\n\n  generate() {\n    return this.string;\n  }\n};\n\nexport let DynamicSegment = class DynamicSegment {\n  constructor(name, optional) {\n    this.name = name;\n    this.optional = optional;\n  }\n\n  eachChar(callback) {\n    callback({ invalidChars: '/', repeat: true });\n  }\n\n  regex() {\n    return '([^/]+)';\n  }\n\n  generate(params, consumed) {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n};\n\nexport let StarSegment = class StarSegment {\n  constructor(name) {\n    this.name = name;\n  }\n\n  eachChar(callback) {\n    callback({ invalidChars: '', repeat: true });\n  }\n\n  regex() {\n    return '(.+)';\n  }\n\n  generate(params, consumed) {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n};\n\nexport let EpsilonSegment = class EpsilonSegment {\n  eachChar() {}\n\n  regex() {\n    return '';\n  }\n\n  generate() {\n    return '';\n  }\n};\n\nexport let RouteRecognizer = class RouteRecognizer {\n  constructor() {\n    this.rootState = new State();\n    this.names = {};\n    this.routes = new Map();\n  }\n\n  add(route) {\n    if (Array.isArray(route)) {\n      route.forEach(r => this.add(r));\n      return undefined;\n    }\n\n    let currentState = this.rootState;\n    let skippableStates = [];\n    let regex = '^';\n    let types = { statics: 0, dynamics: 0, stars: 0 };\n    let names = [];\n    let routeName = route.handler.name;\n    let isEmpty = true;\n    let segments = parse(route.path, names, types, route.caseSensitive);\n\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      let segment = segments[i];\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      let [firstState, nextState] = addSegment(currentState, segment);\n\n      for (let j = 0, jj = skippableStates.length; j < jj; j++) {\n        skippableStates[j].nextStates.push(firstState);\n      }\n\n      if (segment.optional) {\n        skippableStates.push(nextState);\n        regex += `(?:/${segment.regex()})?`;\n      } else {\n        currentState = nextState;\n        regex += `/${segment.regex()}`;\n        skippableStates.length = 0;\n        isEmpty = false;\n      }\n    }\n\n    if (isEmpty) {\n      currentState = currentState.put({ validChars: '/' });\n      regex += '/?';\n    }\n\n    let handlers = [{ handler: route.handler, names: names }];\n\n    this.routes.set(route.handler, { segments, handlers });\n    if (routeName) {\n      let routeNames = Array.isArray(routeName) ? routeName : [routeName];\n      for (let i = 0; i < routeNames.length; i++) {\n        if (!(routeNames[i] in this.names)) {\n          this.names[routeNames[i]] = { segments, handlers };\n        }\n      }\n    }\n\n    for (let i = 0; i < skippableStates.length; i++) {\n      let state = skippableStates[i];\n      state.handlers = handlers;\n      state.regex = new RegExp(regex + '$', route.caseSensitive ? '' : 'i');\n      state.types = types;\n    }\n\n    currentState.handlers = handlers;\n    currentState.regex = new RegExp(regex + '$', route.caseSensitive ? '' : 'i');\n    currentState.types = types;\n\n    return currentState;\n  }\n\n  getRoute(nameOrRoute) {\n    return typeof nameOrRoute === 'string' ? this.names[nameOrRoute] : this.routes.get(nameOrRoute);\n  }\n\n  handlersFor(nameOrRoute) {\n    let route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    return [...route.handlers];\n  }\n\n  hasRoute(nameOrRoute) {\n    return !!this.getRoute(nameOrRoute);\n  }\n\n  generate(nameOrRoute, params) {\n    let route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    let handler = route.handlers[0].handler;\n    if (handler.generationUsesHref) {\n      return handler.href;\n    }\n\n    let routeParams = Object.assign({}, params);\n    let segments = route.segments;\n    let consumed = {};\n    let output = '';\n\n    for (let i = 0, l = segments.length; i < l; i++) {\n      let segment = segments[i];\n\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      let segmentValue = segment.generate(routeParams, consumed);\n      if (segmentValue === null || segmentValue === undefined) {\n        if (!segment.optional) {\n          throw new Error(`A value is required for route parameter '${segment.name}' in route '${nameOrRoute}'.`);\n        }\n      } else {\n        output += '/';\n        output += segmentValue;\n      }\n    }\n\n    if (output.charAt(0) !== '/') {\n      output = '/' + output;\n    }\n\n    for (let param in consumed) {\n      delete routeParams[param];\n    }\n\n    let queryString = buildQueryString(routeParams);\n    output += queryString ? `?${queryString}` : '';\n\n    return output;\n  }\n\n  recognize(path) {\n    let states = [this.rootState];\n    let queryParams = {};\n    let isSlashDropped = false;\n    let normalizedPath = path;\n\n    let queryStart = normalizedPath.indexOf('?');\n    if (queryStart !== -1) {\n      let queryString = normalizedPath.substr(queryStart + 1, normalizedPath.length);\n      normalizedPath = normalizedPath.substr(0, queryStart);\n      queryParams = parseQueryString(queryString);\n    }\n\n    normalizedPath = decodeURI(normalizedPath);\n\n    if (normalizedPath.charAt(0) !== '/') {\n      normalizedPath = '/' + normalizedPath;\n    }\n\n    let pathLen = normalizedPath.length;\n    if (pathLen > 1 && normalizedPath.charAt(pathLen - 1) === '/') {\n      normalizedPath = normalizedPath.substr(0, pathLen - 1);\n      isSlashDropped = true;\n    }\n\n    for (let i = 0, l = normalizedPath.length; i < l; i++) {\n      states = recognizeChar(states, normalizedPath.charAt(i));\n      if (!states.length) {\n        break;\n      }\n    }\n\n    let solutions = [];\n    for (let i = 0, l = states.length; i < l; i++) {\n      if (states[i].handlers) {\n        solutions.push(states[i]);\n      }\n    }\n\n    states = sortSolutions(solutions);\n\n    let state = solutions[0];\n    if (state && state.handlers) {\n      if (isSlashDropped && state.regex.source.slice(-5) === '(.+)$') {\n        normalizedPath = normalizedPath + '/';\n      }\n\n      return findHandler(state, normalizedPath, queryParams);\n    }\n  }\n};\n\nlet RecognizeResults = class RecognizeResults {\n  constructor(queryParams) {\n    this.splice = Array.prototype.splice;\n    this.slice = Array.prototype.slice;\n    this.push = Array.prototype.push;\n    this.length = 0;\n    this.queryParams = queryParams || {};\n  }\n};\n\n\nfunction parse(route, names, types, caseSensitive) {\n  let normalizedRoute = route;\n  if (route.charAt(0) === '/') {\n    normalizedRoute = route.substr(1);\n  }\n\n  let results = [];\n\n  let splitRoute = normalizedRoute.split('/');\n  for (let i = 0, ii = splitRoute.length; i < ii; ++i) {\n    let segment = splitRoute[i];\n\n    let match = segment.match(/^:([^?]+)(\\?)?$/);\n    if (match) {\n      let [, name, optional] = match;\n      if (name.indexOf('=') !== -1) {\n        throw new Error(`Parameter ${name} in route ${route} has a default value, which is not supported.`);\n      }\n      results.push(new DynamicSegment(name, !!optional));\n      names.push(name);\n      types.dynamics++;\n      continue;\n    }\n\n    match = segment.match(/^\\*(.+)$/);\n    if (match) {\n      results.push(new StarSegment(match[1]));\n      names.push(match[1]);\n      types.stars++;\n    } else if (segment === '') {\n      results.push(new EpsilonSegment());\n    } else {\n      results.push(new StaticSegment(segment, caseSensitive));\n      types.statics++;\n    }\n  }\n\n  return results;\n}\n\nfunction sortSolutions(states) {\n  return states.sort((a, b) => {\n    if (a.types.stars !== b.types.stars) {\n      return a.types.stars - b.types.stars;\n    }\n\n    if (a.types.stars) {\n      if (a.types.statics !== b.types.statics) {\n        return b.types.statics - a.types.statics;\n      }\n      if (a.types.dynamics !== b.types.dynamics) {\n        return b.types.dynamics - a.types.dynamics;\n      }\n    }\n\n    if (a.types.dynamics !== b.types.dynamics) {\n      return a.types.dynamics - b.types.dynamics;\n    }\n\n    if (a.types.statics !== b.types.statics) {\n      return b.types.statics - a.types.statics;\n    }\n\n    return 0;\n  });\n}\n\nfunction recognizeChar(states, ch) {\n  let nextStates = [];\n\n  for (let i = 0, l = states.length; i < l; i++) {\n    let state = states[i];\n    nextStates.push(...state.match(ch));\n  }\n\n  return nextStates;\n}\n\nfunction findHandler(state, path, queryParams) {\n  let handlers = state.handlers;\n  let regex = state.regex;\n  let captures = path.match(regex);\n  let currentCapture = 1;\n  let result = new RecognizeResults(queryParams);\n\n  for (let i = 0, l = handlers.length; i < l; i++) {\n    let handler = handlers[i];\n    let names = handler.names;\n    let params = {};\n\n    for (let j = 0, m = names.length; j < m; j++) {\n      params[names[j]] = captures[currentCapture++];\n    }\n\n    result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n  }\n\n  return result;\n}\n\nfunction addSegment(currentState, segment) {\n  let firstState = currentState.put({ validChars: '/' });\n  let nextState = firstState;\n  segment.eachChar(ch => {\n    nextState = nextState.put(ch);\n  });\n\n  return [firstState, nextState];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-route-recognizer/dist/es2015/aurelia-route-recognizer.js\n// module id = aurelia-route-recognizer\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppRouter = exports.PipelineProvider = exports.LoadRouteStep = exports.RouteLoader = exports.ActivateNextStep = exports.DeactivatePreviousStep = exports.CanActivateNextStep = exports.CanDeactivatePreviousStep = exports.Router = exports.BuildNavigationPlanStep = exports.activationStrategy = exports.RouterConfiguration = exports.Pipeline = exports.pipelineStatus = exports.RedirectToRoute = exports.Redirect = exports.NavModel = exports.NavigationInstruction = exports.CommitChangesStep = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports._normalizeAbsolutePath = _normalizeAbsolutePath;\nexports._createRootedPath = _createRootedPath;\nexports._resolveUrl = _resolveUrl;\nexports._ensureArrayWithSingleRoutePerConfig = _ensureArrayWithSingleRoutePerConfig;\nexports.isNavigationCommand = isNavigationCommand;\nexports._buildNavigationPlan = _buildNavigationPlan;\n\nvar _aureliaLogging = require('aurelia-logging');\n\nvar LogManager = _interopRequireWildcard(_aureliaLogging);\n\nvar _aureliaRouteRecognizer = require('aurelia-route-recognizer');\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaHistory = require('aurelia-history');\n\nvar _aureliaEventAggregator = require('aurelia-event-aggregator');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nfunction _normalizeAbsolutePath(path, hasPushState) {\n  var absolute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!hasPushState && path[0] !== '#') {\n    path = '#' + path;\n  }\n\n  if (hasPushState && absolute) {\n    path = path.substring(1, path.length);\n  }\n\n  return path;\n}\n\nfunction _createRootedPath(fragment, baseUrl, hasPushState, absolute) {\n  if (isAbsoluteUrl.test(fragment)) {\n    return fragment;\n  }\n\n  var path = '';\n\n  if (baseUrl.length && baseUrl[0] !== '/') {\n    path += '/';\n  }\n\n  path += baseUrl;\n\n  if ((!path.length || path[path.length - 1] !== '/') && fragment[0] !== '/') {\n    path += '/';\n  }\n\n  if (path.length && path[path.length - 1] === '/' && fragment[0] === '/') {\n    path = path.substring(0, path.length - 1);\n  }\n\n  return _normalizeAbsolutePath(path + fragment, hasPushState, absolute);\n}\n\nfunction _resolveUrl(fragment, baseUrl, hasPushState) {\n  if (isRootedPath.test(fragment)) {\n    return _normalizeAbsolutePath(fragment, hasPushState);\n  }\n\n  return _createRootedPath(fragment, baseUrl, hasPushState);\n}\n\nfunction _ensureArrayWithSingleRoutePerConfig(config) {\n  var routeConfigs = [];\n\n  if (Array.isArray(config.route)) {\n    for (var i = 0, ii = config.route.length; i < ii; ++i) {\n      var current = Object.assign({}, config);\n      current.route = config.route[i];\n      routeConfigs.push(current);\n    }\n  } else {\n    routeConfigs.push(Object.assign({}, config));\n  }\n\n  return routeConfigs;\n}\n\nvar isRootedPath = /^#?\\//;\nvar isAbsoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n\nvar CommitChangesStep = exports.CommitChangesStep = function () {\n  function CommitChangesStep() {\n    \n  }\n\n  CommitChangesStep.prototype.run = function run(navigationInstruction, next) {\n    return navigationInstruction._commitChanges(true).then(function () {\n      navigationInstruction._updateTitle();\n      return next();\n    });\n  };\n\n  return CommitChangesStep;\n}();\n\nvar NavigationInstruction = exports.NavigationInstruction = function () {\n  function NavigationInstruction(init) {\n    \n\n    this.plan = null;\n    this.options = {};\n\n    Object.assign(this, init);\n\n    this.params = this.params || {};\n    this.viewPortInstructions = {};\n\n    var ancestorParams = [];\n    var current = this;\n    do {\n      var currentParams = Object.assign({}, current.params);\n      if (current.config && current.config.hasChildRouter) {\n        delete currentParams[current.getWildCardName()];\n      }\n\n      ancestorParams.unshift(currentParams);\n      current = current.parentInstruction;\n    } while (current);\n\n    var allParams = Object.assign.apply(Object, [{}, this.queryParams].concat(ancestorParams));\n    this.lifecycleArgs = [allParams, this.config, this];\n  }\n\n  NavigationInstruction.prototype.getAllInstructions = function getAllInstructions() {\n    var instructions = [this];\n    for (var _key in this.viewPortInstructions) {\n      var childInstruction = this.viewPortInstructions[_key].childNavigationInstruction;\n      if (childInstruction) {\n        instructions.push.apply(instructions, childInstruction.getAllInstructions());\n      }\n    }\n\n    return instructions;\n  };\n\n  NavigationInstruction.prototype.getAllPreviousInstructions = function getAllPreviousInstructions() {\n    return this.getAllInstructions().map(function (c) {\n      return c.previousInstruction;\n    }).filter(function (c) {\n      return c;\n    });\n  };\n\n  NavigationInstruction.prototype.addViewPortInstruction = function addViewPortInstruction(viewPortName, strategy, moduleId, component) {\n    var config = Object.assign({}, this.lifecycleArgs[1], { currentViewPort: viewPortName });\n    var viewportInstruction = this.viewPortInstructions[viewPortName] = {\n      name: viewPortName,\n      strategy: strategy,\n      moduleId: moduleId,\n      component: component,\n      childRouter: component.childRouter,\n      lifecycleArgs: [].concat(this.lifecycleArgs[0], config, this.lifecycleArgs[2])\n    };\n\n    return viewportInstruction;\n  };\n\n  NavigationInstruction.prototype.getWildCardName = function getWildCardName() {\n    var wildcardIndex = this.config.route.lastIndexOf('*');\n    return this.config.route.substr(wildcardIndex + 1);\n  };\n\n  NavigationInstruction.prototype.getWildcardPath = function getWildcardPath() {\n    var wildcardName = this.getWildCardName();\n    var path = this.params[wildcardName] || '';\n\n    if (this.queryString) {\n      path += '?' + this.queryString;\n    }\n\n    return path;\n  };\n\n  NavigationInstruction.prototype.getBaseUrl = function getBaseUrl() {\n    var _this = this;\n\n    var fragment = decodeURI(this.fragment);\n\n    if (fragment === '') {\n      var nonEmptyRoute = this.router.routes.find(function (route) {\n        return route.name === _this.config.name && route.route !== '';\n      });\n      if (nonEmptyRoute) {\n        fragment = nonEmptyRoute.route;\n      }\n    }\n\n    if (!this.params) {\n      return encodeURI(fragment);\n    }\n\n    var wildcardName = this.getWildCardName();\n    var path = this.params[wildcardName] || '';\n\n    if (!path) {\n      return encodeURI(fragment);\n    }\n\n    return encodeURI(fragment.substr(0, fragment.lastIndexOf(path)));\n  };\n\n  NavigationInstruction.prototype._commitChanges = function _commitChanges(waitToSwap) {\n    var _this2 = this;\n\n    var router = this.router;\n    router.currentInstruction = this;\n\n    if (this.previousInstruction) {\n      this.previousInstruction.config.navModel.isActive = false;\n    }\n\n    this.config.navModel.isActive = true;\n\n    router.refreshNavigation();\n\n    var loads = [];\n    var delaySwaps = [];\n\n    var _loop = function _loop(viewPortName) {\n      var viewPortInstruction = _this2.viewPortInstructions[viewPortName];\n      var viewPort = router.viewPorts[viewPortName];\n\n      if (!viewPort) {\n        throw new Error('There was no router-view found in the view for ' + viewPortInstruction.moduleId + '.');\n      }\n\n      if (viewPortInstruction.strategy === activationStrategy.replace) {\n        if (viewPortInstruction.childNavigationInstruction && viewPortInstruction.childNavigationInstruction.parentCatchHandler) {\n          loads.push(viewPortInstruction.childNavigationInstruction._commitChanges(waitToSwap));\n        } else {\n          if (waitToSwap) {\n            delaySwaps.push({ viewPort: viewPort, viewPortInstruction: viewPortInstruction });\n          }\n          loads.push(viewPort.process(viewPortInstruction, waitToSwap).then(function (x) {\n            if (viewPortInstruction.childNavigationInstruction) {\n              return viewPortInstruction.childNavigationInstruction._commitChanges(waitToSwap);\n            }\n          }));\n        }\n      } else {\n        if (viewPortInstruction.childNavigationInstruction) {\n          loads.push(viewPortInstruction.childNavigationInstruction._commitChanges(waitToSwap));\n        }\n      }\n    };\n\n    for (var viewPortName in this.viewPortInstructions) {\n      _loop(viewPortName);\n    }\n\n    return Promise.all(loads).then(function () {\n      delaySwaps.forEach(function (x) {\n        return x.viewPort.swap(x.viewPortInstruction);\n      });\n      return null;\n    }).then(function () {\n      return prune(_this2);\n    });\n  };\n\n  NavigationInstruction.prototype._updateTitle = function _updateTitle() {\n    var title = this._buildTitle(this.router.titleSeparator);\n    if (title) {\n      this.router.history.setTitle(title);\n    }\n  };\n\n  NavigationInstruction.prototype._buildTitle = function _buildTitle() {\n    var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ' | ';\n\n    var title = '';\n    var childTitles = [];\n\n    if (this.config.navModel.title) {\n      title = this.router.transformTitle(this.config.navModel.title);\n    }\n\n    for (var viewPortName in this.viewPortInstructions) {\n      var _viewPortInstruction = this.viewPortInstructions[viewPortName];\n\n      if (_viewPortInstruction.childNavigationInstruction) {\n        var childTitle = _viewPortInstruction.childNavigationInstruction._buildTitle(separator);\n        if (childTitle) {\n          childTitles.push(childTitle);\n        }\n      }\n    }\n\n    if (childTitles.length) {\n      title = childTitles.join(separator) + (title ? separator : '') + title;\n    }\n\n    if (this.router.title) {\n      title += (title ? separator : '') + this.router.transformTitle(this.router.title);\n    }\n\n    return title;\n  };\n\n  return NavigationInstruction;\n}();\n\nfunction prune(instruction) {\n  instruction.previousInstruction = null;\n  instruction.plan = null;\n}\n\nvar NavModel = exports.NavModel = function () {\n  function NavModel(router, relativeHref) {\n    \n\n    this.isActive = false;\n    this.title = null;\n    this.href = null;\n    this.relativeHref = null;\n    this.settings = {};\n    this.config = null;\n\n    this.router = router;\n    this.relativeHref = relativeHref;\n  }\n\n  NavModel.prototype.setTitle = function setTitle(title) {\n    this.title = title;\n\n    if (this.isActive) {\n      this.router.updateTitle();\n    }\n  };\n\n  return NavModel;\n}();\n\nfunction isNavigationCommand(obj) {\n  return obj && typeof obj.navigate === 'function';\n}\n\nvar Redirect = exports.Redirect = function () {\n  function Redirect(url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    \n\n    this.url = url;\n    this.options = Object.assign({ trigger: true, replace: true }, options);\n    this.shouldContinueProcessing = false;\n  }\n\n  Redirect.prototype.setRouter = function setRouter(router) {\n    this.router = router;\n  };\n\n  Redirect.prototype.navigate = function navigate(appRouter) {\n    var navigatingRouter = this.options.useAppRouter ? appRouter : this.router || appRouter;\n    navigatingRouter.navigate(this.url, this.options);\n  };\n\n  return Redirect;\n}();\n\nvar RedirectToRoute = exports.RedirectToRoute = function () {\n  function RedirectToRoute(route) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    \n\n    this.route = route;\n    this.params = params;\n    this.options = Object.assign({ trigger: true, replace: true }, options);\n    this.shouldContinueProcessing = false;\n  }\n\n  RedirectToRoute.prototype.setRouter = function setRouter(router) {\n    this.router = router;\n  };\n\n  RedirectToRoute.prototype.navigate = function navigate(appRouter) {\n    var navigatingRouter = this.options.useAppRouter ? appRouter : this.router || appRouter;\n    navigatingRouter.navigateToRoute(this.route, this.params, this.options);\n  };\n\n  return RedirectToRoute;\n}();\n\nvar pipelineStatus = exports.pipelineStatus = {\n  completed: 'completed',\n  canceled: 'canceled',\n  rejected: 'rejected',\n  running: 'running'\n};\n\nvar Pipeline = exports.Pipeline = function () {\n  function Pipeline() {\n    \n\n    this.steps = [];\n  }\n\n  Pipeline.prototype.addStep = function addStep(step) {\n    var run = void 0;\n\n    if (typeof step === 'function') {\n      run = step;\n    } else if (typeof step.getSteps === 'function') {\n      var steps = step.getSteps();\n      for (var i = 0, l = steps.length; i < l; i++) {\n        this.addStep(steps[i]);\n      }\n\n      return this;\n    } else {\n      run = step.run.bind(step);\n    }\n\n    this.steps.push(run);\n\n    return this;\n  };\n\n  Pipeline.prototype.run = function run(instruction) {\n    var index = -1;\n    var steps = this.steps;\n\n    function next() {\n      index++;\n\n      if (index < steps.length) {\n        var currentStep = steps[index];\n\n        try {\n          return currentStep(instruction, next);\n        } catch (e) {\n          return next.reject(e);\n        }\n      } else {\n        return next.complete();\n      }\n    }\n\n    next.complete = createCompletionHandler(next, pipelineStatus.completed);\n    next.cancel = createCompletionHandler(next, pipelineStatus.canceled);\n    next.reject = createCompletionHandler(next, pipelineStatus.rejected);\n\n    return next();\n  };\n\n  return Pipeline;\n}();\n\nfunction createCompletionHandler(next, status) {\n  return function (output) {\n    return Promise.resolve({ status: status, output: output, completed: status === pipelineStatus.completed });\n  };\n}\n\nvar RouterConfiguration = exports.RouterConfiguration = function () {\n  function RouterConfiguration() {\n    \n\n    this.instructions = [];\n    this.options = {};\n    this.pipelineSteps = [];\n  }\n\n  RouterConfiguration.prototype.addPipelineStep = function addPipelineStep(name, step) {\n    if (step === null || step === undefined) {\n      throw new Error('Pipeline step cannot be null or undefined.');\n    }\n    this.pipelineSteps.push({ name: name, step: step });\n    return this;\n  };\n\n  RouterConfiguration.prototype.addAuthorizeStep = function addAuthorizeStep(step) {\n    return this.addPipelineStep('authorize', step);\n  };\n\n  RouterConfiguration.prototype.addPreActivateStep = function addPreActivateStep(step) {\n    return this.addPipelineStep('preActivate', step);\n  };\n\n  RouterConfiguration.prototype.addPreRenderStep = function addPreRenderStep(step) {\n    return this.addPipelineStep('preRender', step);\n  };\n\n  RouterConfiguration.prototype.addPostRenderStep = function addPostRenderStep(step) {\n    return this.addPipelineStep('postRender', step);\n  };\n\n  RouterConfiguration.prototype.fallbackRoute = function fallbackRoute(fragment) {\n    this._fallbackRoute = fragment;\n    return this;\n  };\n\n  RouterConfiguration.prototype.map = function map(route) {\n    if (Array.isArray(route)) {\n      route.forEach(this.map.bind(this));\n      return this;\n    }\n\n    return this.mapRoute(route);\n  };\n\n  RouterConfiguration.prototype.useViewPortDefaults = function useViewPortDefaults(viewPortConfig) {\n    this.viewPortDefaults = viewPortConfig;\n    return this;\n  };\n\n  RouterConfiguration.prototype.mapRoute = function mapRoute(config) {\n    this.instructions.push(function (router) {\n      var routeConfigs = _ensureArrayWithSingleRoutePerConfig(config);\n\n      var navModel = void 0;\n      for (var i = 0, ii = routeConfigs.length; i < ii; ++i) {\n        var _routeConfig = routeConfigs[i];\n        _routeConfig.settings = _routeConfig.settings || {};\n        if (!navModel) {\n          navModel = router.createNavModel(_routeConfig);\n        }\n\n        router.addRoute(_routeConfig, navModel);\n      }\n    });\n\n    return this;\n  };\n\n  RouterConfiguration.prototype.mapUnknownRoutes = function mapUnknownRoutes(config) {\n    this.unknownRouteConfig = config;\n    return this;\n  };\n\n  RouterConfiguration.prototype.exportToRouter = function exportToRouter(router) {\n    var instructions = this.instructions;\n    for (var i = 0, ii = instructions.length; i < ii; ++i) {\n      instructions[i](router);\n    }\n\n    if (this.title) {\n      router.title = this.title;\n    }\n\n    if (this.titleSeparator) {\n      router.titleSeparator = this.titleSeparator;\n    }\n\n    if (this.unknownRouteConfig) {\n      router.handleUnknownRoutes(this.unknownRouteConfig);\n    }\n\n    if (this._fallbackRoute) {\n      router.fallbackRoute = this._fallbackRoute;\n    }\n\n    if (this.viewPortDefaults) {\n      router.useViewPortDefaults(this.viewPortDefaults);\n    }\n\n    Object.assign(router.options, this.options);\n\n    var pipelineSteps = this.pipelineSteps;\n    if (pipelineSteps.length) {\n      if (!router.isRoot) {\n        throw new Error('Pipeline steps can only be added to the root router');\n      }\n\n      var pipelineProvider = router.pipelineProvider;\n      for (var _i = 0, _ii = pipelineSteps.length; _i < _ii; ++_i) {\n        var _pipelineSteps$_i = pipelineSteps[_i],\n            _name = _pipelineSteps$_i.name,\n            _step = _pipelineSteps$_i.step;\n\n        pipelineProvider.addStep(_name, _step);\n      }\n    }\n  };\n\n  return RouterConfiguration;\n}();\n\nvar activationStrategy = exports.activationStrategy = {\n  noChange: 'no-change',\n  invokeLifecycle: 'invoke-lifecycle',\n  replace: 'replace'\n};\n\nvar BuildNavigationPlanStep = exports.BuildNavigationPlanStep = function () {\n  function BuildNavigationPlanStep() {\n    \n  }\n\n  BuildNavigationPlanStep.prototype.run = function run(navigationInstruction, next) {\n    return _buildNavigationPlan(navigationInstruction).then(function (plan) {\n      if (plan instanceof Redirect) {\n        return next.cancel(plan);\n      }\n      navigationInstruction.plan = plan;\n      return next();\n    }).catch(next.cancel);\n  };\n\n  return BuildNavigationPlanStep;\n}();\n\nfunction _buildNavigationPlan(instruction, forceLifecycleMinimum) {\n  var config = instruction.config;\n\n  if ('redirect' in config) {\n    var _router = instruction.router;\n    return _router._createNavigationInstruction(config.redirect).then(function (newInstruction) {\n      var params = {};\n      for (var _key2 in newInstruction.params) {\n        var val = newInstruction.params[_key2];\n        if (typeof val === 'string' && val[0] === ':') {\n          val = val.slice(1);\n\n          if (val in instruction.params) {\n            params[_key2] = instruction.params[val];\n          }\n        } else {\n          params[_key2] = newInstruction.params[_key2];\n        }\n      }\n      var redirectLocation = _router.generate(newInstruction.config.name, params, instruction.options);\n\n      if (instruction.queryString) {\n        redirectLocation += '?' + instruction.queryString;\n      }\n\n      return Promise.resolve(new Redirect(redirectLocation));\n    });\n  }\n\n  var prev = instruction.previousInstruction;\n  var plan = {};\n  var defaults = instruction.router.viewPortDefaults;\n\n  if (prev) {\n    var newParams = hasDifferentParameterValues(prev, instruction);\n    var pending = [];\n\n    var _loop2 = function _loop2(viewPortName) {\n      var prevViewPortInstruction = prev.viewPortInstructions[viewPortName];\n      var nextViewPortConfig = viewPortName in config.viewPorts ? config.viewPorts[viewPortName] : prevViewPortInstruction;\n      if (nextViewPortConfig.moduleId === null && viewPortName in instruction.router.viewPortDefaults) {\n        nextViewPortConfig = defaults[viewPortName];\n      }\n\n      var viewPortPlan = plan[viewPortName] = {\n        name: viewPortName,\n        config: nextViewPortConfig,\n        prevComponent: prevViewPortInstruction.component,\n        prevModuleId: prevViewPortInstruction.moduleId\n      };\n\n      if (prevViewPortInstruction.moduleId !== nextViewPortConfig.moduleId) {\n        viewPortPlan.strategy = activationStrategy.replace;\n      } else if ('determineActivationStrategy' in prevViewPortInstruction.component.viewModel) {\n        var _prevViewPortInstruct;\n\n        viewPortPlan.strategy = (_prevViewPortInstruct = prevViewPortInstruction.component.viewModel).determineActivationStrategy.apply(_prevViewPortInstruct, instruction.lifecycleArgs);\n      } else if (config.activationStrategy) {\n        viewPortPlan.strategy = config.activationStrategy;\n      } else if (newParams || forceLifecycleMinimum) {\n        viewPortPlan.strategy = activationStrategy.invokeLifecycle;\n      } else {\n        viewPortPlan.strategy = activationStrategy.noChange;\n      }\n\n      if (viewPortPlan.strategy !== activationStrategy.replace && prevViewPortInstruction.childRouter) {\n        var path = instruction.getWildcardPath();\n        var task = prevViewPortInstruction.childRouter._createNavigationInstruction(path, instruction).then(function (childInstruction) {\n          viewPortPlan.childNavigationInstruction = childInstruction;\n\n          return _buildNavigationPlan(childInstruction, viewPortPlan.strategy === activationStrategy.invokeLifecycle).then(function (childPlan) {\n            if (childPlan instanceof Redirect) {\n              return Promise.reject(childPlan);\n            }\n            childInstruction.plan = childPlan;\n          });\n        });\n\n        pending.push(task);\n      }\n    };\n\n    for (var viewPortName in prev.viewPortInstructions) {\n      _loop2(viewPortName);\n    }\n\n    return Promise.all(pending).then(function () {\n      return plan;\n    });\n  }\n\n  for (var viewPortName in config.viewPorts) {\n    var viewPortConfig = config.viewPorts[viewPortName];\n    if (viewPortConfig.moduleId === null && viewPortName in instruction.router.viewPortDefaults) {\n      viewPortConfig = defaults[viewPortName];\n    }\n    plan[viewPortName] = {\n      name: viewPortName,\n      strategy: activationStrategy.replace,\n      config: viewPortConfig\n    };\n  }\n\n  return Promise.resolve(plan);\n}\n\nfunction hasDifferentParameterValues(prev, next) {\n  var prevParams = prev.params;\n  var nextParams = next.params;\n  var nextWildCardName = next.config.hasChildRouter ? next.getWildCardName() : null;\n\n  for (var _key3 in nextParams) {\n    if (_key3 === nextWildCardName) {\n      continue;\n    }\n\n    if (prevParams[_key3] !== nextParams[_key3]) {\n      return true;\n    }\n  }\n\n  for (var _key4 in prevParams) {\n    if (_key4 === nextWildCardName) {\n      continue;\n    }\n\n    if (prevParams[_key4] !== nextParams[_key4]) {\n      return true;\n    }\n  }\n\n  if (!next.options.compareQueryParams) {\n    return false;\n  }\n\n  var prevQueryParams = prev.queryParams;\n  var nextQueryParams = next.queryParams;\n  for (var _key5 in nextQueryParams) {\n    if (prevQueryParams[_key5] !== nextQueryParams[_key5]) {\n      return true;\n    }\n  }\n\n  for (var _key6 in prevQueryParams) {\n    if (prevQueryParams[_key6] !== nextQueryParams[_key6]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar Router = exports.Router = function () {\n  function Router(container, history) {\n    var _this3 = this;\n\n    \n\n    this.parent = null;\n    this.options = {};\n    this.viewPortDefaults = {};\n\n    this.transformTitle = function (title) {\n      if (_this3.parent) {\n        return _this3.parent.transformTitle(title);\n      }\n      return title;\n    };\n\n    this.container = container;\n    this.history = history;\n    this.reset();\n  }\n\n  Router.prototype.reset = function reset() {\n    var _this4 = this;\n\n    this.viewPorts = {};\n    this.routes = [];\n    this.baseUrl = '';\n    this.isConfigured = false;\n    this.isNavigating = false;\n    this.isExplicitNavigation = false;\n    this.isExplicitNavigationBack = false;\n    this.isNavigatingFirst = false;\n    this.isNavigatingNew = false;\n    this.isNavigatingRefresh = false;\n    this.isNavigatingForward = false;\n    this.isNavigatingBack = false;\n    this.couldDeactivate = false;\n    this.navigation = [];\n    this.currentInstruction = null;\n    this.viewPortDefaults = {};\n    this._fallbackOrder = 100;\n    this._recognizer = new _aureliaRouteRecognizer.RouteRecognizer();\n    this._childRecognizer = new _aureliaRouteRecognizer.RouteRecognizer();\n    this._configuredPromise = new Promise(function (resolve) {\n      _this4._resolveConfiguredPromise = resolve;\n    });\n  };\n\n  Router.prototype.registerViewPort = function registerViewPort(viewPort, name) {\n    name = name || 'default';\n    this.viewPorts[name] = viewPort;\n  };\n\n  Router.prototype.ensureConfigured = function ensureConfigured() {\n    return this._configuredPromise;\n  };\n\n  Router.prototype.configure = function configure(callbackOrConfig) {\n    var _this5 = this;\n\n    this.isConfigured = true;\n\n    var result = callbackOrConfig;\n    var config = void 0;\n    if (typeof callbackOrConfig === 'function') {\n      config = new RouterConfiguration();\n      result = callbackOrConfig(config);\n    }\n\n    return Promise.resolve(result).then(function (c) {\n      if (c && c.exportToRouter) {\n        config = c;\n      }\n\n      config.exportToRouter(_this5);\n      _this5.isConfigured = true;\n      _this5._resolveConfiguredPromise();\n    });\n  };\n\n  Router.prototype.navigate = function navigate(fragment, options) {\n    if (!this.isConfigured && this.parent) {\n      return this.parent.navigate(fragment, options);\n    }\n\n    this.isExplicitNavigation = true;\n    return this.history.navigate(_resolveUrl(fragment, this.baseUrl, this.history._hasPushState), options);\n  };\n\n  Router.prototype.navigateToRoute = function navigateToRoute(route, params, options) {\n    var path = this.generate(route, params);\n    return this.navigate(path, options);\n  };\n\n  Router.prototype.navigateBack = function navigateBack() {\n    this.isExplicitNavigationBack = true;\n    this.history.navigateBack();\n  };\n\n  Router.prototype.createChild = function createChild(container) {\n    var childRouter = new Router(container || this.container.createChild(), this.history);\n    childRouter.parent = this;\n    return childRouter;\n  };\n\n  Router.prototype.generate = function generate(name, params) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var hasRoute = this._recognizer.hasRoute(name);\n    if ((!this.isConfigured || !hasRoute) && this.parent) {\n      return this.parent.generate(name, params, options);\n    }\n\n    if (!hasRoute) {\n      throw new Error('A route with name \\'' + name + '\\' could not be found. Check that `name: \\'' + name + '\\'` was specified in the route\\'s config.');\n    }\n\n    var path = this._recognizer.generate(name, params);\n    var rootedPath = _createRootedPath(path, this.baseUrl, this.history._hasPushState, options.absolute);\n    return options.absolute ? '' + this.history.getAbsoluteRoot() + rootedPath : rootedPath;\n  };\n\n  Router.prototype.createNavModel = function createNavModel(config) {\n    var navModel = new NavModel(this, 'href' in config ? config.href : config.route);\n    navModel.title = config.title;\n    navModel.order = config.nav;\n    navModel.href = config.href;\n    navModel.settings = config.settings;\n    navModel.config = config;\n\n    return navModel;\n  };\n\n  Router.prototype.addRoute = function addRoute(config, navModel) {\n    if (Array.isArray(config.route)) {\n      var routeConfigs = _ensureArrayWithSingleRoutePerConfig(config);\n      routeConfigs.forEach(this.addRoute.bind(this));\n      return;\n    }\n\n    validateRouteConfig(config, this.routes);\n\n    if (!('viewPorts' in config) && !config.navigationStrategy) {\n      config.viewPorts = {\n        'default': {\n          moduleId: config.moduleId,\n          view: config.view\n        }\n      };\n    }\n\n    if (!navModel) {\n      navModel = this.createNavModel(config);\n    }\n\n    this.routes.push(config);\n\n    var path = config.route;\n    if (path.charAt(0) === '/') {\n      path = path.substr(1);\n    }\n    var caseSensitive = config.caseSensitive === true;\n    var state = this._recognizer.add({ path: path, handler: config, caseSensitive: caseSensitive });\n\n    if (path) {\n      var _settings = config.settings;\n      delete config.settings;\n      var withChild = JSON.parse(JSON.stringify(config));\n      config.settings = _settings;\n      withChild.route = path + '/*childRoute';\n      withChild.hasChildRouter = true;\n      this._childRecognizer.add({\n        path: withChild.route,\n        handler: withChild,\n        caseSensitive: caseSensitive\n      });\n\n      withChild.navModel = navModel;\n      withChild.settings = config.settings;\n      withChild.navigationStrategy = config.navigationStrategy;\n    }\n\n    config.navModel = navModel;\n\n    if ((navModel.order || navModel.order === 0) && this.navigation.indexOf(navModel) === -1) {\n      if (!navModel.href && navModel.href !== '' && (state.types.dynamics || state.types.stars)) {\n        throw new Error('Invalid route config for \"' + config.route + '\" : dynamic routes must specify an \"href:\" to be included in the navigation model.');\n      }\n\n      if (typeof navModel.order !== 'number') {\n        navModel.order = ++this._fallbackOrder;\n      }\n\n      this.navigation.push(navModel);\n      this.navigation = this.navigation.sort(function (a, b) {\n        return a.order - b.order;\n      });\n    }\n  };\n\n  Router.prototype.hasRoute = function hasRoute(name) {\n    return !!(this._recognizer.hasRoute(name) || this.parent && this.parent.hasRoute(name));\n  };\n\n  Router.prototype.hasOwnRoute = function hasOwnRoute(name) {\n    return this._recognizer.hasRoute(name);\n  };\n\n  Router.prototype.handleUnknownRoutes = function handleUnknownRoutes(config) {\n    var _this6 = this;\n\n    if (!config) {\n      throw new Error('Invalid unknown route handler');\n    }\n\n    this.catchAllHandler = function (instruction) {\n      return _this6._createRouteConfig(config, instruction).then(function (c) {\n        instruction.config = c;\n        return instruction;\n      });\n    };\n  };\n\n  Router.prototype.updateTitle = function updateTitle() {\n    if (this.parent) {\n      return this.parent.updateTitle();\n    }\n\n    if (this.currentInstruction) {\n      this.currentInstruction._updateTitle();\n    }\n    return undefined;\n  };\n\n  Router.prototype.refreshNavigation = function refreshNavigation() {\n    var nav = this.navigation;\n\n    for (var i = 0, length = nav.length; i < length; i++) {\n      var _current = nav[i];\n      if (!_current.config.href) {\n        _current.href = _createRootedPath(_current.relativeHref, this.baseUrl, this.history._hasPushState);\n      } else {\n        _current.href = _normalizeAbsolutePath(_current.config.href, this.history._hasPushState);\n      }\n    }\n  };\n\n  Router.prototype.useViewPortDefaults = function useViewPortDefaults(viewPortDefaults) {\n    for (var viewPortName in viewPortDefaults) {\n      var viewPortConfig = viewPortDefaults[viewPortName];\n      this.viewPortDefaults[viewPortName] = {\n        moduleId: viewPortConfig.moduleId\n      };\n    }\n  };\n\n  Router.prototype._refreshBaseUrl = function _refreshBaseUrl() {\n    if (this.parent) {\n      this.baseUrl = generateBaseUrl(this.parent, this.parent.currentInstruction);\n    }\n  };\n\n  Router.prototype._createNavigationInstruction = function _createNavigationInstruction() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var parentInstruction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    var fragment = url;\n    var queryString = '';\n\n    var queryIndex = url.indexOf('?');\n    if (queryIndex !== -1) {\n      fragment = url.substr(0, queryIndex);\n      queryString = url.substr(queryIndex + 1);\n    }\n\n    var results = this._recognizer.recognize(url);\n    if (!results || !results.length) {\n      results = this._childRecognizer.recognize(url);\n    }\n\n    var instructionInit = {\n      fragment: fragment,\n      queryString: queryString,\n      config: null,\n      parentInstruction: parentInstruction,\n      previousInstruction: this.currentInstruction,\n      router: this,\n      options: {\n        compareQueryParams: this.options.compareQueryParams\n      }\n    };\n\n    var result = void 0;\n\n    if (results && results.length) {\n      var first = results[0];\n      var _instruction = new NavigationInstruction(Object.assign({}, instructionInit, {\n        params: first.params,\n        queryParams: first.queryParams || results.queryParams,\n        config: first.config || first.handler\n      }));\n\n      if (typeof first.handler === 'function') {\n        result = evaluateNavigationStrategy(_instruction, first.handler, first);\n      } else if (first.handler && typeof first.handler.navigationStrategy === 'function') {\n        result = evaluateNavigationStrategy(_instruction, first.handler.navigationStrategy, first.handler);\n      } else {\n        result = Promise.resolve(_instruction);\n      }\n    } else if (this.catchAllHandler) {\n      var _instruction2 = new NavigationInstruction(Object.assign({}, instructionInit, {\n        params: { path: fragment },\n        queryParams: results ? results.queryParams : {},\n        config: null }));\n\n      result = evaluateNavigationStrategy(_instruction2, this.catchAllHandler);\n    } else if (this.parent) {\n      var _router2 = this._parentCatchAllHandler(this.parent);\n\n      if (_router2) {\n        var newParentInstruction = this._findParentInstructionFromRouter(_router2, parentInstruction);\n\n        var _instruction3 = new NavigationInstruction(Object.assign({}, instructionInit, {\n          params: { path: fragment },\n          queryParams: results ? results.queryParams : {},\n          router: _router2,\n          parentInstruction: newParentInstruction,\n          parentCatchHandler: true,\n          config: null }));\n\n        result = evaluateNavigationStrategy(_instruction3, _router2.catchAllHandler);\n      }\n    }\n\n    if (result && parentInstruction) {\n      this.baseUrl = generateBaseUrl(this.parent, parentInstruction);\n    }\n\n    return result || Promise.reject(new Error('Route not found: ' + url));\n  };\n\n  Router.prototype._findParentInstructionFromRouter = function _findParentInstructionFromRouter(router, instruction) {\n    if (instruction.router === router) {\n      instruction.fragment = router.baseUrl;\n      return instruction;\n    } else if (instruction.parentInstruction) {\n      return this._findParentInstructionFromRouter(router, instruction.parentInstruction);\n    }\n    return undefined;\n  };\n\n  Router.prototype._parentCatchAllHandler = function _parentCatchAllHandler(router) {\n    if (router.catchAllHandler) {\n      return router;\n    } else if (router.parent) {\n      return this._parentCatchAllHandler(router.parent);\n    }\n    return false;\n  };\n\n  Router.prototype._createRouteConfig = function _createRouteConfig(config, instruction) {\n    var _this7 = this;\n\n    return Promise.resolve(config).then(function (c) {\n      if (typeof c === 'string') {\n        return { moduleId: c };\n      } else if (typeof c === 'function') {\n        return c(instruction);\n      }\n\n      return c;\n    }).then(function (c) {\n      return typeof c === 'string' ? { moduleId: c } : c;\n    }).then(function (c) {\n      c.route = instruction.params.path;\n      validateRouteConfig(c, _this7.routes);\n\n      if (!c.navModel) {\n        c.navModel = _this7.createNavModel(c);\n      }\n\n      return c;\n    });\n  };\n\n  _createClass(Router, [{\n    key: 'isRoot',\n    get: function get() {\n      return !this.parent;\n    }\n  }]);\n\n  return Router;\n}();\n\nfunction generateBaseUrl(router, instruction) {\n  return '' + (router.baseUrl || '') + (instruction.getBaseUrl() || '');\n}\n\nfunction validateRouteConfig(config, routes) {\n  if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) !== 'object') {\n    throw new Error('Invalid Route Config');\n  }\n\n  if (typeof config.route !== 'string') {\n    var _name2 = config.name || '(no name)';\n    throw new Error('Invalid Route Config for \"' + _name2 + '\": You must specify a \"route:\" pattern.');\n  }\n\n  if (!('redirect' in config || config.moduleId || config.navigationStrategy || config.viewPorts)) {\n    throw new Error('Invalid Route Config for \"' + config.route + '\": You must specify a \"moduleId:\", \"redirect:\", \"navigationStrategy:\", or \"viewPorts:\".');\n  }\n}\n\nfunction evaluateNavigationStrategy(instruction, evaluator, context) {\n  return Promise.resolve(evaluator.call(context, instruction)).then(function () {\n    if (!('viewPorts' in instruction.config)) {\n      instruction.config.viewPorts = {\n        'default': {\n          moduleId: instruction.config.moduleId\n        }\n      };\n    }\n\n    return instruction;\n  });\n}\n\nvar CanDeactivatePreviousStep = exports.CanDeactivatePreviousStep = function () {\n  function CanDeactivatePreviousStep() {\n    \n  }\n\n  CanDeactivatePreviousStep.prototype.run = function run(navigationInstruction, next) {\n    return processDeactivatable(navigationInstruction, 'canDeactivate', next);\n  };\n\n  return CanDeactivatePreviousStep;\n}();\n\nvar CanActivateNextStep = exports.CanActivateNextStep = function () {\n  function CanActivateNextStep() {\n    \n  }\n\n  CanActivateNextStep.prototype.run = function run(navigationInstruction, next) {\n    return processActivatable(navigationInstruction, 'canActivate', next);\n  };\n\n  return CanActivateNextStep;\n}();\n\nvar DeactivatePreviousStep = exports.DeactivatePreviousStep = function () {\n  function DeactivatePreviousStep() {\n    \n  }\n\n  DeactivatePreviousStep.prototype.run = function run(navigationInstruction, next) {\n    return processDeactivatable(navigationInstruction, 'deactivate', next, true);\n  };\n\n  return DeactivatePreviousStep;\n}();\n\nvar ActivateNextStep = exports.ActivateNextStep = function () {\n  function ActivateNextStep() {\n    \n  }\n\n  ActivateNextStep.prototype.run = function run(navigationInstruction, next) {\n    return processActivatable(navigationInstruction, 'activate', next, true);\n  };\n\n  return ActivateNextStep;\n}();\n\nfunction processDeactivatable(navigationInstruction, callbackName, next, ignoreResult) {\n  var plan = navigationInstruction.plan;\n  var infos = findDeactivatable(plan, callbackName);\n  var i = infos.length;\n\n  function inspect(val) {\n    if (ignoreResult || shouldContinue(val)) {\n      return iterate();\n    }\n\n    return next.cancel(val);\n  }\n\n  function iterate() {\n    if (i--) {\n      try {\n        var viewModel = infos[i];\n        var _result = viewModel[callbackName](navigationInstruction);\n        return processPotential(_result, inspect, next.cancel);\n      } catch (error) {\n        return next.cancel(error);\n      }\n    }\n\n    navigationInstruction.router.couldDeactivate = true;\n\n    return next();\n  }\n\n  return iterate();\n}\n\nfunction findDeactivatable(plan, callbackName) {\n  var list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var viewPortName in plan) {\n    var _viewPortPlan = plan[viewPortName];\n    var prevComponent = _viewPortPlan.prevComponent;\n\n    if ((_viewPortPlan.strategy === activationStrategy.invokeLifecycle || _viewPortPlan.strategy === activationStrategy.replace) && prevComponent) {\n      var viewModel = prevComponent.viewModel;\n\n      if (callbackName in viewModel) {\n        list.push(viewModel);\n      }\n    }\n\n    if (_viewPortPlan.strategy === activationStrategy.replace && prevComponent) {\n      addPreviousDeactivatable(prevComponent, callbackName, list);\n    } else if (_viewPortPlan.childNavigationInstruction) {\n      findDeactivatable(_viewPortPlan.childNavigationInstruction.plan, callbackName, list);\n    }\n  }\n\n  return list;\n}\n\nfunction addPreviousDeactivatable(component, callbackName, list) {\n  var childRouter = component.childRouter;\n\n  if (childRouter && childRouter.currentInstruction) {\n    var viewPortInstructions = childRouter.currentInstruction.viewPortInstructions;\n\n    for (var viewPortName in viewPortInstructions) {\n      var _viewPortInstruction2 = viewPortInstructions[viewPortName];\n      var prevComponent = _viewPortInstruction2.component;\n      var prevViewModel = prevComponent.viewModel;\n\n      if (callbackName in prevViewModel) {\n        list.push(prevViewModel);\n      }\n\n      addPreviousDeactivatable(prevComponent, callbackName, list);\n    }\n  }\n}\n\nfunction processActivatable(navigationInstruction, callbackName, next, ignoreResult) {\n  var infos = findActivatable(navigationInstruction, callbackName);\n  var length = infos.length;\n  var i = -1;\n\n  function inspect(val, router) {\n    if (ignoreResult || shouldContinue(val, router)) {\n      return iterate();\n    }\n\n    return next.cancel(val);\n  }\n\n  function iterate() {\n    i++;\n\n    if (i < length) {\n      try {\n        var _current2$viewModel;\n\n        var _current2 = infos[i];\n        var _result2 = (_current2$viewModel = _current2.viewModel)[callbackName].apply(_current2$viewModel, _current2.lifecycleArgs);\n        return processPotential(_result2, function (val) {\n          return inspect(val, _current2.router);\n        }, next.cancel);\n      } catch (error) {\n        return next.cancel(error);\n      }\n    }\n\n    return next();\n  }\n\n  return iterate();\n}\n\nfunction findActivatable(navigationInstruction, callbackName) {\n  var list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var router = arguments[3];\n\n  var plan = navigationInstruction.plan;\n\n  Object.keys(plan).filter(function (viewPortName) {\n    var viewPortPlan = plan[viewPortName];\n    var viewPortInstruction = navigationInstruction.viewPortInstructions[viewPortName];\n    var viewModel = viewPortInstruction.component.viewModel;\n\n    if ((viewPortPlan.strategy === activationStrategy.invokeLifecycle || viewPortPlan.strategy === activationStrategy.replace) && callbackName in viewModel) {\n      list.push({\n        viewModel: viewModel,\n        lifecycleArgs: viewPortInstruction.lifecycleArgs,\n        router: router\n      });\n    }\n\n    if (viewPortPlan.childNavigationInstruction) {\n      findActivatable(viewPortPlan.childNavigationInstruction, callbackName, list, viewPortInstruction.component.childRouter || router);\n    }\n  });\n\n  return list;\n}\n\nfunction shouldContinue(output, router) {\n  if (output instanceof Error) {\n    return false;\n  }\n\n  if (isNavigationCommand(output)) {\n    if (typeof output.setRouter === 'function') {\n      output.setRouter(router);\n    }\n\n    return !!output.shouldContinueProcessing;\n  }\n\n  if (output === undefined) {\n    return true;\n  }\n\n  return output;\n}\n\nvar SafeSubscription = function () {\n  function SafeSubscription(subscriptionFunc) {\n    \n\n    this._subscribed = true;\n    this._subscription = subscriptionFunc(this);\n\n    if (!this._subscribed) this.unsubscribe();\n  }\n\n  SafeSubscription.prototype.unsubscribe = function unsubscribe() {\n    if (this._subscribed && this._subscription) this._subscription.unsubscribe();\n\n    this._subscribed = false;\n  };\n\n  _createClass(SafeSubscription, [{\n    key: 'subscribed',\n    get: function get() {\n      return this._subscribed;\n    }\n  }]);\n\n  return SafeSubscription;\n}();\n\nfunction processPotential(obj, resolve, reject) {\n  if (obj && typeof obj.then === 'function') {\n    return Promise.resolve(obj).then(resolve).catch(reject);\n  }\n\n  if (obj && typeof obj.subscribe === 'function') {\n    var obs = obj;\n    return new SafeSubscription(function (sub) {\n      return obs.subscribe({\n        next: function next() {\n          if (sub.subscribed) {\n            sub.unsubscribe();\n            resolve(obj);\n          }\n        },\n        error: function error(_error) {\n          if (sub.subscribed) {\n            sub.unsubscribe();\n            reject(_error);\n          }\n        },\n        complete: function complete() {\n          if (sub.subscribed) {\n            sub.unsubscribe();\n            resolve(obj);\n          }\n        }\n      });\n    });\n  }\n\n  try {\n    return resolve(obj);\n  } catch (error) {\n    return reject(error);\n  }\n}\n\nvar RouteLoader = exports.RouteLoader = function () {\n  function RouteLoader() {\n    \n  }\n\n  RouteLoader.prototype.loadRoute = function loadRoute(router, config, navigationInstruction) {\n    throw Error('Route loaders must implement \"loadRoute(router, config, navigationInstruction)\".');\n  };\n\n  return RouteLoader;\n}();\n\nvar LoadRouteStep = exports.LoadRouteStep = function () {\n  LoadRouteStep.inject = function inject() {\n    return [RouteLoader];\n  };\n\n  function LoadRouteStep(routeLoader) {\n    \n\n    this.routeLoader = routeLoader;\n  }\n\n  LoadRouteStep.prototype.run = function run(navigationInstruction, next) {\n    return loadNewRoute(this.routeLoader, navigationInstruction).then(next).catch(next.cancel);\n  };\n\n  return LoadRouteStep;\n}();\n\nfunction loadNewRoute(routeLoader, navigationInstruction) {\n  var toLoad = determineWhatToLoad(navigationInstruction);\n  var loadPromises = toLoad.map(function (current) {\n    return loadRoute(routeLoader, current.navigationInstruction, current.viewPortPlan);\n  });\n\n  return Promise.all(loadPromises);\n}\n\nfunction determineWhatToLoad(navigationInstruction) {\n  var toLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var plan = navigationInstruction.plan;\n\n  for (var viewPortName in plan) {\n    var _viewPortPlan2 = plan[viewPortName];\n\n    if (_viewPortPlan2.strategy === activationStrategy.replace) {\n      toLoad.push({ viewPortPlan: _viewPortPlan2, navigationInstruction: navigationInstruction });\n\n      if (_viewPortPlan2.childNavigationInstruction) {\n        determineWhatToLoad(_viewPortPlan2.childNavigationInstruction, toLoad);\n      }\n    } else {\n      var _viewPortInstruction3 = navigationInstruction.addViewPortInstruction(viewPortName, _viewPortPlan2.strategy, _viewPortPlan2.prevModuleId, _viewPortPlan2.prevComponent);\n\n      if (_viewPortPlan2.childNavigationInstruction) {\n        _viewPortInstruction3.childNavigationInstruction = _viewPortPlan2.childNavigationInstruction;\n        determineWhatToLoad(_viewPortPlan2.childNavigationInstruction, toLoad);\n      }\n    }\n  }\n\n  return toLoad;\n}\n\nfunction loadRoute(routeLoader, navigationInstruction, viewPortPlan) {\n  var moduleId = viewPortPlan.config ? viewPortPlan.config.moduleId : null;\n\n  return loadComponent(routeLoader, navigationInstruction, viewPortPlan.config).then(function (component) {\n    var viewPortInstruction = navigationInstruction.addViewPortInstruction(viewPortPlan.name, viewPortPlan.strategy, moduleId, component);\n\n    var childRouter = component.childRouter;\n    if (childRouter) {\n      var path = navigationInstruction.getWildcardPath();\n\n      return childRouter._createNavigationInstruction(path, navigationInstruction).then(function (childInstruction) {\n        viewPortPlan.childNavigationInstruction = childInstruction;\n\n        return _buildNavigationPlan(childInstruction).then(function (childPlan) {\n          if (childPlan instanceof Redirect) {\n            return Promise.reject(childPlan);\n          }\n          childInstruction.plan = childPlan;\n          viewPortInstruction.childNavigationInstruction = childInstruction;\n\n          return loadNewRoute(routeLoader, childInstruction);\n        });\n      });\n    }\n\n    return undefined;\n  });\n}\n\nfunction loadComponent(routeLoader, navigationInstruction, config) {\n  var router = navigationInstruction.router;\n  var lifecycleArgs = navigationInstruction.lifecycleArgs;\n\n  return routeLoader.loadRoute(router, config, navigationInstruction).then(function (component) {\n    var viewModel = component.viewModel,\n        childContainer = component.childContainer;\n\n    component.router = router;\n    component.config = config;\n\n    if ('configureRouter' in viewModel) {\n      var childRouter = childContainer.getChildRouter();\n      component.childRouter = childRouter;\n\n      return childRouter.configure(function (c) {\n        return viewModel.configureRouter.apply(viewModel, [c, childRouter].concat(lifecycleArgs));\n      }).then(function () {\n        return component;\n      });\n    }\n\n    return component;\n  });\n}\n\nvar PipelineSlot = function () {\n  function PipelineSlot(container, name, alias) {\n    \n\n    this.steps = [];\n\n    this.container = container;\n    this.slotName = name;\n    this.slotAlias = alias;\n  }\n\n  PipelineSlot.prototype.getSteps = function getSteps() {\n    var _this8 = this;\n\n    return this.steps.map(function (x) {\n      return _this8.container.get(x);\n    });\n  };\n\n  return PipelineSlot;\n}();\n\nvar PipelineProvider = exports.PipelineProvider = function () {\n  PipelineProvider.inject = function inject() {\n    return [_aureliaDependencyInjection.Container];\n  };\n\n  function PipelineProvider(container) {\n    \n\n    this.container = container;\n    this.steps = [BuildNavigationPlanStep, CanDeactivatePreviousStep, LoadRouteStep, this._createPipelineSlot('authorize'), CanActivateNextStep, this._createPipelineSlot('preActivate', 'modelbind'), DeactivatePreviousStep, ActivateNextStep, this._createPipelineSlot('preRender', 'precommit'), CommitChangesStep, this._createPipelineSlot('postRender', 'postcomplete')];\n  }\n\n  PipelineProvider.prototype.createPipeline = function createPipeline() {\n    var _this9 = this;\n\n    var useCanDeactivateStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    var pipeline = new Pipeline();\n    this.steps.forEach(function (step) {\n      if (useCanDeactivateStep || step !== CanDeactivatePreviousStep) {\n        pipeline.addStep(_this9.container.get(step));\n      }\n    });\n    return pipeline;\n  };\n\n  PipelineProvider.prototype._findStep = function _findStep(name) {\n    return this.steps.find(function (x) {\n      return x.slotName === name || x.slotAlias === name;\n    });\n  };\n\n  PipelineProvider.prototype.addStep = function addStep(name, step) {\n    var found = this._findStep(name);\n    if (found) {\n      if (!found.steps.includes(step)) {\n        found.steps.push(step);\n      }\n    } else {\n      throw new Error('Invalid pipeline slot name: ' + name + '.');\n    }\n  };\n\n  PipelineProvider.prototype.removeStep = function removeStep(name, step) {\n    var slot = this._findStep(name);\n    if (slot) {\n      slot.steps.splice(slot.steps.indexOf(step), 1);\n    }\n  };\n\n  PipelineProvider.prototype._clearSteps = function _clearSteps() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var slot = this._findStep(name);\n    if (slot) {\n      slot.steps = [];\n    }\n  };\n\n  PipelineProvider.prototype.reset = function reset() {\n    this._clearSteps('authorize');\n    this._clearSteps('preActivate');\n    this._clearSteps('preRender');\n    this._clearSteps('postRender');\n  };\n\n  PipelineProvider.prototype._createPipelineSlot = function _createPipelineSlot(name, alias) {\n    return new PipelineSlot(this.container, name, alias);\n  };\n\n  return PipelineProvider;\n}();\n\nvar logger = LogManager.getLogger('app-router');\n\nvar AppRouter = exports.AppRouter = function (_Router) {\n  _inherits(AppRouter, _Router);\n\n  AppRouter.inject = function inject() {\n    return [_aureliaDependencyInjection.Container, _aureliaHistory.History, PipelineProvider, _aureliaEventAggregator.EventAggregator];\n  };\n\n  function AppRouter(container, history, pipelineProvider, events) {\n    \n\n    var _this10 = _possibleConstructorReturn(this, _Router.call(this, container, history));\n\n    _this10.pipelineProvider = pipelineProvider;\n    _this10.events = events;\n    return _this10;\n  }\n\n  AppRouter.prototype.reset = function reset() {\n    _Router.prototype.reset.call(this);\n    this.maxInstructionCount = 10;\n    if (!this._queue) {\n      this._queue = [];\n    } else {\n      this._queue.length = 0;\n    }\n  };\n\n  AppRouter.prototype.loadUrl = function loadUrl(url) {\n    var _this11 = this;\n\n    return this._createNavigationInstruction(url).then(function (instruction) {\n      return _this11._queueInstruction(instruction);\n    }).catch(function (error) {\n      logger.error(error);\n      restorePreviousLocation(_this11);\n    });\n  };\n\n  AppRouter.prototype.registerViewPort = function registerViewPort(viewPort, name) {\n    var _this12 = this;\n\n    _Router.prototype.registerViewPort.call(this, viewPort, name);\n\n    if (!this.isActive) {\n      var viewModel = this._findViewModel(viewPort);\n      if ('configureRouter' in viewModel) {\n        if (!this.isConfigured) {\n          var resolveConfiguredPromise = this._resolveConfiguredPromise;\n          this._resolveConfiguredPromise = function () {};\n          return this.configure(function (config) {\n            return viewModel.configureRouter(config, _this12);\n          }).then(function () {\n            _this12.activate();\n            resolveConfiguredPromise();\n          });\n        }\n      } else {\n        this.activate();\n      }\n    } else {\n      this._dequeueInstruction();\n    }\n\n    return Promise.resolve();\n  };\n\n  AppRouter.prototype.activate = function activate(options) {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    this.options = Object.assign({ routeHandler: this.loadUrl.bind(this) }, this.options, options);\n    this.history.activate(this.options);\n    this._dequeueInstruction();\n  };\n\n  AppRouter.prototype.deactivate = function deactivate() {\n    this.isActive = false;\n    this.history.deactivate();\n  };\n\n  AppRouter.prototype._queueInstruction = function _queueInstruction(instruction) {\n    var _this13 = this;\n\n    return new Promise(function (resolve) {\n      instruction.resolve = resolve;\n      _this13._queue.unshift(instruction);\n      _this13._dequeueInstruction();\n    });\n  };\n\n  AppRouter.prototype._dequeueInstruction = function _dequeueInstruction() {\n    var _this14 = this;\n\n    var instructionCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    return Promise.resolve().then(function () {\n      if (_this14.isNavigating && !instructionCount) {\n        return undefined;\n      }\n\n      var instruction = _this14._queue.shift();\n      _this14._queue.length = 0;\n\n      if (!instruction) {\n        return undefined;\n      }\n\n      _this14.isNavigating = true;\n\n      var navtracker = _this14.history.getState('NavigationTracker');\n      if (!navtracker && !_this14.currentNavigationTracker) {\n        _this14.isNavigatingFirst = true;\n        _this14.isNavigatingNew = true;\n      } else if (!navtracker) {\n        _this14.isNavigatingNew = true;\n      } else if (!_this14.currentNavigationTracker) {\n        _this14.isNavigatingRefresh = true;\n      } else if (_this14.currentNavigationTracker < navtracker) {\n        _this14.isNavigatingForward = true;\n      } else if (_this14.currentNavigationTracker > navtracker) {\n        _this14.isNavigatingBack = true;\n      }if (!navtracker) {\n        navtracker = Date.now();\n        _this14.history.setState('NavigationTracker', navtracker);\n      }\n      _this14.currentNavigationTracker = navtracker;\n\n      instruction.previousInstruction = _this14.currentInstruction;\n\n      if (!instructionCount) {\n        _this14.events.publish('router:navigation:processing', { instruction: instruction });\n      } else if (instructionCount === _this14.maxInstructionCount - 1) {\n        logger.error(instructionCount + 1 + ' navigation instructions have been attempted without success. Restoring last known good location.');\n        restorePreviousLocation(_this14);\n        return _this14._dequeueInstruction(instructionCount + 1);\n      } else if (instructionCount > _this14.maxInstructionCount) {\n        throw new Error('Maximum navigation attempts exceeded. Giving up.');\n      }\n\n      var pipeline = _this14.pipelineProvider.createPipeline(!_this14.couldDeactivate);\n\n      return pipeline.run(instruction).then(function (result) {\n        return processResult(instruction, result, instructionCount, _this14);\n      }).catch(function (error) {\n        return { output: error instanceof Error ? error : new Error(error) };\n      }).then(function (result) {\n        return resolveInstruction(instruction, result, !!instructionCount, _this14);\n      });\n    });\n  };\n\n  AppRouter.prototype._findViewModel = function _findViewModel(viewPort) {\n    if (this.container.viewModel) {\n      return this.container.viewModel;\n    }\n\n    if (viewPort.container) {\n      var container = viewPort.container;\n\n      while (container) {\n        if (container.viewModel) {\n          this.container.viewModel = container.viewModel;\n          return container.viewModel;\n        }\n\n        container = container.parent;\n      }\n    }\n\n    return undefined;\n  };\n\n  return AppRouter;\n}(Router);\n\nfunction processResult(instruction, result, instructionCount, router) {\n  if (!(result && 'completed' in result && 'output' in result)) {\n    result = result || {};\n    result.output = new Error('Expected router pipeline to return a navigation result, but got [' + JSON.stringify(result) + '] instead.');\n  }\n\n  var finalResult = null;\n  var navigationCommandResult = null;\n  if (isNavigationCommand(result.output)) {\n    navigationCommandResult = result.output.navigate(router);\n  } else {\n    finalResult = result;\n\n    if (!result.completed) {\n      if (result.output instanceof Error) {\n        logger.error(result.output);\n      }\n\n      restorePreviousLocation(router);\n    }\n  }\n\n  return Promise.resolve(navigationCommandResult).then(function (_) {\n    return router._dequeueInstruction(instructionCount + 1);\n  }).then(function (innerResult) {\n    return finalResult || innerResult || result;\n  });\n}\n\nfunction resolveInstruction(instruction, result, isInnerInstruction, router) {\n  instruction.resolve(result);\n\n  var eventArgs = { instruction: instruction, result: result };\n  if (!isInnerInstruction) {\n    router.isNavigating = false;\n    router.isExplicitNavigation = false;\n    router.isExplicitNavigationBack = false;\n    router.isNavigatingFirst = false;\n    router.isNavigatingNew = false;\n    router.isNavigatingRefresh = false;\n    router.isNavigatingForward = false;\n    router.isNavigatingBack = false;\n    router.couldDeactivate = false;\n\n    var eventName = void 0;\n\n    if (result.output instanceof Error) {\n      eventName = 'error';\n    } else if (!result.completed) {\n      eventName = 'canceled';\n    } else {\n      var _queryString = instruction.queryString ? '?' + instruction.queryString : '';\n      router.history.previousLocation = instruction.fragment + _queryString;\n      eventName = 'success';\n    }\n\n    router.events.publish('router:navigation:' + eventName, eventArgs);\n    router.events.publish('router:navigation:complete', eventArgs);\n  } else {\n    router.events.publish('router:navigation:child:complete', eventArgs);\n  }\n\n  return result;\n}\n\nfunction restorePreviousLocation(router) {\n  var previousLocation = router.history.previousLocation;\n  if (previousLocation) {\n    router.navigate(router.history.previousLocation, { trigger: false, replace: true });\n  } else if (router.fallbackRoute) {\n    router.navigate(router.fallbackRoute, { trigger: true, replace: true });\n  } else {\n    logger.error('Router navigation failed, and no previous location or fallbackRoute could be restored.');\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-router/dist/commonjs/aurelia-router.js\n// module id = aurelia-router\n// module chunks = 1","var _class, _temp, _dec, _class2, _dec2, _class3, _class4, _temp2, _class5, _temp3;\n\nimport * as LogManager from 'aurelia-logging';\nimport { camelCase, SVGAnalyzer, bindingMode, connectable, enqueueBindingConnect, sourceContext, Parser, ObserverLocator, EventManager, ListenerExpression, BindingExpression, CallExpression, delegationStrategy, NameExpression, LiteralString } from 'aurelia-binding';\nimport { BehaviorInstruction, BindingLanguage } from 'aurelia-templating';\n\nexport let AttributeMap = (_temp = _class = class AttributeMap {\n\n  constructor(svg) {\n    this.elements = Object.create(null);\n    this.allElements = Object.create(null);\n\n    this.svg = svg;\n\n    this.registerUniversal('accesskey', 'accessKey');\n    this.registerUniversal('contenteditable', 'contentEditable');\n    this.registerUniversal('tabindex', 'tabIndex');\n    this.registerUniversal('textcontent', 'textContent');\n    this.registerUniversal('innerhtml', 'innerHTML');\n    this.registerUniversal('scrolltop', 'scrollTop');\n    this.registerUniversal('scrollleft', 'scrollLeft');\n    this.registerUniversal('readonly', 'readOnly');\n\n    this.register('label', 'for', 'htmlFor');\n\n    this.register('img', 'usemap', 'useMap');\n\n    this.register('input', 'maxlength', 'maxLength');\n    this.register('input', 'minlength', 'minLength');\n    this.register('input', 'formaction', 'formAction');\n    this.register('input', 'formenctype', 'formEncType');\n    this.register('input', 'formmethod', 'formMethod');\n    this.register('input', 'formnovalidate', 'formNoValidate');\n    this.register('input', 'formtarget', 'formTarget');\n\n    this.register('textarea', 'maxlength', 'maxLength');\n\n    this.register('td', 'rowspan', 'rowSpan');\n    this.register('td', 'colspan', 'colSpan');\n    this.register('th', 'rowspan', 'rowSpan');\n    this.register('th', 'colspan', 'colSpan');\n  }\n\n  register(elementName, attributeName, propertyName) {\n    elementName = elementName.toLowerCase();\n    attributeName = attributeName.toLowerCase();\n    const element = this.elements[elementName] = this.elements[elementName] || Object.create(null);\n    element[attributeName] = propertyName;\n  }\n\n  registerUniversal(attributeName, propertyName) {\n    attributeName = attributeName.toLowerCase();\n    this.allElements[attributeName] = propertyName;\n  }\n\n  map(elementName, attributeName) {\n    if (this.svg.isStandardSvgAttribute(elementName, attributeName)) {\n      return attributeName;\n    }\n    elementName = elementName.toLowerCase();\n    attributeName = attributeName.toLowerCase();\n    const element = this.elements[elementName];\n    if (element !== undefined && attributeName in element) {\n      return element[attributeName];\n    }\n    if (attributeName in this.allElements) {\n      return this.allElements[attributeName];\n    }\n\n    if (/(?:^data-)|(?:^aria-)|:/.test(attributeName)) {\n      return attributeName;\n    }\n    return camelCase(attributeName);\n  }\n}, _class.inject = [SVGAnalyzer], _temp);\n\nexport let InterpolationBindingExpression = class InterpolationBindingExpression {\n  constructor(observerLocator, targetProperty, parts, mode, lookupFunctions, attribute) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.parts = parts;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.attribute = this.attrToRemove = attribute;\n    this.discrete = false;\n  }\n\n  createBinding(target) {\n    if (this.parts.length === 3) {\n      return new ChildInterpolationBinding(target, this.observerLocator, this.parts[1], this.mode, this.lookupFunctions, this.targetProperty, this.parts[0], this.parts[2]);\n    }\n    return new InterpolationBinding(this.observerLocator, this.parts, target, this.targetProperty, this.mode, this.lookupFunctions);\n  }\n};\n\nfunction validateTarget(target, propertyName) {\n  if (propertyName === 'style') {\n    LogManager.getLogger('templating-binding').info('Internet Explorer does not support interpolation in \"style\" attributes.  Use the style attribute\\'s alias, \"css\" instead.');\n  } else if (target.parentElement && target.parentElement.nodeName === 'TEXTAREA' && propertyName === 'textContent') {\n    throw new Error('Interpolation binding cannot be used in the content of a textarea element.  Use <textarea value.bind=\"expression\"></textarea> instead.');\n  }\n}\n\nexport let InterpolationBinding = class InterpolationBinding {\n  constructor(observerLocator, parts, target, targetProperty, mode, lookupFunctions) {\n    validateTarget(target, targetProperty);\n    this.observerLocator = observerLocator;\n    this.parts = parts;\n    this.target = target;\n    this.targetProperty = targetProperty;\n    this.targetAccessor = observerLocator.getAccessor(target, targetProperty);\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  interpolate() {\n    if (this.isBound) {\n      let value = '';\n      let parts = this.parts;\n      for (let i = 0, ii = parts.length; i < ii; i++) {\n        value += i % 2 === 0 ? parts[i] : this[`childBinding${i}`].value;\n      }\n      this.targetAccessor.setValue(value, this.target, this.targetProperty);\n    }\n  }\n\n  updateOneTimeBindings() {\n    for (let i = 1, ii = this.parts.length; i < ii; i += 2) {\n      let child = this[`childBinding${i}`];\n      if (child.mode === bindingMode.oneTime) {\n        child.call();\n      }\n    }\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.source = source;\n\n    let parts = this.parts;\n    for (let i = 1, ii = parts.length; i < ii; i += 2) {\n      let binding = new ChildInterpolationBinding(this, this.observerLocator, parts[i], this.mode, this.lookupFunctions);\n      binding.bind(source);\n      this[`childBinding${i}`] = binding;\n    }\n\n    this.isBound = true;\n    this.interpolate();\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    this.source = null;\n    let parts = this.parts;\n    for (let i = 1, ii = parts.length; i < ii; i += 2) {\n      let name = `childBinding${i}`;\n      this[name].unbind();\n    }\n  }\n};\n\nexport let ChildInterpolationBinding = (_dec = connectable(), _dec(_class2 = class ChildInterpolationBinding {\n  constructor(target, observerLocator, sourceExpression, mode, lookupFunctions, targetProperty, left, right) {\n    if (target instanceof InterpolationBinding) {\n      this.parent = target;\n    } else {\n      validateTarget(target, targetProperty);\n      this.target = target;\n      this.targetProperty = targetProperty;\n      this.targetAccessor = observerLocator.getAccessor(target, targetProperty);\n    }\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.left = left;\n    this.right = right;\n  }\n\n  updateTarget(value) {\n    value = value === null || value === undefined ? '' : value.toString();\n    if (value !== this.value) {\n      this.value = value;\n      if (this.parent) {\n        this.parent.interpolate();\n      } else {\n        this.targetAccessor.setValue(this.left + value + this.right, this.target, this.targetProperty);\n      }\n    }\n  }\n\n  call() {\n    if (!this.isBound) {\n      return;\n    }\n\n    this.rawValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n    this.updateTarget(this.rawValue);\n\n    if (this.mode !== bindingMode.oneTime) {\n      this._version++;\n      this.sourceExpression.connect(this, this.source);\n      if (this.rawValue instanceof Array) {\n        this.observeArray(this.rawValue);\n      }\n      this.unobserve(false);\n    }\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    let sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    this.rawValue = sourceExpression.evaluate(source, this.lookupFunctions);\n    this.updateTarget(this.rawValue);\n\n    if (this.mode === bindingMode.oneWay) {\n      enqueueBindingConnect(this);\n    }\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    let sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.value = null;\n    this.rawValue = null;\n    this.unobserve(true);\n  }\n\n  connect(evaluate) {\n    if (!this.isBound) {\n      return;\n    }\n    if (evaluate) {\n      this.rawValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      this.updateTarget(this.rawValue);\n    }\n    this.sourceExpression.connect(this, this.source);\n    if (this.rawValue instanceof Array) {\n      this.observeArray(this.rawValue);\n    }\n  }\n}) || _class2);\n\nexport let LetExpression = class LetExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n  }\n\n  createBinding() {\n    return new LetBinding(this.observerLocator, this.sourceExpression, this.targetProperty, this.lookupFunctions, this.toBindingContext);\n  }\n};\n\nexport let LetBinding = (_dec2 = connectable(), _dec2(_class3 = class LetBinding {\n  constructor(observerLocator, sourceExpression, targetProperty, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.source = null;\n    this.target = null;\n    this.toBindingContext = toBindingContext;\n  }\n\n  updateTarget() {\n    const value = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n    this.target[this.targetProperty] = value;\n  }\n\n  call(context) {\n    if (!this.isBound) {\n      return;\n    }\n    if (context === sourceContext) {\n      this.updateTarget();\n      return;\n    }\n    throw new Error(`Unexpected call context ${context}`);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.source = source;\n    this.target = this.toBindingContext ? source.bindingContext : source.overrideContext;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    enqueueBindingConnect(this);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.target = null;\n    this.unobserve(true);\n  }\n\n  connect() {\n    if (!this.isBound) {\n      return;\n    }\n    this.updateTarget();\n    this.sourceExpression.connect(this, this.source);\n  }\n}) || _class3);\n\nexport let LetInterpolationBindingExpression = class LetInterpolationBindingExpression {\n  constructor(observerLocator, targetProperty, parts, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.parts = parts;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n  }\n\n  createBinding() {\n    return new LetInterpolationBinding(this.observerLocator, this.targetProperty, this.parts, this.lookupFunctions, this.toBindingContext);\n  }\n};\n\nexport let LetInterpolationBinding = class LetInterpolationBinding {\n  constructor(observerLocator, targetProperty, parts, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.parts = parts;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n    this.target = null;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.source = source;\n    this.target = this.toBindingContext ? source.bindingContext : source.overrideContext;\n\n    this.interpolationBinding = this.createInterpolationBinding();\n    this.interpolationBinding.bind(source);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    this.source = null;\n    this.target = null;\n    this.interpolationBinding.unbind();\n    this.interpolationBinding = null;\n  }\n\n  createInterpolationBinding() {\n    if (this.parts.length === 3) {\n      return new ChildInterpolationBinding(this.target, this.observerLocator, this.parts[1], bindingMode.oneWay, this.lookupFunctions, this.targetProperty, this.parts[0], this.parts[2]);\n    }\n    return new InterpolationBinding(this.observerLocator, this.parts, this.target, this.targetProperty, bindingMode.oneWay, this.lookupFunctions);\n  }\n};\n\nexport let SyntaxInterpreter = (_temp2 = _class4 = class SyntaxInterpreter {\n\n  constructor(parser, observerLocator, eventManager, attributeMap) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n    this.eventManager = eventManager;\n    this.attributeMap = attributeMap;\n  }\n\n  interpret(resources, element, info, existingInstruction, context) {\n    if (info.command in this) {\n      return this[info.command](resources, element, info, existingInstruction, context);\n    }\n\n    return this.handleUnknownCommand(resources, element, info, existingInstruction, context);\n  }\n\n  handleUnknownCommand(resources, element, info, existingInstruction, context) {\n    LogManager.getLogger('templating-binding').warn('Unknown binding command.', info);\n    return existingInstruction;\n  }\n\n  determineDefaultBindingMode(element, attrName, context) {\n    let tagName = element.tagName.toLowerCase();\n\n    if (tagName === 'input' && (attrName === 'value' || attrName === 'files') && element.type !== 'checkbox' && element.type !== 'radio' || tagName === 'input' && attrName === 'checked' && (element.type === 'checkbox' || element.type === 'radio') || (tagName === 'textarea' || tagName === 'select') && attrName === 'value' || (attrName === 'textcontent' || attrName === 'innerhtml') && element.contentEditable === 'true' || attrName === 'scrolltop' || attrName === 'scrollleft') {\n      return bindingMode.twoWay;\n    }\n\n    if (context && attrName in context.attributes && context.attributes[attrName] && context.attributes[attrName].defaultBindingMode >= bindingMode.oneTime) {\n      return context.attributes[attrName].defaultBindingMode;\n    }\n\n    return bindingMode.oneWay;\n  }\n\n  bind(resources, element, info, existingInstruction, context) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), info.defaultBindingMode === undefined || info.defaultBindingMode === null ? this.determineDefaultBindingMode(element, info.attrName, context) : info.defaultBindingMode, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  trigger(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.none, true, resources.lookupFunctions);\n  }\n\n  capture(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.capturing, true, resources.lookupFunctions);\n  }\n\n  delegate(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.bubbling, true, resources.lookupFunctions);\n  }\n\n  call(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new CallExpression(this.observerLocator, info.attrName, this.parser.parse(info.attrValue), resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  options(resources, element, info, existingInstruction, context) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n    let attrValue = info.attrValue;\n    let language = this.language;\n    let name = null;\n    let target = '';\n    let current;\n    let i;\n    let ii;\n    let inString = false;\n    let inEscape = false;\n    let foundName = false;\n\n    for (i = 0, ii = attrValue.length; i < ii; ++i) {\n      current = attrValue[i];\n\n      if (current === ';' && !inString) {\n        if (!foundName) {\n          name = this._getPrimaryPropertyName(resources, context);\n        }\n        info = language.inspectAttribute(resources, '?', name, target.trim());\n        language.createAttributeInstruction(resources, element, info, instruction, context);\n\n        if (!instruction.attributes[info.attrName]) {\n          instruction.attributes[info.attrName] = info.attrValue;\n        }\n\n        target = '';\n        name = null;\n      } else if (current === ':' && name === null) {\n        foundName = true;\n        name = target.trim();\n        target = '';\n      } else if (current === '\\\\') {\n        target += current;\n        inEscape = true;\n        continue;\n      } else {\n        target += current;\n\n        if (name !== null && inEscape === false && current === '\\'') {\n          inString = !inString;\n        }\n      }\n\n      inEscape = false;\n    }\n\n    if (!foundName) {\n      name = this._getPrimaryPropertyName(resources, context);\n    }\n\n    if (name !== null) {\n      info = language.inspectAttribute(resources, '?', name, target.trim());\n      language.createAttributeInstruction(resources, element, info, instruction, context);\n\n      if (!instruction.attributes[info.attrName]) {\n        instruction.attributes[info.attrName] = info.attrValue;\n      }\n    }\n\n    return instruction;\n  }\n\n  _getPrimaryPropertyName(resources, context) {\n    let type = resources.getAttribute(context.attributeName);\n    if (type && type.primaryProperty) {\n      return type.primaryProperty.attribute;\n    }\n    return null;\n  }\n\n  'for'(resources, element, info, existingInstruction) {\n    let parts;\n    let keyValue;\n    let instruction;\n    let attrValue;\n    let isDestructuring;\n\n    attrValue = info.attrValue;\n    isDestructuring = attrValue.match(/^ *[[].+[\\]]/);\n    parts = isDestructuring ? attrValue.split('of ') : attrValue.split(' of ');\n\n    if (parts.length !== 2) {\n      throw new Error('Incorrect syntax for \"for\". The form is: \"$local of $items\" or \"[$key, $value] of $items\".');\n    }\n\n    instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    if (isDestructuring) {\n      keyValue = parts[0].replace(/[[\\]]/g, '').replace(/,/g, ' ').replace(/\\s+/g, ' ').trim().split(' ');\n      instruction.attributes.key = keyValue[0];\n      instruction.attributes.value = keyValue[1];\n    } else {\n      instruction.attributes.local = parts[0];\n    }\n\n    instruction.attributes.items = new BindingExpression(this.observerLocator, 'items', this.parser.parse(parts[1]), bindingMode.oneWay, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'two-way'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.twoWay, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'to-view'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.toView, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'from-view'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.fromView, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'one-time'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.oneTime, resources.lookupFunctions);\n\n    return instruction;\n  }\n}, _class4.inject = [Parser, ObserverLocator, EventManager, AttributeMap], _temp2);\n\nSyntaxInterpreter.prototype['one-way'] = SyntaxInterpreter.prototype['to-view'];\n\nlet info = {};\n\nexport let TemplatingBindingLanguage = (_temp3 = _class5 = class TemplatingBindingLanguage extends BindingLanguage {\n\n  constructor(parser, observerLocator, syntaxInterpreter, attributeMap) {\n    super();\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n    this.syntaxInterpreter = syntaxInterpreter;\n    this.emptyStringExpression = this.parser.parse('\\'\\'');\n    syntaxInterpreter.language = this;\n    this.attributeMap = attributeMap;\n    this.toBindingContextAttr = 'to-binding-context';\n  }\n\n  inspectAttribute(resources, elementName, attrName, attrValue) {\n    let parts = attrName.split('.');\n\n    info.defaultBindingMode = null;\n\n    if (parts.length === 2) {\n      info.attrName = parts[0].trim();\n      info.attrValue = attrValue;\n      info.command = parts[1].trim();\n\n      if (info.command === 'ref') {\n        info.expression = new NameExpression(this.parser.parse(attrValue), info.attrName, resources.lookupFunctions);\n        info.command = null;\n        info.attrName = 'ref';\n      } else {\n        info.expression = null;\n      }\n    } else if (attrName === 'ref') {\n      info.attrName = attrName;\n      info.attrValue = attrValue;\n      info.command = null;\n      info.expression = new NameExpression(this.parser.parse(attrValue), 'element', resources.lookupFunctions);\n    } else {\n      info.attrName = attrName;\n      info.attrValue = attrValue;\n      info.command = null;\n      const interpolationParts = this.parseInterpolation(resources, attrValue);\n      if (interpolationParts === null) {\n        info.expression = null;\n      } else {\n        info.expression = new InterpolationBindingExpression(this.observerLocator, this.attributeMap.map(elementName, attrName), interpolationParts, bindingMode.oneWay, resources.lookupFunctions, attrName);\n      }\n    }\n\n    return info;\n  }\n\n  createAttributeInstruction(resources, element, theInfo, existingInstruction, context) {\n    let instruction;\n\n    if (theInfo.expression) {\n      if (theInfo.attrName === 'ref') {\n        return theInfo.expression;\n      }\n\n      instruction = existingInstruction || BehaviorInstruction.attribute(theInfo.attrName);\n      instruction.attributes[theInfo.attrName] = theInfo.expression;\n    } else if (theInfo.command) {\n      instruction = this.syntaxInterpreter.interpret(resources, element, theInfo, existingInstruction, context);\n    }\n\n    return instruction;\n  }\n\n  createLetExpressions(resources, letElement) {\n    let expressions = [];\n    let attributes = letElement.attributes;\n\n    let attr;\n\n    let parts;\n    let attrName;\n    let attrValue;\n    let command;\n    let toBindingContextAttr = this.toBindingContextAttr;\n    let toBindingContext = letElement.hasAttribute(toBindingContextAttr);\n    for (let i = 0, ii = attributes.length; ii > i; ++i) {\n      attr = attributes[i];\n      attrName = attr.name;\n      attrValue = attr.nodeValue;\n      parts = attrName.split('.');\n\n      if (attrName === toBindingContextAttr) {\n        continue;\n      }\n\n      if (parts.length === 2) {\n        command = parts[1];\n        if (command !== 'bind') {\n          LogManager.getLogger('templating-binding-language').warn(`Detected invalid let command. Expected \"${parts[0]}.bind\", given \"${attrName}\"`);\n          continue;\n        }\n        expressions.push(new LetExpression(this.observerLocator, camelCase(parts[0]), this.parser.parse(attrValue), resources.lookupFunctions, toBindingContext));\n      } else {\n        attrName = camelCase(attrName);\n        parts = this.parseInterpolation(resources, attrValue);\n        if (parts === null) {\n          LogManager.getLogger('templating-binding-language').warn(`Detected string literal in let bindings. Did you mean \"${attrName}.bind=${attrValue}\" or \"${attrName}=\\${${attrValue}}\" ?`);\n        }\n        if (parts) {\n          expressions.push(new LetInterpolationBindingExpression(this.observerLocator, attrName, parts, resources.lookupFunctions, toBindingContext));\n        } else {\n          expressions.push(new LetExpression(this.observerLocator, attrName, new LiteralString(attrValue), resources.lookupFunctions, toBindingContext));\n        }\n      }\n    }\n    return expressions;\n  }\n\n  inspectTextContent(resources, value) {\n    const parts = this.parseInterpolation(resources, value);\n    if (parts === null) {\n      return null;\n    }\n    return new InterpolationBindingExpression(this.observerLocator, 'textContent', parts, bindingMode.oneWay, resources.lookupFunctions, 'textContent');\n  }\n\n  parseInterpolation(resources, value) {\n    let i = value.indexOf('${', 0);\n    let ii = value.length;\n    let char;\n    let pos = 0;\n    let open = 0;\n    let quote = null;\n    let interpolationStart;\n    let parts;\n    let partIndex = 0;\n\n    while (i >= 0 && i < ii - 2) {\n      open = 1;\n      interpolationStart = i;\n      i += 2;\n\n      do {\n        char = value[i];\n        i++;\n\n        if (char === \"'\" || char === '\"') {\n          if (quote === null) {\n            quote = char;\n          } else if (quote === char) {\n            quote = null;\n          }\n          continue;\n        }\n\n        if (char === '\\\\') {\n          i++;\n          continue;\n        }\n\n        if (quote !== null) {\n          continue;\n        }\n\n        if (char === '{') {\n          open++;\n        } else if (char === '}') {\n          open--;\n        }\n      } while (open > 0 && i < ii);\n\n      if (open === 0) {\n        parts = parts || [];\n        if (value[interpolationStart - 1] === '\\\\' && value[interpolationStart - 2] !== '\\\\') {\n          parts[partIndex] = value.substring(pos, interpolationStart - 1) + value.substring(interpolationStart, i);\n          partIndex++;\n          parts[partIndex] = this.emptyStringExpression;\n          partIndex++;\n        } else {\n          parts[partIndex] = value.substring(pos, interpolationStart);\n          partIndex++;\n          parts[partIndex] = this.parser.parse(value.substring(interpolationStart + 2, i - 1));\n          partIndex++;\n        }\n        pos = i;\n        i = value.indexOf('${', i);\n      } else {\n        break;\n      }\n    }\n\n    if (partIndex === 0) {\n      return null;\n    }\n\n    parts[partIndex] = value.substr(pos);\n    return parts;\n  }\n}, _class5.inject = [Parser, ObserverLocator, SyntaxInterpreter, AttributeMap], _temp3);\n\nexport function configure(config) {\n  config.container.registerSingleton(BindingLanguage, TemplatingBindingLanguage);\n  config.container.registerAlias(BindingLanguage, TemplatingBindingLanguage);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-binding/dist/es2015/aurelia-templating-binding.js\n// module id = aurelia-templating-binding\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewsRequireLifecycle = exports.unwrapExpression = exports.updateOneTimeBinding = exports.isOneTime = exports.getItemsSourceExpression = exports.updateOverrideContext = exports.createFullOverrideContext = exports.NumberRepeatStrategy = exports.SetRepeatStrategy = exports.MapRepeatStrategy = exports.ArrayRepeatStrategy = exports.NullRepeatStrategy = exports.RepeatStrategyLocator = exports.AbstractRepeater = exports.UpdateTriggerBindingBehavior = exports.BindingSignaler = exports.SignalBindingBehavior = exports.SelfBindingBehavior = exports.DebounceBindingBehavior = exports.ThrottleBindingBehavior = exports.TwoWayBindingBehavior = exports.FromViewBindingBehavior = exports.ToViewBindingBehavior = exports.OneWayBindingBehavior = exports.OneTimeBindingBehavior = exports.AttrBindingBehavior = exports.configure = exports.Focus = exports.Replaceable = exports.SanitizeHTMLValueConverter = exports.HTMLSanitizer = exports.Hide = exports.Show = exports.Repeat = exports.With = exports.Else = exports.If = exports.Compose = undefined;\n\nvar _compose = require('./compose');\n\nvar _if = require('./if');\n\nvar _else = require('./else');\n\nvar _with = require('./with');\n\nvar _repeat = require('./repeat');\n\nvar _show = require('./show');\n\nvar _hide = require('./hide');\n\nvar _sanitizeHtml = require('./sanitize-html');\n\nvar _replaceable = require('./replaceable');\n\nvar _focus = require('./focus');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _cssResource = require('./css-resource');\n\nvar _htmlSanitizer = require('./html-sanitizer');\n\nvar _attrBindingBehavior = require('./attr-binding-behavior');\n\nvar _bindingModeBehaviors = require('./binding-mode-behaviors');\n\nvar _throttleBindingBehavior = require('./throttle-binding-behavior');\n\nvar _debounceBindingBehavior = require('./debounce-binding-behavior');\n\nvar _selfBindingBehavior = require('./self-binding-behavior');\n\nvar _signalBindingBehavior = require('./signal-binding-behavior');\n\nvar _bindingSignaler = require('./binding-signaler');\n\nvar _updateTriggerBindingBehavior = require('./update-trigger-binding-behavior');\n\nvar _abstractRepeater = require('./abstract-repeater');\n\nvar _repeatStrategyLocator = require('./repeat-strategy-locator');\n\nvar _htmlResourcePlugin = require('./html-resource-plugin');\n\nvar _nullRepeatStrategy = require('./null-repeat-strategy');\n\nvar _arrayRepeatStrategy = require('./array-repeat-strategy');\n\nvar _mapRepeatStrategy = require('./map-repeat-strategy');\n\nvar _setRepeatStrategy = require('./set-repeat-strategy');\n\nvar _numberRepeatStrategy = require('./number-repeat-strategy');\n\nvar _repeatUtilities = require('./repeat-utilities');\n\nvar _analyzeViewFactory = require('./analyze-view-factory');\n\nvar _aureliaHideStyle = require('./aurelia-hide-style');\n\nfunction configure(config) {\n  (0, _aureliaHideStyle.injectAureliaHideStyleAtHead)();\n\n  config.globalResources(_compose.Compose, _if.If, _else.Else, _with.With, _repeat.Repeat, _show.Show, _hide.Hide, _replaceable.Replaceable, _focus.Focus, _sanitizeHtml.SanitizeHTMLValueConverter, _bindingModeBehaviors.OneTimeBindingBehavior, _bindingModeBehaviors.OneWayBindingBehavior, _bindingModeBehaviors.ToViewBindingBehavior, _bindingModeBehaviors.FromViewBindingBehavior, _bindingModeBehaviors.TwoWayBindingBehavior, _throttleBindingBehavior.ThrottleBindingBehavior, _debounceBindingBehavior.DebounceBindingBehavior, _selfBindingBehavior.SelfBindingBehavior, _signalBindingBehavior.SignalBindingBehavior, _updateTriggerBindingBehavior.UpdateTriggerBindingBehavior, _attrBindingBehavior.AttrBindingBehavior);\n\n  (0, _htmlResourcePlugin.configure)(config);\n\n  var viewEngine = config.container.get(_aureliaTemplating.ViewEngine);\n  var styleResourcePlugin = {\n    fetch: function fetch(address) {\n      var _ref;\n\n      return _ref = {}, _ref[address] = (0, _cssResource._createCSSResource)(address), _ref;\n    }\n  };\n  ['.css', '.less', '.sass', '.scss', '.styl'].forEach(function (ext) {\n    return viewEngine.addResourcePlugin(ext, styleResourcePlugin);\n  });\n}\n\nexports.Compose = _compose.Compose;\nexports.If = _if.If;\nexports.Else = _else.Else;\nexports.With = _with.With;\nexports.Repeat = _repeat.Repeat;\nexports.Show = _show.Show;\nexports.Hide = _hide.Hide;\nexports.HTMLSanitizer = _htmlSanitizer.HTMLSanitizer;\nexports.SanitizeHTMLValueConverter = _sanitizeHtml.SanitizeHTMLValueConverter;\nexports.Replaceable = _replaceable.Replaceable;\nexports.Focus = _focus.Focus;\nexports.configure = configure;\nexports.AttrBindingBehavior = _attrBindingBehavior.AttrBindingBehavior;\nexports.OneTimeBindingBehavior = _bindingModeBehaviors.OneTimeBindingBehavior;\nexports.OneWayBindingBehavior = _bindingModeBehaviors.OneWayBindingBehavior;\nexports.ToViewBindingBehavior = _bindingModeBehaviors.ToViewBindingBehavior;\nexports.FromViewBindingBehavior = _bindingModeBehaviors.FromViewBindingBehavior;\nexports.TwoWayBindingBehavior = _bindingModeBehaviors.TwoWayBindingBehavior;\nexports.ThrottleBindingBehavior = _throttleBindingBehavior.ThrottleBindingBehavior;\nexports.DebounceBindingBehavior = _debounceBindingBehavior.DebounceBindingBehavior;\nexports.SelfBindingBehavior = _selfBindingBehavior.SelfBindingBehavior;\nexports.SignalBindingBehavior = _signalBindingBehavior.SignalBindingBehavior;\nexports.BindingSignaler = _bindingSignaler.BindingSignaler;\nexports.UpdateTriggerBindingBehavior = _updateTriggerBindingBehavior.UpdateTriggerBindingBehavior;\nexports.AbstractRepeater = _abstractRepeater.AbstractRepeater;\nexports.RepeatStrategyLocator = _repeatStrategyLocator.RepeatStrategyLocator;\nexports.NullRepeatStrategy = _nullRepeatStrategy.NullRepeatStrategy;\nexports.ArrayRepeatStrategy = _arrayRepeatStrategy.ArrayRepeatStrategy;\nexports.MapRepeatStrategy = _mapRepeatStrategy.MapRepeatStrategy;\nexports.SetRepeatStrategy = _setRepeatStrategy.SetRepeatStrategy;\nexports.NumberRepeatStrategy = _numberRepeatStrategy.NumberRepeatStrategy;\nexports.createFullOverrideContext = _repeatUtilities.createFullOverrideContext;\nexports.updateOverrideContext = _repeatUtilities.updateOverrideContext;\nexports.getItemsSourceExpression = _repeatUtilities.getItemsSourceExpression;\nexports.isOneTime = _repeatUtilities.isOneTime;\nexports.updateOneTimeBinding = _repeatUtilities.updateOneTimeBinding;\nexports.unwrapExpression = _repeatUtilities.unwrapExpression;\nexports.viewsRequireLifecycle = _analyzeViewFactory.viewsRequireLifecycle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/aurelia-templating-resources.js\n// module id = aurelia-templating-resources\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AttrBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar AttrBindingBehavior = exports.AttrBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('attr'), _dec(_class = function () {\n  function AttrBindingBehavior() {\n    \n  }\n\n  AttrBindingBehavior.prototype.bind = function bind(binding, source) {\n    binding.targetObserver = new _aureliaBinding.DataAttributeObserver(binding.target, binding.targetProperty);\n  };\n\n  AttrBindingBehavior.prototype.unbind = function unbind(binding, source) {};\n\n  return AttrBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/attr-binding-behavior.js\n// module id = aurelia-templating-resources/attr-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TwoWayBindingBehavior = exports.FromViewBindingBehavior = exports.ToViewBindingBehavior = exports.OneWayBindingBehavior = exports.OneTimeBindingBehavior = undefined;\n\nvar _dec, _dec2, _class, _dec3, _dec4, _class2, _dec5, _dec6, _class3, _dec7, _dec8, _class4, _dec9, _dec10, _class5;\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _aureliaMetadata = require('aurelia-metadata');\n\n\n\nvar modeBindingBehavior = {\n  bind: function bind(binding, source, lookupFunctions) {\n    binding.originalMode = binding.mode;\n    binding.mode = this.mode;\n  },\n  unbind: function unbind(binding, source) {\n    binding.mode = binding.originalMode;\n    binding.originalMode = null;\n  }\n};\n\nvar OneTimeBindingBehavior = exports.OneTimeBindingBehavior = (_dec = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec2 = (0, _aureliaBinding.bindingBehavior)('oneTime'), _dec(_class = _dec2(_class = function OneTimeBindingBehavior() {\n  \n\n  this.mode = _aureliaBinding.bindingMode.oneTime;\n}) || _class) || _class);\nvar OneWayBindingBehavior = exports.OneWayBindingBehavior = (_dec3 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec4 = (0, _aureliaBinding.bindingBehavior)('oneWay'), _dec3(_class2 = _dec4(_class2 = function OneWayBindingBehavior() {\n  \n\n  this.mode = _aureliaBinding.bindingMode.toView;\n}) || _class2) || _class2);\nvar ToViewBindingBehavior = exports.ToViewBindingBehavior = (_dec5 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec6 = (0, _aureliaBinding.bindingBehavior)('toView'), _dec5(_class3 = _dec6(_class3 = function ToViewBindingBehavior() {\n  \n\n  this.mode = _aureliaBinding.bindingMode.toView;\n}) || _class3) || _class3);\nvar FromViewBindingBehavior = exports.FromViewBindingBehavior = (_dec7 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec8 = (0, _aureliaBinding.bindingBehavior)('fromView'), _dec7(_class4 = _dec8(_class4 = function FromViewBindingBehavior() {\n  \n\n  this.mode = _aureliaBinding.bindingMode.fromView;\n}) || _class4) || _class4);\nvar TwoWayBindingBehavior = exports.TwoWayBindingBehavior = (_dec9 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec10 = (0, _aureliaBinding.bindingBehavior)('twoWay'), _dec9(_class5 = _dec10(_class5 = function TwoWayBindingBehavior() {\n  \n\n  this.mode = _aureliaBinding.bindingMode.twoWay;\n}) || _class5) || _class5);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/binding-mode-behaviors.js\n// module id = aurelia-templating-resources/binding-mode-behaviors.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Compose = undefined;\n\nvar _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTaskQueue = require('aurelia-task-queue');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaPal = require('aurelia-pal');\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\n\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar Compose = exports.Compose = (_dec = (0, _aureliaTemplating.customElement)('compose'), _dec(_class = (0, _aureliaTemplating.noView)(_class = (_class2 = function () {\n  Compose.inject = function inject() {\n    return [_aureliaPal.DOM.Element, _aureliaDependencyInjection.Container, _aureliaTemplating.CompositionEngine, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaTaskQueue.TaskQueue];\n  };\n\n  function Compose(element, container, compositionEngine, viewSlot, viewResources, taskQueue) {\n    \n\n    _initDefineProp(this, 'model', _descriptor, this);\n\n    _initDefineProp(this, 'view', _descriptor2, this);\n\n    _initDefineProp(this, 'viewModel', _descriptor3, this);\n\n    _initDefineProp(this, 'swapOrder', _descriptor4, this);\n\n    this.element = element;\n    this.container = container;\n    this.compositionEngine = compositionEngine;\n    this.viewSlot = viewSlot;\n    this.viewResources = viewResources;\n    this.taskQueue = taskQueue;\n    this.currentController = null;\n    this.currentViewModel = null;\n    this.changes = Object.create(null);\n  }\n\n  Compose.prototype.created = function created(owningView) {\n    this.owningView = owningView;\n  };\n\n  Compose.prototype.bind = function bind(bindingContext, overrideContext) {\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext;\n    this.changes.view = this.view;\n    this.changes.viewModel = this.viewModel;\n    this.changes.model = this.model;\n    if (!this.pendingTask) {\n      processChanges(this);\n    }\n  };\n\n  Compose.prototype.unbind = function unbind() {\n    this.changes = Object.create(null);\n    this.bindingContext = null;\n    this.overrideContext = null;\n    var returnToCache = true;\n    var skipAnimation = true;\n    this.viewSlot.removeAll(returnToCache, skipAnimation);\n  };\n\n  Compose.prototype.modelChanged = function modelChanged(newValue, oldValue) {\n    this.changes.model = newValue;\n    requestUpdate(this);\n  };\n\n  Compose.prototype.viewChanged = function viewChanged(newValue, oldValue) {\n    this.changes.view = newValue;\n    requestUpdate(this);\n  };\n\n  Compose.prototype.viewModelChanged = function viewModelChanged(newValue, oldValue) {\n    this.changes.viewModel = newValue;\n    requestUpdate(this);\n  };\n\n  return Compose;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'model', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'view', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'viewModel', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'swapOrder', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n})), _class2)) || _class) || _class);\n\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction tryActivateViewModel(vm, model) {\n  if (vm && typeof vm.activate === 'function') {\n    return Promise.resolve(vm.activate(model));\n  }\n}\n\nfunction createInstruction(composer, instruction) {\n  return Object.assign(instruction, {\n    bindingContext: composer.bindingContext,\n    overrideContext: composer.overrideContext,\n    owningView: composer.owningView,\n    container: composer.container,\n    viewSlot: composer.viewSlot,\n    viewResources: composer.viewResources,\n    currentController: composer.currentController,\n    host: composer.element,\n    swapOrder: composer.swapOrder\n  });\n}\n\nfunction processChanges(composer) {\n  var changes = composer.changes;\n  composer.changes = Object.create(null);\n\n  if (!('view' in changes) && !('viewModel' in changes) && 'model' in changes) {\n    composer.pendingTask = tryActivateViewModel(composer.currentViewModel, changes.model);\n    if (!composer.pendingTask) {\n      return;\n    }\n  } else {\n    var instruction = {\n      view: composer.view,\n      viewModel: composer.currentViewModel || composer.viewModel,\n      model: composer.model\n    };\n\n    instruction = Object.assign(instruction, changes);\n\n    instruction = createInstruction(composer, instruction);\n    composer.pendingTask = composer.compositionEngine.compose(instruction).then(function (controller) {\n      composer.currentController = controller;\n      composer.currentViewModel = controller ? controller.viewModel : null;\n    });\n  }\n\n  composer.pendingTask = composer.pendingTask.then(function () {\n    completeCompositionTask(composer);\n  }, function (reason) {\n    completeCompositionTask(composer);\n    throw reason;\n  });\n}\n\nfunction completeCompositionTask(composer) {\n  composer.pendingTask = null;\n  if (!isEmpty(composer.changes)) {\n    processChanges(composer);\n  }\n}\n\nfunction requestUpdate(composer) {\n  if (composer.pendingTask || composer.updateRequested) {\n    return;\n  }\n  composer.updateRequested = true;\n  composer.taskQueue.queueMicroTask(function () {\n    composer.updateRequested = false;\n    processChanges(composer);\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/compose.js\n// module id = aurelia-templating-resources/compose.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DebounceBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar unset = {};\n\nfunction debounceCallSource(event) {\n  var _this = this;\n\n  var state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  state.timeoutId = setTimeout(function () {\n    return _this.debouncedMethod(event);\n  }, state.delay);\n}\n\nfunction debounceCall(context, newValue, oldValue) {\n  var _this2 = this;\n\n  var state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  if (context !== state.callContextToDebounce) {\n    state.oldValue = unset;\n    this.debouncedMethod(context, newValue, oldValue);\n    return;\n  }\n  if (state.oldValue === unset) {\n    state.oldValue = oldValue;\n  }\n  state.timeoutId = setTimeout(function () {\n    var _oldValue = state.oldValue;\n    state.oldValue = unset;\n    _this2.debouncedMethod(context, newValue, _oldValue);\n  }, state.delay);\n}\n\nvar DebounceBindingBehavior = exports.DebounceBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('debounce'), _dec(_class = function () {\n  function DebounceBindingBehavior() {\n    \n  }\n\n  DebounceBindingBehavior.prototype.bind = function bind(binding, source) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n    var isCallSource = binding.callSource !== undefined;\n    var methodToDebounce = isCallSource ? 'callSource' : 'call';\n    var debouncer = isCallSource ? debounceCallSource : debounceCall;\n    var mode = binding.mode;\n    var callContextToDebounce = mode === _aureliaBinding.bindingMode.twoWay || mode === _aureliaBinding.bindingMode.fromView ? _aureliaBinding.targetContext : _aureliaBinding.sourceContext;\n\n    binding.debouncedMethod = binding[methodToDebounce];\n    binding.debouncedMethod.originalName = methodToDebounce;\n\n    binding[methodToDebounce] = debouncer;\n\n    binding.debounceState = {\n      callContextToDebounce: callContextToDebounce,\n      delay: delay,\n      timeoutId: 0,\n      oldValue: unset\n    };\n  };\n\n  DebounceBindingBehavior.prototype.unbind = function unbind(binding, source) {\n    var methodToRestore = binding.debouncedMethod.originalName;\n    binding[methodToRestore] = binding.debouncedMethod;\n    binding.debouncedMethod = null;\n    clearTimeout(binding.debounceState.timeoutId);\n    binding.debounceState = null;\n  };\n\n  return DebounceBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/debounce-binding-behavior.js\n// module id = aurelia-templating-resources/debounce-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Else = undefined;\n\nvar _dec, _dec2, _class;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _ifCore = require('./if-core');\n\n\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Else = exports.Else = (_dec = (0, _aureliaTemplating.customAttribute)('else'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function (_IfCore) {\n  _inherits(Else, _IfCore);\n\n  function Else(viewFactory, viewSlot) {\n    \n\n    var _this = _possibleConstructorReturn(this, _IfCore.call(this, viewFactory, viewSlot));\n\n    _this._registerInIf();\n    return _this;\n  }\n\n  Else.prototype.bind = function bind(bindingContext, overrideContext) {\n    _IfCore.prototype.bind.call(this, bindingContext, overrideContext);\n\n    if (this.ifVm.condition) {\n      this._hide();\n    } else {\n      this._show();\n    }\n  };\n\n  Else.prototype._registerInIf = function _registerInIf() {\n    var previous = this.viewSlot.anchor.previousSibling;\n    while (previous && !previous.au) {\n      previous = previous.previousSibling;\n    }\n    if (!previous || !previous.au.if) {\n      throw new Error(\"Can't find matching If for Else custom attribute.\");\n    }\n    this.ifVm = previous.au.if.viewModel;\n    this.ifVm.elseVm = this;\n  };\n\n  return Else;\n}(_ifCore.IfCore)) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/else.js\n// module id = aurelia-templating-resources/else.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Focus = undefined;\n\nvar _dec, _class;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _aureliaTaskQueue = require('aurelia-task-queue');\n\nvar _aureliaPal = require('aurelia-pal');\n\n\n\nvar Focus = exports.Focus = (_dec = (0, _aureliaTemplating.customAttribute)('focus', _aureliaBinding.bindingMode.twoWay), _dec(_class = function () {\n  Focus.inject = function inject() {\n    return [_aureliaPal.DOM.Element, _aureliaTaskQueue.TaskQueue];\n  };\n\n  function Focus(element, taskQueue) {\n    \n\n    this.element = element;\n    this.taskQueue = taskQueue;\n    this.isAttached = false;\n    this.needsApply = false;\n  }\n\n  Focus.prototype.valueChanged = function valueChanged(newValue) {\n    if (this.isAttached) {\n      this._apply();\n    } else {\n      this.needsApply = true;\n    }\n  };\n\n  Focus.prototype._apply = function _apply() {\n    var _this = this;\n\n    if (this.value) {\n      this.taskQueue.queueMicroTask(function () {\n        if (_this.value) {\n          _this.element.focus();\n        }\n      });\n    } else {\n      this.element.blur();\n    }\n  };\n\n  Focus.prototype.attached = function attached() {\n    this.isAttached = true;\n    if (this.needsApply) {\n      this.needsApply = false;\n      this._apply();\n    }\n    this.element.addEventListener('focus', this);\n    this.element.addEventListener('blur', this);\n  };\n\n  Focus.prototype.detached = function detached() {\n    this.isAttached = false;\n    this.element.removeEventListener('focus', this);\n    this.element.removeEventListener('blur', this);\n  };\n\n  Focus.prototype.handleEvent = function handleEvent(e) {\n    if (e.type === 'focus') {\n      this.value = true;\n    } else if (_aureliaPal.DOM.activeElement !== this.element) {\n      this.value = false;\n    }\n  };\n\n  return Focus;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/focus.js\n// module id = aurelia-templating-resources/focus.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hide = undefined;\n\nvar _dec, _class;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaPal = require('aurelia-pal');\n\nvar _aureliaHideStyle = require('./aurelia-hide-style');\n\n\n\nvar Hide = exports.Hide = (_dec = (0, _aureliaTemplating.customAttribute)('hide'), _dec(_class = function () {\n  Hide.inject = function inject() {\n    return [_aureliaPal.DOM.Element, _aureliaTemplating.Animator, _aureliaDependencyInjection.Optional.of(_aureliaPal.DOM.boundary, true)];\n  };\n\n  function Hide(element, animator, domBoundary) {\n    \n\n    this.element = element;\n    this.animator = animator;\n    this.domBoundary = domBoundary;\n  }\n\n  Hide.prototype.created = function created() {\n    (0, _aureliaHideStyle.injectAureliaHideStyleAtBoundary)(this.domBoundary);\n  };\n\n  Hide.prototype.valueChanged = function valueChanged(newValue) {\n    if (newValue) {\n      this.animator.addClass(this.element, _aureliaHideStyle.aureliaHideClassName);\n    } else {\n      this.animator.removeClass(this.element, _aureliaHideStyle.aureliaHideClassName);\n    }\n  };\n\n  Hide.prototype.bind = function bind(bindingContext) {\n    this.valueChanged(this.value);\n  };\n\n  return Hide;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/hide.js\n// module id = aurelia-templating-resources/hide.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.If = undefined;\n\nvar _dec, _dec2, _dec3, _class, _desc, _value, _class2, _descriptor, _descriptor2;\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _ifCore = require('./if-core');\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\n\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar If = exports.If = (_dec = (0, _aureliaTemplating.customAttribute)('if'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec3 = (0, _aureliaTemplating.bindable)({ primaryProperty: true }), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = (_class2 = function (_IfCore) {\n  _inherits(If, _IfCore);\n\n  function If() {\n    var _temp, _this, _ret;\n\n    \n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _IfCore.call.apply(_IfCore, [this].concat(args))), _this), _initDefineProp(_this, 'condition', _descriptor, _this), _initDefineProp(_this, 'swapOrder', _descriptor2, _this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  If.prototype.bind = function bind(bindingContext, overrideContext) {\n    _IfCore.prototype.bind.call(this, bindingContext, overrideContext);\n    if (this.condition) {\n      this._show();\n    } else {\n      this._hide();\n    }\n  };\n\n  If.prototype.conditionChanged = function conditionChanged(newValue) {\n    this._update(newValue);\n  };\n\n  If.prototype._update = function _update(show) {\n    var _this2 = this;\n\n    if (this.animating) {\n      return;\n    }\n\n    var promise = void 0;\n    if (this.elseVm) {\n      promise = show ? this._swap(this.elseVm, this) : this._swap(this, this.elseVm);\n    } else {\n      promise = show ? this._show() : this._hide();\n    }\n\n    if (promise) {\n      this.animating = true;\n      promise.then(function () {\n        _this2.animating = false;\n        if (_this2.condition !== _this2.showing) {\n          _this2._update(_this2.condition);\n        }\n      });\n    }\n  };\n\n  If.prototype._swap = function _swap(remove, add) {\n    switch (this.swapOrder) {\n      case 'before':\n        return Promise.resolve(add._show()).then(function () {\n          return remove._hide();\n        });\n      case 'with':\n        return Promise.all([remove._hide(), add._show()]);\n      default:\n        var promise = remove._hide();\n        return promise ? promise.then(function () {\n          return add._show();\n        }) : add._show();\n    }\n  };\n\n  return If;\n}(_ifCore.IfCore), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'condition', [_dec3], {\n  enumerable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'swapOrder', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n})), _class2)) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/if.js\n// module id = aurelia-templating-resources/if.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repeat = undefined;\n\nvar _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _repeatStrategyLocator = require('./repeat-strategy-locator');\n\nvar _repeatUtilities = require('./repeat-utilities');\n\nvar _analyzeViewFactory = require('./analyze-view-factory');\n\nvar _abstractRepeater = require('./abstract-repeater');\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\n\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar Repeat = exports.Repeat = (_dec = (0, _aureliaTemplating.customAttribute)('repeat'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.TargetInstruction, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaBinding.ObserverLocator, _repeatStrategyLocator.RepeatStrategyLocator), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = (_class2 = function (_AbstractRepeater) {\n  _inherits(Repeat, _AbstractRepeater);\n\n  function Repeat(viewFactory, instruction, viewSlot, viewResources, observerLocator, strategyLocator) {\n    \n\n    var _this = _possibleConstructorReturn(this, _AbstractRepeater.call(this, {\n      local: 'item',\n      viewsRequireLifecycle: (0, _analyzeViewFactory.viewsRequireLifecycle)(viewFactory)\n    }));\n\n    _initDefineProp(_this, 'items', _descriptor, _this);\n\n    _initDefineProp(_this, 'local', _descriptor2, _this);\n\n    _initDefineProp(_this, 'key', _descriptor3, _this);\n\n    _initDefineProp(_this, 'value', _descriptor4, _this);\n\n    _this.viewFactory = viewFactory;\n    _this.instruction = instruction;\n    _this.viewSlot = viewSlot;\n    _this.lookupFunctions = viewResources.lookupFunctions;\n    _this.observerLocator = observerLocator;\n    _this.key = 'key';\n    _this.value = 'value';\n    _this.strategyLocator = strategyLocator;\n    _this.ignoreMutation = false;\n    _this.sourceExpression = (0, _repeatUtilities.getItemsSourceExpression)(_this.instruction, 'repeat.for');\n    _this.isOneTime = (0, _repeatUtilities.isOneTime)(_this.sourceExpression);\n    _this.viewsRequireLifecycle = (0, _analyzeViewFactory.viewsRequireLifecycle)(viewFactory);\n    return _this;\n  }\n\n  Repeat.prototype.call = function call(context, changes) {\n    this[context](this.items, changes);\n  };\n\n  Repeat.prototype.bind = function bind(bindingContext, overrideContext) {\n    this.scope = { bindingContext: bindingContext, overrideContext: overrideContext };\n    this.matcherBinding = this._captureAndRemoveMatcherBinding();\n    this.itemsChanged();\n  };\n\n  Repeat.prototype.unbind = function unbind() {\n    this.scope = null;\n    this.items = null;\n    this.matcherBinding = null;\n    this.viewSlot.removeAll(true, true);\n    this._unsubscribeCollection();\n  };\n\n  Repeat.prototype._unsubscribeCollection = function _unsubscribeCollection() {\n    if (this.collectionObserver) {\n      this.collectionObserver.unsubscribe(this.callContext, this);\n      this.collectionObserver = null;\n      this.callContext = null;\n    }\n  };\n\n  Repeat.prototype.itemsChanged = function itemsChanged() {\n    var _this2 = this;\n\n    this._unsubscribeCollection();\n\n    if (!this.scope) {\n      return;\n    }\n\n    var items = this.items;\n    this.strategy = this.strategyLocator.getStrategy(items);\n    if (!this.strategy) {\n      throw new Error('Value for \\'' + this.sourceExpression + '\\' is non-repeatable');\n    }\n\n    if (!this.isOneTime && !this._observeInnerCollection()) {\n      this._observeCollection();\n    }\n    this.ignoreMutation = true;\n    this.strategy.instanceChanged(this, items);\n    this.observerLocator.taskQueue.queueMicroTask(function () {\n      _this2.ignoreMutation = false;\n    });\n  };\n\n  Repeat.prototype._getInnerCollection = function _getInnerCollection() {\n    var expression = (0, _repeatUtilities.unwrapExpression)(this.sourceExpression);\n    if (!expression) {\n      return null;\n    }\n    return expression.evaluate(this.scope, null);\n  };\n\n  Repeat.prototype.handleCollectionMutated = function handleCollectionMutated(collection, changes) {\n    if (!this.collectionObserver) {\n      return;\n    }\n    if (this.ignoreMutation) {\n      return;\n    }\n    this.strategy.instanceMutated(this, collection, changes);\n  };\n\n  Repeat.prototype.handleInnerCollectionMutated = function handleInnerCollectionMutated(collection, changes) {\n    var _this3 = this;\n\n    if (!this.collectionObserver) {\n      return;\n    }\n\n    if (this.ignoreMutation) {\n      return;\n    }\n    this.ignoreMutation = true;\n    var newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);\n    this.observerLocator.taskQueue.queueMicroTask(function () {\n      return _this3.ignoreMutation = false;\n    });\n\n    if (newItems === this.items) {\n      this.itemsChanged();\n    } else {\n      this.items = newItems;\n    }\n  };\n\n  Repeat.prototype._observeInnerCollection = function _observeInnerCollection() {\n    var items = this._getInnerCollection();\n    var strategy = this.strategyLocator.getStrategy(items);\n    if (!strategy) {\n      return false;\n    }\n    this.collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);\n    if (!this.collectionObserver) {\n      return false;\n    }\n    this.callContext = 'handleInnerCollectionMutated';\n    this.collectionObserver.subscribe(this.callContext, this);\n    return true;\n  };\n\n  Repeat.prototype._observeCollection = function _observeCollection() {\n    var items = this.items;\n    this.collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, items);\n    if (this.collectionObserver) {\n      this.callContext = 'handleCollectionMutated';\n      this.collectionObserver.subscribe(this.callContext, this);\n    }\n  };\n\n  Repeat.prototype._captureAndRemoveMatcherBinding = function _captureAndRemoveMatcherBinding() {\n    if (this.viewFactory.viewFactory) {\n      var instructions = this.viewFactory.viewFactory.instructions;\n      var instructionIds = Object.keys(instructions);\n      for (var i = 0; i < instructionIds.length; i++) {\n        var expressions = instructions[instructionIds[i]].expressions;\n        if (expressions) {\n          for (var ii = 0; i < expressions.length; i++) {\n            if (expressions[ii].targetProperty === 'matcher') {\n              var matcherBinding = expressions[ii];\n              expressions.splice(ii, 1);\n              return matcherBinding;\n            }\n          }\n        }\n      }\n    }\n\n    return undefined;\n  };\n\n  Repeat.prototype.viewCount = function viewCount() {\n    return this.viewSlot.children.length;\n  };\n\n  Repeat.prototype.views = function views() {\n    return this.viewSlot.children;\n  };\n\n  Repeat.prototype.view = function view(index) {\n    return this.viewSlot.children[index];\n  };\n\n  Repeat.prototype.matcher = function matcher() {\n    return this.matcherBinding ? this.matcherBinding.sourceExpression.evaluate(this.scope, this.matcherBinding.lookupFunctions) : null;\n  };\n\n  Repeat.prototype.addView = function addView(bindingContext, overrideContext) {\n    var view = this.viewFactory.create();\n    view.bind(bindingContext, overrideContext);\n    this.viewSlot.add(view);\n  };\n\n  Repeat.prototype.insertView = function insertView(index, bindingContext, overrideContext) {\n    var view = this.viewFactory.create();\n    view.bind(bindingContext, overrideContext);\n    this.viewSlot.insert(index, view);\n  };\n\n  Repeat.prototype.moveView = function moveView(sourceIndex, targetIndex) {\n    this.viewSlot.move(sourceIndex, targetIndex);\n  };\n\n  Repeat.prototype.removeAllViews = function removeAllViews(returnToCache, skipAnimation) {\n    return this.viewSlot.removeAll(returnToCache, skipAnimation);\n  };\n\n  Repeat.prototype.removeViews = function removeViews(viewsToRemove, returnToCache, skipAnimation) {\n    return this.viewSlot.removeMany(viewsToRemove, returnToCache, skipAnimation);\n  };\n\n  Repeat.prototype.removeView = function removeView(index, returnToCache, skipAnimation) {\n    return this.viewSlot.removeAt(index, returnToCache, skipAnimation);\n  };\n\n  Repeat.prototype.updateBindings = function updateBindings(view) {\n    var j = view.bindings.length;\n    while (j--) {\n      (0, _repeatUtilities.updateOneTimeBinding)(view.bindings[j]);\n    }\n    j = view.controllers.length;\n    while (j--) {\n      var k = view.controllers[j].boundProperties.length;\n      while (k--) {\n        var binding = view.controllers[j].boundProperties[k].binding;\n        (0, _repeatUtilities.updateOneTimeBinding)(binding);\n      }\n    }\n  };\n\n  return Repeat;\n}(_abstractRepeater.AbstractRepeater), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'items', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'local', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'key', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'value', [_aureliaTemplating.bindable], {\n  enumerable: true,\n  initializer: null\n})), _class2)) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/repeat.js\n// module id = aurelia-templating-resources/repeat.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Replaceable = undefined;\n\nvar _dec, _dec2, _class;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\n\n\nvar Replaceable = exports.Replaceable = (_dec = (0, _aureliaTemplating.customAttribute)('replaceable'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function () {\n  function Replaceable(viewFactory, viewSlot) {\n    \n\n    this.viewFactory = viewFactory;\n    this.viewSlot = viewSlot;\n    this.view = null;\n  }\n\n  Replaceable.prototype.bind = function bind(bindingContext, overrideContext) {\n    if (this.view === null) {\n      this.view = this.viewFactory.create();\n      this.viewSlot.add(this.view);\n    }\n\n    this.view.bind(bindingContext, overrideContext);\n  };\n\n  Replaceable.prototype.unbind = function unbind() {\n    this.view.unbind();\n  };\n\n  return Replaceable;\n}()) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/replaceable.js\n// module id = aurelia-templating-resources/replaceable.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SanitizeHTMLValueConverter = undefined;\n\nvar _dec, _dec2, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _htmlSanitizer = require('./html-sanitizer');\n\n\n\nvar SanitizeHTMLValueConverter = exports.SanitizeHTMLValueConverter = (_dec = (0, _aureliaBinding.valueConverter)('sanitizeHTML'), _dec2 = (0, _aureliaDependencyInjection.inject)(_htmlSanitizer.HTMLSanitizer), _dec(_class = _dec2(_class = function () {\n  function SanitizeHTMLValueConverter(sanitizer) {\n    \n\n    this.sanitizer = sanitizer;\n  }\n\n  SanitizeHTMLValueConverter.prototype.toView = function toView(untrustedMarkup) {\n    if (untrustedMarkup === null || untrustedMarkup === undefined) {\n      return null;\n    }\n\n    return this.sanitizer.sanitize(untrustedMarkup);\n  };\n\n  return SanitizeHTMLValueConverter;\n}()) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/sanitize-html.js\n// module id = aurelia-templating-resources/sanitize-html.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelfBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nfunction findOriginalEventTarget(event) {\n  return event.path && event.path[0] || event.deepPath && event.deepPath[0] || event.target;\n}\n\nfunction handleSelfEvent(event) {\n  var target = findOriginalEventTarget(event);\n  if (this.target !== target) return;\n  this.selfEventCallSource(event);\n}\n\nvar SelfBindingBehavior = exports.SelfBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('self'), _dec(_class = function () {\n  function SelfBindingBehavior() {\n    \n  }\n\n  SelfBindingBehavior.prototype.bind = function bind(binding, source) {\n    if (!binding.callSource || !binding.targetEvent) throw new Error('Self binding behavior only supports event.');\n    binding.selfEventCallSource = binding.callSource;\n    binding.callSource = handleSelfEvent;\n  };\n\n  SelfBindingBehavior.prototype.unbind = function unbind(binding, source) {\n    binding.callSource = binding.selfEventCallSource;\n    binding.selfEventCallSource = null;\n  };\n\n  return SelfBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/self-binding-behavior.js\n// module id = aurelia-templating-resources/self-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Show = undefined;\n\nvar _dec, _class;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaPal = require('aurelia-pal');\n\nvar _aureliaHideStyle = require('./aurelia-hide-style');\n\n\n\nvar Show = exports.Show = (_dec = (0, _aureliaTemplating.customAttribute)('show'), _dec(_class = function () {\n  Show.inject = function inject() {\n    return [_aureliaPal.DOM.Element, _aureliaTemplating.Animator, _aureliaDependencyInjection.Optional.of(_aureliaPal.DOM.boundary, true)];\n  };\n\n  function Show(element, animator, domBoundary) {\n    \n\n    this.element = element;\n    this.animator = animator;\n    this.domBoundary = domBoundary;\n  }\n\n  Show.prototype.created = function created() {\n    (0, _aureliaHideStyle.injectAureliaHideStyleAtBoundary)(this.domBoundary);\n  };\n\n  Show.prototype.valueChanged = function valueChanged(newValue) {\n    if (newValue) {\n      this.animator.removeClass(this.element, _aureliaHideStyle.aureliaHideClassName);\n    } else {\n      this.animator.addClass(this.element, _aureliaHideStyle.aureliaHideClassName);\n    }\n  };\n\n  Show.prototype.bind = function bind(bindingContext) {\n    this.valueChanged(this.value);\n  };\n\n  return Show;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/show.js\n// module id = aurelia-templating-resources/show.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignalBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\nvar _bindingSignaler = require('./binding-signaler');\n\n\n\nvar SignalBindingBehavior = exports.SignalBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('signal'), _dec(_class = function () {\n  SignalBindingBehavior.inject = function inject() {\n    return [_bindingSignaler.BindingSignaler];\n  };\n\n  function SignalBindingBehavior(bindingSignaler) {\n    \n\n    this.signals = bindingSignaler.signals;\n  }\n\n  SignalBindingBehavior.prototype.bind = function bind(binding, source) {\n    if (!binding.updateTarget) {\n      throw new Error('Only property bindings and string interpolation bindings can be signaled.  Trigger, delegate and call bindings cannot be signaled.');\n    }\n    if (arguments.length === 3) {\n      var name = arguments[2];\n      var bindings = this.signals[name] || (this.signals[name] = []);\n      bindings.push(binding);\n      binding.signalName = name;\n    } else if (arguments.length > 3) {\n      var names = Array.prototype.slice.call(arguments, 2);\n      var i = names.length;\n      while (i--) {\n        var _name = names[i];\n        var _bindings = this.signals[_name] || (this.signals[_name] = []);\n        _bindings.push(binding);\n      }\n      binding.signalName = names;\n    } else {\n      throw new Error('Signal name is required.');\n    }\n  };\n\n  SignalBindingBehavior.prototype.unbind = function unbind(binding, source) {\n    var name = binding.signalName;\n    binding.signalName = null;\n    if (Array.isArray(name)) {\n      var names = name;\n      var i = names.length;\n      while (i--) {\n        var n = names[i];\n        var bindings = this.signals[n];\n        bindings.splice(bindings.indexOf(binding), 1);\n      }\n    } else {\n      var _bindings2 = this.signals[name];\n      _bindings2.splice(_bindings2.indexOf(binding), 1);\n    }\n  };\n\n  return SignalBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/signal-binding-behavior.js\n// module id = aurelia-templating-resources/signal-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThrottleBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nfunction throttle(newValue) {\n  var _this = this;\n\n  var state = this.throttleState;\n  var elapsed = +new Date() - state.last;\n  if (elapsed >= state.delay) {\n    clearTimeout(state.timeoutId);\n    state.timeoutId = null;\n    state.last = +new Date();\n    this.throttledMethod(newValue);\n    return;\n  }\n  state.newValue = newValue;\n  if (state.timeoutId === null) {\n    state.timeoutId = setTimeout(function () {\n      state.timeoutId = null;\n      state.last = +new Date();\n      _this.throttledMethod(state.newValue);\n    }, state.delay - elapsed);\n  }\n}\n\nvar ThrottleBindingBehavior = exports.ThrottleBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('throttle'), _dec(_class = function () {\n  function ThrottleBindingBehavior() {\n    \n  }\n\n  ThrottleBindingBehavior.prototype.bind = function bind(binding, source) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n    var methodToThrottle = 'updateTarget';\n    if (binding.callSource) {\n      methodToThrottle = 'callSource';\n    } else if (binding.updateSource && binding.mode === _aureliaBinding.bindingMode.twoWay) {\n      methodToThrottle = 'updateSource';\n    }\n\n    binding.throttledMethod = binding[methodToThrottle];\n    binding.throttledMethod.originalName = methodToThrottle;\n\n    binding[methodToThrottle] = throttle;\n\n    binding.throttleState = {\n      delay: delay,\n      last: 0,\n      timeoutId: null\n    };\n  };\n\n  ThrottleBindingBehavior.prototype.unbind = function unbind(binding, source) {\n    var methodToRestore = binding.throttledMethod.originalName;\n    binding[methodToRestore] = binding.throttledMethod;\n    binding.throttledMethod = null;\n    clearTimeout(binding.throttleState.timeoutId);\n    binding.throttleState = null;\n  };\n\n  return ThrottleBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/throttle-binding-behavior.js\n// module id = aurelia-templating-resources/throttle-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateTriggerBindingBehavior = undefined;\n\nvar _dec, _class;\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar eventNamesRequired = 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind=\"firstName & updateTrigger:\\'blur\\'\">';\nvar notApplicableMessage = 'The updateTrigger binding behavior can only be applied to two-way/ from-view bindings on input/select elements.';\n\nvar UpdateTriggerBindingBehavior = exports.UpdateTriggerBindingBehavior = (_dec = (0, _aureliaBinding.bindingBehavior)('updateTrigger'), _dec(_class = function () {\n  function UpdateTriggerBindingBehavior() {\n    \n  }\n\n  UpdateTriggerBindingBehavior.prototype.bind = function bind(binding, source) {\n    for (var _len = arguments.length, events = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      events[_key - 2] = arguments[_key];\n    }\n\n    if (events.length === 0) {\n      throw new Error(eventNamesRequired);\n    }\n    if (binding.mode !== _aureliaBinding.bindingMode.twoWay && binding.mode !== _aureliaBinding.bindingMode.fromView) {\n      throw new Error(notApplicableMessage);\n    }\n\n    var targetObserver = binding.observerLocator.getObserver(binding.target, binding.targetProperty);\n    if (!targetObserver.handler) {\n      throw new Error(notApplicableMessage);\n    }\n    binding.targetObserver = targetObserver;\n\n    targetObserver.originalHandler = binding.targetObserver.handler;\n\n    var handler = new _aureliaBinding.EventSubscriber(events);\n    targetObserver.handler = handler;\n  };\n\n  UpdateTriggerBindingBehavior.prototype.unbind = function unbind(binding, source) {\n    binding.targetObserver.handler.dispose();\n    binding.targetObserver.handler = binding.targetObserver.originalHandler;\n    binding.targetObserver.originalHandler = null;\n  };\n\n  return UpdateTriggerBindingBehavior;\n}()) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/update-trigger-binding-behavior.js\n// module id = aurelia-templating-resources/update-trigger-binding-behavior.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.With = undefined;\n\nvar _dec, _dec2, _class;\n\nvar _aureliaDependencyInjection = require('aurelia-dependency-injection');\n\nvar _aureliaTemplating = require('aurelia-templating');\n\nvar _aureliaBinding = require('aurelia-binding');\n\n\n\nvar With = exports.With = (_dec = (0, _aureliaTemplating.customAttribute)('with'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function () {\n  function With(viewFactory, viewSlot) {\n    \n\n    this.viewFactory = viewFactory;\n    this.viewSlot = viewSlot;\n    this.parentOverrideContext = null;\n    this.view = null;\n  }\n\n  With.prototype.bind = function bind(bindingContext, overrideContext) {\n    this.parentOverrideContext = overrideContext;\n    this.valueChanged(this.value);\n  };\n\n  With.prototype.valueChanged = function valueChanged(newValue) {\n    var overrideContext = (0, _aureliaBinding.createOverrideContext)(newValue, this.parentOverrideContext);\n    if (!this.view) {\n      this.view = this.viewFactory.create();\n      this.view.bind(newValue, overrideContext);\n      this.viewSlot.add(this.view);\n    } else {\n      this.view.bind(newValue, overrideContext);\n    }\n  };\n\n  With.prototype.unbind = function unbind() {\n    this.parentOverrideContext = null;\n\n    if (this.view) {\n      this.view.unbind();\n    }\n  };\n\n  return With;\n}()) || _class) || _class) || _class);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-resources/dist/commonjs/with.js\n// module id = aurelia-templating-resources/with.js\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configure = exports.RouteHref = exports.RouterView = exports.TemplatingRouteLoader = undefined;\n\nvar _aureliaRouter = require('aurelia-router');\n\nvar _routeLoader = require('./route-loader');\n\nvar _routerView = require('./router-view');\n\nvar _routeHref = require('./route-href');\n\nfunction configure(config) {\n  config.singleton(_aureliaRouter.RouteLoader, _routeLoader.TemplatingRouteLoader).singleton(_aureliaRouter.Router, _aureliaRouter.AppRouter).globalResources(_routerView.RouterView, _routeHref.RouteHref);\n\n  config.container.registerAlias(_aureliaRouter.Router, _aureliaRouter.AppRouter);\n}\n\nexports.TemplatingRouteLoader = _routeLoader.TemplatingRouteLoader;\nexports.RouterView = _routerView.RouterView;\nexports.RouteHref = _routeHref.RouteHref;\nexports.configure = configure;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/aurelia-templating-router/dist/commonjs/aurelia-templating-router.js\n// module id = aurelia-templating-router\n// module chunks = 1"],"sourceRoot":""}